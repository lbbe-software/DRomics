[{"path":"/articles/DRomics_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview of the DRomics package","text":"DRomics freely available tool dose-response (concentration-response) characterization omics data. especially dedicated omics data obtained using typical dose-response design, favoring great number tested doses (concentrations) rather great number replicates (need replicates use DRomics). first step consists importing, checking needed normalizing/transforming data (step 1), aim proposed workflow select monotonic /biphasic significantly responsive items (e.g. probes, contigs, metabolites) (step 2), choose best-fit model among predefined family monotonic biphasic models describe response selected item (step 3), derive benchmark dose concentration fitted curve (step 4). steps can performed R using DRomics functions, using shiny application named DRomics-shiny. available version, DRomics supports single-channel microarray data (log2 scale), RNAseq data (raw counts) continuous omics data (log scale), metabolomics data calculated AUC values (area curve), proteomics data expressed protein abundance peak intensity values. Proteomics data expressed spectral counts analyzed RNAseq data using raw counts carefully checking validity assumptions made processing RNAseq data. order link responses across biological levels based common method, DRomics also handles continuous apical data long meet use conditions least squares regression (homoscedastic Gaussian regression, see section least squares reminder needed). built environmental risk assessment context omics data often collected non-sequenced species species communities, DRomics provide annotation pipeline. annotation items selected DRomics may complex context, must done outside DRomics using databases KEGG Gene Ontology. DRomics functions can used help interpretation workflow results view biological annotation. enables multi-omics approach, comparison responses different levels organization (view common biological annotation). can also used compare responses one organization level, measured different experimental conditions (e.g. different time points). interpretation can performed R using DRomics functions, using second shiny application DRomicsInterpreter-shiny. vignette intended help users start using DRomics package. complementary reference manual can find details function package. first part vignette (Main workflow, steps 1 4) also help users first shiny application DRomics-shiny. second part (Help biological interpretation DRomics outputs) also help users second shiny application DRomicsInterpreter-shiny. shiny applications can used locally R session installation package required shiny tools (see DRomics web page need help install package: https://lbbe.univ-lyon1.fr/fr/dromics) want install package computer, can also launch two shiny applications shiny server lab, respectively https://lbbe-shiny.univ-lyon1.fr/DRomics/inst/DRomics-shiny/ https://lbbe-shiny.univ-lyon1.fr/DRomics/inst/DRomicsInterpreter-shiny/. want use R functions prefer use shiny applications, locally computer shiny server, can skip pieces code focus explanations outputs also given shiny applications. one day want go using R functions, recommend start whole R code corresponding analysis provided last page two shiny applications.","code":"# Installation of required shiny packages install.packages(c(\"shiny\", \"shinyBS\", \"shinycssloaders\", \"shinyjs\", \"shinyWidgets\", \"sortable\"))  # Launch of the first shiny application DRomics-shiny  shiny::runApp(system.file(\"DRomics-shiny\", package = \"DRomics\"))  # Launch of the second shiny application DRomicsInterpreter-shiny shiny::runApp(system.file(\"DRomicsInterpreter-shiny\", package = \"DRomics\"))"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"textfile","dir":"Articles","previous_headings":"Main workflow > Step 1: importation, check and normalization / transformation of data if needed > General format of imported data","what":"Importation of data from a unique text file","title":"Overview of the DRomics package","text":"Whatever type data imported DRomics (e.g. RNAseq, microarray, metabolomic data), data can imported .txt file (e.g. “mydata.txt”) organized one row per item (e.g. transcript, probe, metabolite) one column per sample. additional first row, name item identifier (e.g. “id”), must tested doses concentrations numeric format corresponding sample (example, triplicates treatment, first line “item”, 0, 0, 0, 0.1, 0.1, 0.1, etc.). additional first column must give identifier item (identifier probe, transcript, metabolite, …, name endpoint anchoring data), columns give responses item sample. file imported within DRomics using internal call function read.table() default field separator (sep argument) default decimal separator (dec argument “.”). remember, necessary, transform another decimal separator (e.g. “,”) “.” importing data. Different examples .txt files formatted DRomics workflow available package, one named “RNAseq_sample.txt”. can look data coded file using following code. use local dataset formatted way, use datafilename type \"yourchosenname.txt\".","code":"# Import the text file just to see what will be automatically imported datafilename <- system.file(\"extdata\", \"RNAseq_sample.txt\", package = \"DRomics\") # datafilename <- \"yourchosenname.txt\" # for a local file # Have a look of what information is coded in this file d <- read.table(file = datafilename, header = FALSE) nrow(d) ## [1] 1000 head(d) ##             V1   V2   V3      V4      V5      V6      V7      V8      V9  V10 ## 1       RefSeq    0    0    0.22    0.22    0.22    0.67    0.67    0.67    2 ## 2    NM_144958 2072 2506 2519.00 2116.00 1999.00 2113.00 2219.00 2322.00 2359 ## 3    NR_102758    0    0    0.00    0.00    0.00    0.00    0.00    0.00    0 ## 4    NM_172405  198  265  250.00  245.00  212.00  206.00  227.00  246.00  265 ## 5    NM_029777   18   29   25.00   19.00   19.00   13.00   22.00   19.00   19 ## 6 NM_001130188    0    0    0.00    0.00    0.00    0.00    0.00    1.00    0 ##    V11  V12  V13  V14  V15 ## 1    2    2    6    6    6 ## 2 1932 1705 2110 2311 2140 ## 3    0    0    0    0    0 ## 4  205  175  288  315  242 ## 5   26   16   26   32   33 ## 6    0    0    1    0    1"},{"path":"/articles/DRomics_vignette.html","id":"Robject","dir":"Articles","previous_headings":"Main workflow > Step 1: importation, check and normalization / transformation of data if needed > General format of imported data","what":"Importation of data as an R object","title":"Overview of the DRomics package","text":"Alternatively R object class data.frame can directly given input, corresponds output read.table(file, header = FALSE) file described previous section. can see example RNAseq data set available DRomics R object (named Zhou_kidney_pce) extended version (rows) previous dataset coded “RNAseq_sample.txt”. data already imported R different format one described , can use formatdata4DRomics() function build R object directly useable DRomics workflow. formatdata4DRomics() needs two arguments input: matrix data one row item one column sample, numeric vector coding dose sample. names samples can added third optional argument (see ?formatdata4DRomics details). example using RNAseq dataset package coded R object named zebraf. Whatever way format data, strongly recommend carefully look following sections check use good scale data, depends type measured signal  (counts reads, fluorescence signal, …).","code":"# Load and look at the dataset directly coded as an R object data(Zhou_kidney_pce) nrow(Zhou_kidney_pce) ## [1] 33395 head(Zhou_kidney_pce) ##             V1   V2   V3      V4      V5      V6      V7      V8      V9  V10 ## 1       RefSeq    0    0    0.22    0.22    0.22    0.67    0.67    0.67    2 ## 2    NM_144958 2072 2506 2519.00 2116.00 1999.00 2113.00 2219.00 2322.00 2359 ## 3    NR_102758    0    0    0.00    0.00    0.00    0.00    0.00    0.00    0 ## 4    NM_172405  198  265  250.00  245.00  212.00  206.00  227.00  246.00  265 ## 5    NM_029777   18   29   25.00   19.00   19.00   13.00   22.00   19.00   19 ## 6 NM_001130188    0    0    0.00    0.00    0.00    0.00    0.00    1.00    0 ##    V11  V12  V13  V14  V15 ## 1    2    2    6    6    6 ## 2 1932 1705 2110 2311 2140 ## 3    0    0    0    0    0 ## 4  205  175  288  315  242 ## 5   26   16   26   32   33 ## 6    0    0    1    0    1 # Load and look at the data as initially coded data(zebraf) str(zebraf) ## List of 3 ##  $ counts: int [1:1000, 1:16] 453 331 897 12 326 533 1948 904 583 154 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:1000] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" \"ENSDARG00000115971\" ... ##   .. ..$ : chr [1:16] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\" ... ##  $ dose  : num [1:16] 500 500 500 0 0 0 0 50000 50000 50000 ... ##  $ batch : Factor w/ 2 levels \"I10\",\"I17\": 1 1 1 1 1 1 1 2 2 2 ... (samples <- colnames(zebraf$counts)) ##  [1] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\"      \"I10_C6\"      ##  [6] \"I10_C7\"      \"I10_C8\"      \"I17_50mG_E5\" \"I17_50mG_E6\" \"I17_50mG_E8\" ## [11] \"I17_5mG_E5\"  \"I17_5mG_E7\"  \"I17_5mG_E8\"  \"I17_C5\"      \"I17_C7\"      ## [16] \"I17_C8\" # Formatting of data for use in DRomics #  data4DRomics <- formatdata4DRomics(signalmatrix = zebraf$counts,                             dose = zebraf$dose,                             samplenames = samples) # Look at the dataset coded as an R object nrow(data4DRomics) ## [1] 1001 head(data4DRomics) ##                      I10_05mG_E5 I10_05mG_E6 I10_05mG_E7 I10_C5 I10_C6 I10_C7 ## 1               item         500         500         500      0      0      0 ## 2 ENSDARG00000102141         453         656         590    636    529    453 ## 3 ENSDARG00000102123         331         505         401    465    488    430 ## 4 ENSDARG00000114503         897        1055        1073   1017   1022    992 ## 5 ENSDARG00000115971          12          23          24     21     40     32 ## 6 ENSDARG00000098311         326         544         416    484    330    297 ##   I10_C8 I17_50mG_E5 I17_50mG_E6 I17_50mG_E8 I17_5mG_E5 I17_5mG_E7 I17_5mG_E8 ## 1      0       50000       50000       50000       5000       5000       5000 ## 2    566         790         557        1005        688        775        425 ## 3    582         498         427         815        450        675        307 ## 4   1124        1153         900        2115       1064       1555        824 ## 5     30          22          14          34         19         36         21 ## 6    396         502         380        1065        522        688        332 ##   I17_C5 I17_C7 I17_C8 ## 1      0      0      0 ## 2    719    516    667 ## 3    522    475    541 ## 4   1449   1152   1341 ## 5     44     27     22 ## 6    666    471    506"},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"description-of-the-classical-types-of-data-handled-by-dromics","dir":"Articles","previous_headings":"Main workflow > Step 1: importation, check and normalization / transformation of data if needed > What types of data can be analyzed using DRomics ?","what":"Description of the classical types of data handled by DRomics","title":"Overview of the DRomics package","text":"DRomics offers possibility work different types omics data (see following subsections description) also continuous anchoring data. working omics data, lines data frame (except first one coding doses concentrations) correspond type data (e.g. raw counts RNAseq data). working anchoring data, different lines (except first one coding doses concentrations) correspond different endpoints may correspond different types data (e.g. biomass, length,..), assumed continuous data compatible Gaussian (normal) error model (transformation needed, e.g. logarithmic transformation) selection modeling steps (see section least squares need reminder condition). Three types omics data may imported DRomics using following functions: RNAseqdata() used import RNAseq counts reads (details look example RNAseq data), microarraydata() used import single-channel microarray data log2 scale (details look example microarray data), continuousomicdata() used import continuous omics data metabolomics data, proteomics data (expressed intensity),…, scale enables use Gaussian error model (details look example metabolomic omics data). also possible import DRomics continuous anchoring data measured apical level, especially sake comparison benchmark doses (see Step 4 definition BMD) estimated different levels organization using metrics. Nevertheless, one keep mind DRomics workflow optimized automatic analysis high throughput omics data (especially implying selection modeling steps high-dimensional data) tools may better suited sole analysis apical dose-response data (details look example continuous apical data). Steps 1 2 count data internally analysed using functions Bioconductor package DESeq2, continuous omics data (microarray data continuous omics data) internally analysed using functions Bioconductor package limma continuous anchoring data internally analysed using classical lm() function.","code":""},{"path":"/articles/DRomics_vignette.html","id":"RNAseqexample","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"RNAseq data, imperatively imported raw counts (counts come Kallisto Salmon put add argument round.counts = TRUE order round ), choose transformation method used stabilize variance (“rlog” “vst”). example “vst” used make vignette quick compile, “rlog” recommended chosen default even computer intensive “vst” except number samples large (> 30) (encountered situ data example: see ?RNAseqdata section dedicated situ data details point). Whatever chosen method, data automatically normalized respect library size transformed log2 scale.  plot output shows distribution signal contigs/genes, sample, normalization transformation data.","code":"RNAseqfilename <- system.file(\"extdata\", \"RNAseq_sample.txt\", package = \"DRomics\") # RNAseqfilename <- \"yourchosenname.txt\" # for a local file (o.RNAseq <- RNAseqdata(RNAseqfilename, transfo.method = \"vst\")) ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##    0 0.22 0.67    2    6  ##    2    3    3    3    3  ## Number of items: 999  ## Identifiers of the first 20 items: ##  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" ##  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    ## [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    ## [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    ## Data were normalized with respect to library size and tranformed using  ## the following method: vst plot(o.RNAseq, cex.main = 0.8, col = \"green\")"},{"path":"/articles/DRomics_vignette.html","id":"microarrayexample","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"single-channel microarray data, imperatively imported log scale (classical recommended log2 scale), can choose array normalization methods (“cyclicloess”, “quantile”, “scale” “none”). example , “quantile” used make vignette quick compile, “cyclicloess” recommended chosen default even computer intensive others (see ?microarraydata details).  plot output shows distribution signal probes, sample, normalization data.","code":"microarrayfilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package = \"DRomics\") # microarrayfilename <- \"yourchosenname.txt\" # for a local file (o.microarray <- microarraydata(microarrayfilename, norm.method = \"quantile\")) ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##     0  0.69 1.223 2.148 3.774 6.631  ##     5     5     5     5     5     5  ## Number of items: 1000  ## Identifiers of the first 20 items: ##  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  ## [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" ## Data were normalized between arrays using the following method: quantile plot(o.microarray, cex.main = 0.8, col = \"green\")"},{"path":"/articles/DRomics_vignette.html","id":"metabolomicexample","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"Neither normalization transformation provided function continuousomicdata(). pre-treatment metabolomic data must done importation data, data must imported log scale, can directly modelled using Gaussian (normal) error model. strong hypothesis required selection items dose-reponse modeling (see section least squares reminder needed). context multi-omics approach recommend use log2 transformation, instead classical log10 data, facilitate comparison results obtained transcriptomics data generally handled log2 scale. instance, basic procedure pre-treatment metabolomic data follow three steps described thereafter: ) removing metabolites proportion missing data (non detected) across samples high (20 50 percents according tolerance level); ii) retrieving missing values data using half minimum method (.e. half minimum value found metabolite across samples); iii) log-transformation values. scaling total intensity (normalization sum signals sample) another normalization necessary pertinent, recommend three previously described steps.  plot output shows distribution signal metabolites, sample. deprecated metabolomicdata() function renamed continuousomicdata() recent versions package (keeping first name available) offer use continuous omic data proteomics data (expressed intensity) RT-qPCR data. metabolomic data, pre-treatment continuous omic data must done importation, data must imported scale enables use Gaussian error model strong hypothesis required selection items dose-response modeling.","code":"metabolofilename <- system.file(\"extdata\", \"metabolo_sample.txt\", package = \"DRomics\") # metabolofilename <- \"yourchosenname.txt\" # for a local file (o.metabolo <- continuousomicdata(metabolofilename)) ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##    0 0.69  1.1 1.79 2.92 4.78 7.76  ##   10    6    2    2    2    6    2  ## Number of items: 109  ## Identifiers of the first 20 items: ##  ##  [1] \"P_2\"  \"P_4\"  \"P_5\"  \"P_6\"  \"P_7\"  \"P_10\" \"P_11\" \"P_12\" \"P_14\" \"P_16\" ## [11] \"P_19\" \"P_21\" \"P_22\" \"P_26\" \"P_32\" \"P_34\" \"P_35\" \"P_36\" \"P_37\" \"P_38\" plot(o.metabolo, col = \"green\")"},{"path":"/articles/DRomics_vignette.html","id":"apicalexample","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"transformation provided function continuousanchoringdata(). needed pre-treatment data must done importation data, can directly modelled using Gaussian error model. strong hypothesis required selection responsive endpoints dose-reponse modeling (see section least squares reminder needed). following example argument backgrounddose used specify doses equal 0.1 considered 0 DRomics workflow. Specifying argument necessary dose 0 data (see section situ data details point).  data plot() function simply provides dose-response plot endpoint. default dose represented log scale, responses control (null dose, minus infinity log scale) appear half points Y-axis. can changed using argument dose_log_transfo .","code":"anchoringfilename <- system.file(\"extdata\", \"apical_anchoring.txt\", package = \"DRomics\") # anchoringfilename <- \"yourchosenname.txt\" # for a local file (o.anchoring <- continuousanchoringdata(anchoringfilename, backgrounddose = 0.1)) ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##    0  2.4  3.8  6.2 10.1 16.5 26.8 43.5 70.7  ##   12    6    2    2    2    6    2    2    2  ## Number of endpoints: 2  ## Names of the endpoints: ## [1] \"growth\"         \"photosynthesis\" plot(o.anchoring) + theme_bw() plot(o.anchoring, dose_log_transfo = FALSE) + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"specificdesigns","dir":"Articles","previous_headings":"Main workflow > Step 1: importation, check and normalization / transformation of data if needed > What types of data can be analyzed using DRomics ?","what":"Handling of data collected through specific designs","title":"Overview of the DRomics package","text":"DRomics workflow first developed data collected typical dose-response experiment, reasonable number tested doses (concentrations - least 4 addition control ideally 6 8) small number replicates per dose. Recently made modifications package make possible use designs 3 doses addition control even type design recommended dose-response modeling. also extended workflow handle situ (observational) data, replication, dose (concentration) controlled (see example situ data details). also now possible handle experimental data collected using design batch effect using DRomics together functions Bioconductor package sva correct batch effect selection modeling steps. also developed PCAplot() function help visualizing batch effect impact batch effect correction (BEC) data (see example RNAseq data experiment batch effect details handle case see ?PCAplot details specific function also used identify potential outlier samples).","code":""},{"path":"/articles/DRomics_vignette.html","id":"insitudata","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"One problem may occur particular situ data, absence real control samples, corresponding strictly null exposure dose concentration. prevent hazardous calculation BMD (see Step 4 definition BMD) extrapolation case, one use argument backgrounddose define maximal measured dose can considered negligible dose. doses equal value given backgrounddose fixed 0, considered background level exposition. situ data (generally data large number samples), use rlog transformation RNAseqdata() recommended, speed reason likely encounter problem rlog transformation case outliers case (see https://support.bioconductor.org/p/105334/ explanation author DESeq2 want see example problems may appear outliers case, just force transfo.method \"rlog\" following example).  plot output shows distribution signal contigs, sample (box plots stuck due large number samples), normalization transformation data.","code":"datafilename <- system.file(\"extdata\", \"insitu_RNAseq_sample.txt\", package=\"DRomics\") # Importation of data specifying that observed doses below the background dose # fixed here to 2e-2 will be considered as null dose to have a control  (o.insitu <- RNAseqdata(datafilename, backgrounddose = 2e-2, transfo.method = \"vst\")) ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##       0  0.0205  0.0216  0.0248  0.0272  0.0322  0.0339  0.0387  0.0432  0.0463  ##      25       1       1       1       1       1       1       1       1       1  ## 0.04866  0.0528  0.0726   0.101   0.112  0.1122   0.167   2.089   2.474   2.892  ##       1       1       3       1       1       1       1       1       1       1  ##   2.899   2.904   3.008    3.16   3.199   3.251   3.323   3.483   3.604   4.484  ##       1       1       1       1       1       1       1       1       1       1  ##   4.917   4.924   5.509    8.53    9.16    9.38     9.5    9.83   10.35   11.06  ##       1       1       1       1       1       1       1       1       1       1  ##   11.34   11.94   12.11   12.39   13.51    14.8   16.26   16.89    18.2   18.28  ##       1       1       1       1       1       1       1       1       1       1  ##   19.14   20.62    20.7   21.13 23.0348   23.69   24.15   27.06   28.05   29.88  ##       1       1       1       1       1       1       1       1       1       1  ##   36.28  ##       1  ## Number of items: 1000  ## Identifiers of the first 20 items: ##  [1] \"N00000000001_c0_g1\" \"N00000000002_c0_g1\" \"N00000000003_c0_g1\" ##  [4] \"N00000000004_c0_g1\" \"N00000000005_c0_g1\" \"N00000000006_c0_g1\" ##  [7] \"N00000000008_c0_g1\" \"N10000_c0_g1\"       \"N10000_c0_g1.1\"     ## [10] \"N10001_c0_g1\"       \"N10008_c1_g1\"       \"N10010_c0_g1\"       ## [13] \"N10010_c1_g1\"       \"N10011_c0_g1\"       \"N10012_c0_g1\"       ## [16] \"N100156_c0_g1\"      \"N1001_c0_g1\"        \"N10021_c0_g1\"       ## [19] \"N10021_c0_g1.1\"     \"N10021_c0_g1.2\"     ## Data were normalized with respect to library size and tranformed using  ## the following method: vst plot(o.insitu)"},{"path":"/articles/DRomics_vignette.html","id":"batcheffect","dir":"Articles","previous_headings":"","what":"Overview of the DRomics package","title":"Overview of the DRomics package","text":"omics data collected design known potential batch effect, DRomics function PCAplot() can used example visualize impact batch effect data. seems necessary, functions specific packages can used perform batch effect correction (BEC). recommend use functions ComBat() ComBat_seq() Bioconductor sva package purpose, respectively microarray (continuous omic data) RNAseq data. sva Bioconductor package, must installed way DESeq2 limma previously loaded. needed look DRomics web page get good instruction install Bioconductor packages: https://lbbe.univ-lyon1.fr/fr/dromics). example using ComBat-seq() RNAseq data batch effect. sva package import RNAseq data format DRomics, necessary use DRomics function formatdata4DRomics() interoperate ComBat-seq DRomics functions (see section importation R object details function ?formatdata4DRomics). appears design data obtained using batches, controlled condition (null dose) appearing batches.   PCA plot shows impact batch effect, clearly appears controls (red points) obtained two different batches.  PCA plot BEC shows impact correction batch effect visible controls (red points).","code":"# Load of data data(zebraf) str(zebraf) ## List of 3 ##  $ counts: int [1:1000, 1:16] 453 331 897 12 326 533 1948 904 583 154 ... ##   ..- attr(*, \"dimnames\")=List of 2 ##   .. ..$ : chr [1:1000] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" \"ENSDARG00000115971\" ... ##   .. ..$ : chr [1:16] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\" ... ##  $ dose  : num [1:16] 500 500 500 0 0 0 0 50000 50000 50000 ... ##  $ batch : Factor w/ 2 levels \"I10\",\"I17\": 1 1 1 1 1 1 1 2 2 2 ... # Look at the design of this dataset xtabs(~ zebraf$dose + zebraf$batch) ##            zebraf$batch ## zebraf$dose I10 I17 ##       0       4   3 ##       500     3   0 ##       5000    0   3 ##       50000   0   3 # Formating of data using the formatdata4DRomics() function data4DRomics <- formatdata4DRomics(signalmatrix = zebraf$counts,                             dose = zebraf$dose)  # Importation of data just to use DRomics functions # As only raw data will be given to ComBat_seq after (o <- RNAseqdata(data4DRomics)) ## Just wait, the transformation using regularized logarithm (rlog) may  ## take a few minutes. ## Elements of the experimental design in order to check the coding of the data: ## Tested doses and number of replicates for each dose: ##  ##     0   500  5000 50000  ##     7     3     3     3  ## Number of items: 1000  ## Identifiers of the first 20 items: ##  [1] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" ##  [4] \"ENSDARG00000115971\" \"ENSDARG00000098311\" \"ENSDARG00000104839\" ##  [7] \"ENSDARG00000100143\" \"ENSDARG00000102474\" \"ENSDARG00000104049\" ## [10] \"ENSDARG00000102226\" \"ENSDARG00000103095\" \"ENSDARG00000102128\" ## [13] \"ENSDARG00000110470\" \"ENSDARG00000100422\" \"ENSDARG00000104632\" ## [16] \"ENSDARG00000100660\" \"ENSDARG00000113107\" \"ENSDARG00000099787\" ## [19] \"ENSDARG00000112451\" \"ENSDARG00000070546\" ## Data were normalized with respect to library size and tranformed using  ## the following method: rlog # PCA plot with the sample labels PCAdataplot(o, label = TRUE) + theme_bw() # PCA plot to visualize the batch effect PCAdataplot(o, batch = zebraf$batch) + theme_bw() # Batch effect correction using ComBat_seq{sva} require(sva) BECcounts <- ComBat_seq(as.matrix(o$raw.counts),                          batch = as.factor(zebraf$batch),                          group = as.factor(o$dose)) # Formating of data after batch effect correction BECdata4DRomics <- formatdata4DRomics(signalmatrix = BECcounts,                                     dose = o$dose) o.BEC <- RNAseqdata(BECdata4DRomics) ## Just wait, the transformation using regularized logarithm (rlog) may  ## take a few minutes. # PCA plot after batch effect correction PCAdataplot(o.BEC, batch = zebraf$batch) + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"step2","dir":"Articles","previous_headings":"Main workflow","what":"Step 2: selection of significantly responding items","title":"Overview of the DRomics package","text":"second step workflow, function itemselect() must used simply taking input first argument output function used step 1 (output RNAseqdata(), microarraydata(), continuousomicdata() continuousanchoringdata()). example microarray data. false discovery rate (FDR) corresponds expected proportion items falsely detected responsive. large data set important define selection step based FDR reduce number items processed, also remove noisy dose-response signals may impair quality results. recommend set value 0.001 0.1 depending initial number items. number high (several tens thousands), recommend FDR less 0.05 (0.001 0.01) increase robustness results (Larras et al. 2018). Concerning method used selection, recommend default choice (“quadratic”) typical omics dose-response design (many doses/concentrations replicates per condition). enables selection monotonic biphasic dose-response relationships. want focus monotonic dose-response relationships, “linear” method chosen. design small number doses/concentrations many replicates (optimal dose-response modeling), “ANOVA” method preferable. situ data (observational data without replicates due uncontrolled dose), trend tests proposed use ANOVA test absence replicates conditions reasonable. three methods proposed selection step based use simple model (quadratic,linear ANOVA-type) linking signal dose rank scale. model internally fitted data empirical Bayesian approach using respective packages DESeq2 limma RNAseq data microarray continuous omics data, classical linear regression using lm() function continuous anchoring data. adjustment p-values according specified FDR performed case, even continuous anchoring data, ensure unicity workflow independently type data. See ?itemselect details Larras et al. 2018 comparison three proposed methods example. easy, using example package VennDiagram, compare selection items obtained using two different methods, following example.","code":"(s_quad <- itemselect(o.microarray, select.method = \"quadratic\", FDR = 0.01)) ## Number of selected items using a quadratic trend test with an FDR of 0.01: 150 ## Identifiers of the first 20 most responsive items: ##  [1] \"383.2\" \"384.2\" \"363.1\" \"383.1\" \"384.1\" \"363.2\" \"364.2\" \"364.1\" \"300.2\" ## [10] \"301.1\" \"300.1\" \"301.2\" \"263.2\" \"27.2\"  \"25.1\"  \"368.1\" \"351.1\" \"15\"    ## [19] \"370\"   \"350.2\" require(VennDiagram) s_lin <- itemselect(o.microarray, select.method = \"linear\", FDR = 0.01) index_quad <- s_quad$selectindex index_lin <- s_lin$selectindex plot(c(0,0), c(1,1), type = \"n\", xaxt = \"n\", yaxt = \"n\", bty = \"n\", xlab = \"\", ylab = \"\") draw.pairwise.venn(area1 = length(index_quad), area2 = length(index_lin),                     cross.area = length(which(index_quad %in% index_lin)),                     category = c(\"quadratic trend test\", \"linear trend test\"),                    cat.col=c(\"cyan3\", \"darkorange1\"), col=c(\"black\", \"black\"),                     fill = c(\"cyan3\", \"darkorange1\"), lty = \"blank\", cat.pos = c(1,11))"},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"fit-of-the-best-model","dir":"Articles","previous_headings":"Main workflow > Step 3: fit of dose-response models, choice of the best fit for each curve","what":"Fit of the best model","title":"Overview of the DRomics package","text":"Step 3 function drcfit() simply takes input first argument output itemselect(). item selected Step 2, model best fits dose-response data chosen among family five simple models built describe wide variety monotonic biphasic dose-response curves (DRC) (exclusively monotonic biphasic curves : flexible models polynomial third fourth order classical polynomial models deliberately considered). complete description models see last section Step 3 Larras et al. 2018. procedure used select best fit based information criterion described Larras et al. 2018 ?drcfit. classical former default option AIC (Akaike criterion - default information criterion used DRomics versions < 2.2-0) replaced default use AICc (second-order Akaike criterion) order prevent overfitting may occur dose-response designs small number data points, recommended now classically done regression (Hurvich Tsai, 1989; Burnham Anderson DR, 2004). call drcfit() function may take time number pre-selected items large, default progressbar provided. arguments function can used specify parallel computing accelerate computation (see ?drcfit details). following can see first lines output data frame example (see ?drcfit complete description columns output data frame.) output data frame provides information item, best-fit model, parameter values, standard residual error (SDres) (see section least squares definition), coordinates particular points, trend curve (among increasing, decreasing, U-shaped, bell-shaped). extensive description outputs complete DRomics workflow provided last section main workflow. Note number items successfully fitted (output Step 3) often smaller number items selected Step 2, selected items, models may fail converge fail significantly better describe data constant model.","code":"(f <- drcfit(s_quad, progressbar = FALSE)) ## Results of the fitting using the AICc to select the best fit model ## 22 dose-response curves out of 150 previously selected were removed  ## because no model could be fitted reliably. ## Distribution of the chosen models among the 128 fitted dose-response curves: ##  ##             Hill           linear      exponential     Gauss-probit  ##                2               29               39               49  ## log-Gauss-probit  ##                9  ## Distribution of the trends (curve shapes) among the 128 fitted dose-response curves: ##  ## bell  dec  inc    U  ##   38   37   34   19 head(f$fitres) ##      id irow adjpvalue        model nbpar       b    c     d    e    f SDres ## 1 383.2  725  2.08e-07 Gauss-probit     4  5.5836 8.58  8.58 1.70 3.62 0.157 ## 2 384.2  727  2.08e-07  exponential     3 -0.0298   NA 12.24 1.76   NA 0.160 ## 3 363.1  686  2.24e-07  exponential     3 -0.2058   NA  9.10 3.11   NA 0.218 ## 4 383.1  724  2.24e-07 Gauss-probit     4  5.4879 8.75  8.75 1.72 3.58 0.169 ## 5 384.1  726  3.41e-07 Gauss-probit     4  6.8453 7.26  7.26 1.77 5.01 0.158 ## 6 363.2  687  7.01e-07  exponential     3 -0.1467   NA  9.10 2.77   NA 0.206 ##        typology trend   y0 yatdosemax yrange maxychange xextrem yextrem ## 1       GP.bell  bell 12.0      11.03   1.17      1.004    1.70    12.2 ## 2 E.dec.concave   dec 12.2      10.99   1.25      1.251      NA      NA ## 3 E.dec.concave   dec  9.1       7.58   1.53      1.527      NA      NA ## 4       GP.bell  bell 12.2      11.15   1.18      1.012    1.72    12.3 ## 5       GP.bell  bell 12.1      11.15   1.11      0.949    1.77    12.3 ## 6 E.dec.concave   dec  9.1       7.64   1.46      1.461      NA      NA"},{"path":"/articles/DRomics_vignette.html","id":"plot-of-fitted-curves","dir":"Articles","previous_headings":"Main workflow > Step 3: fit of dose-response models, choice of the best fit for each curve","what":"Plot of fitted curves","title":"Overview of the DRomics package","text":"default plot() function used output drcfit() function provides first 20 fitted curves (ones specify using argument items) observed points. Fitted curves represented red, replicates represented open circles means replicates dose/concentration represented solid circles. fitted curves may saved pdf file using plotfit2pdf() function (see ?drcfit).  fitted curves default represented using log scale dose/concentration, suited common cases range observed doses/concentrations wide /tested doses/concentrations obtained dilutions. observations control appear differently observations, half circles y-axis, remind true value minus infinity log scale. Use dose_log_transfo = FALSE keep raw scale doses (see ). Another specific plot function named targetplot() can used plot targeted items, whether selected step 2 fitted step 3. See example details ?targetplot. example, default arbitrary space y-axis (points control) points first non null doses enlarged fixing limits x-axis :","code":"plot(f) targetitems <- c(\"88.1\", \"1\", \"3\", \"15\") targetplot(targetitems, f = f) + scale_x_log10(limits = c(0.2, 10))"},{"path":"/articles/DRomics_vignette.html","id":"residuals","dir":"Articles","previous_headings":"Main workflow > Step 3: fit of dose-response models, choice of the best fit for each curve","what":"Plot of residuals","title":"Overview of the DRomics package","text":"check assumption Gaussian error model (see section least squares), two types residual plots can used, \"dose_residuals\" plot residuals observed doses/concentrations, \"fitted_residuals\" plot residuals fitted values modeled signal. residual plots items may also saved pdf file using plotfit2pdf() function (see ?drcfit).","code":"plot(f, plot.type = \"dose_residuals\")"},{"path":"/articles/DRomics_vignette.html","id":"models","dir":"Articles","previous_headings":"Main workflow > Step 3: fit of dose-response models, choice of the best fit for each curve","what":"Description of the family of dose-response models fitted in DRomics","title":"Overview of the DRomics package","text":"best fit model chosen among five following models describing observed signal yy function xx dose (concentration): linear model: y=d+b×xy = d + b \\times x 2 parameters, bb slope dd mean signal control. e>0e>0 dose response curve - DRC - increasing b>0b>0 decreasing b<0b<0, asymptote high doses. e<0e<0 DRC increasing b<0b<0 decreasing b>0b>0, asymptote d−bd-b high doses. Hill model: y=c+d−c1+(xe)= c + \\frac{d-c}{1+(\\frac{x}{e})^b} 4 parameters,bb (>0>0) shape parameter, cc asymtotic signal high doses, dd mean signal control, ee (>0>0) dose inflection point sigmoid. Gauss-probit model built sum Gauss probit part sharing parameters defined :y=f×exp(−0.5(x−eb)2)+d+(c−d)×Φ(x−eb)y = f \\times exp\\left(-0.5 \\left(\\frac{x-e}{b}\\right)^2\\right) +d+(c-d) \\times \\Phi\\left(\\frac{x-e}{b}\\right) 5 parameters,bb (>0>0) shape parameter corresponding standard deviation Gauss part model, cc asymtotic signal high doses, dd asymptotic signal left DRC (generally corresponding fictive negative dose), ee (>0>0) shape parameter corresponding mean Gauss part model, ff amplitude sign Gauss part model (model U-shaped f<0f<0 bell-shaped f<0f<0).Φ\\Phi represents cumulative distribution function (CDF) standard Gauss (also named normal Gaussian) distribution. model encompasses two simplifed versions 4 parameters, one monotonic (f=0f=0) one symmetrical asymptotes (c=dc=d). log-Gauss-probit model, variant previous one log scale dose: y=f×exp(−0.5(ln(x)−ln(e)b)2)+d+(c−d)×Φ(ln(x)−ln(e)b)y = f \\times exp\\left(-0.5\\left(\\frac{ln(x)-ln(e)}{b}\\right)^2\\right) +d+(c-d) \\times \\Phi\\left(\\frac{ln(x)-ln(e)}{b}\\right) 5 parameters,bb (>0>0) shape parameter corresponding standard deviation Gauss part model, cc asymtotic signal high dose, dd asymptotic signal left DRC, reached control (ln(x)=ln(0)=−∞ln(x) = ln(0) = -\\infty), ln(e)ln(e) (>0>0) shape parameter corresponding mean Gauss part model, ff amplitude sign Gauss part model (model U-shaped f<0f<0 bell-shaped f<0f<0).Φ\\Phi represents cumulative distribution function (CDF) standard Gauss distribution. previous one, model encompasses two simplifed versions 4 parameters, one monotonic (f=0f=0) one symmetrical asymptotes (c=dc=d). family five models built able describe wide range monotonic biphasic DRC. following plot represented typologies curves can described using models, depending definition parameters. following plot curves represented signal y-axis raw dose x-axis. range tested observed doses often large, decided plot model fits default using log scale doses. shape models transformed log x-scale, especially linear model appear straight line .","code":""},{"path":"/articles/DRomics_vignette.html","id":"leastsquares","dir":"Articles","previous_headings":"Main workflow > Step 3: fit of dose-response models, choice of the best fit for each curve","what":"Reminder on least squares regression","title":"Overview of the DRomics package","text":"important using DRomics mind dose-response models fitted using least squares regression, assuming additive Gaussian (normal) error model observed signal. scale import data important: log (pseudo-log) transformation may necessary meet use conditions model types data. Let us recall formulation Gaussian model defining signal (transformation needed) yy function dose (concentration) xx, ff one five models previously described, θ\\theta vector parameters (length 2 5). y=f(x,θ)+ϵy = f(x, \\theta) + \\epsilon ϵ∼N(0,σ)\\epsilon \\sim N(0, \\sigma)N(0,σ)N(0, \\sigma) representing Gaussian (normal) distribution mean 00 standard deviation (SD) σ\\sigma. model, residual standard deviation σ\\sigma assumed constant. classical “homoscedasticity” hypothesis (see following figure illustration). examination residuals (see section plot residuals) good way check error model strongly violated data.","code":""},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"calculation-of-bmd","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Calculation of BMD","title":"Overview of the DRomics package","text":"two types benchmark doses (BMD-zSD BMD-xfold) proposed EFSA (2017) systematically calculated fitted dose-response curve using function bmdcalc() output drcfit() function first argument, strongly recommend use first one (BMD-zSD) reasons explained Larras et al. 2018 (see ?bmdcalc details function). recommended BMD-zSD,argument zz, default 1, used define BMD-zSD dose response reaching BMR (benchmark response) defined BMR=y0±z×SDBMR = y_0 \\pm z \\times SD y0y_0 level control given dose-response fitted model SDSD residual standard deviation dose-response fitted model (also named σ\\sigma previous mathematical definition Gaussian model). less recommended BMD-xfold, argument xx, default 10 (10%), used define BMD-xfold dose response reaching BMR defined BMR=y0±x100×y0BMR = y_0 \\pm \\frac{x}{100} \\times y_0. second BMD version take account residual standard deviation, strongly dependent magnitude y0y_0, may problem signal control close 0, rare omics data classically handled log scale. following can see first lines output data frame function bmdcalc() example. BMD values coded NA BMR stands within range response values defined model outside range tested doses, NaN BMR stands outside range response values defined model due asymptotes. low BMD values obtained extrapolation 0 smallest non null tested dose, correspond sensitive items (want exclude), thresholded minBMD, argument default fixed smallest non null tested dose divided 100, can fixed user considers negligible dose. extensive description outputs complete DRomics workflow provided last section main workflow. can also see ?bmdcalc complete description arguments columns output data frame.","code":"(r <- bmdcalc(f, z = 1, x = 10)) ## 1 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  ## the BMR stands outside the range of response values defined by the model). ## 60 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  ## NA as the BMR stands within the range of response values defined by the  ## model but outside the range of tested doses). head(r$res) ##      id irow adjpvalue        model nbpar       b    c     d    e    f SDres ## 1 383.2  725  2.08e-07 Gauss-probit     4  5.5836 8.58  8.58 1.70 3.62 0.157 ## 2 384.2  727  2.08e-07  exponential     3 -0.0298   NA 12.24 1.76   NA 0.160 ## 3 363.1  686  2.24e-07  exponential     3 -0.2058   NA  9.10 3.11   NA 0.218 ## 4 383.1  724  2.24e-07 Gauss-probit     4  5.4879 8.75  8.75 1.72 3.58 0.169 ## 5 384.1  726  3.41e-07 Gauss-probit     4  6.8453 7.26  7.26 1.77 5.01 0.158 ## 6 363.2  687  7.01e-07  exponential     3 -0.1467   NA  9.10 2.77   NA 0.206 ##        typology trend   y0 yatdosemax yrange maxychange xextrem yextrem BMD.zSD ## 1       GP.bell  bell 12.0      11.03   1.17      1.004    1.70    12.2    1.33 ## 2 E.dec.concave   dec 12.2      10.99   1.25      1.251      NA      NA    3.26 ## 3 E.dec.concave   dec  9.1       7.58   1.53      1.527      NA      NA    2.25 ## 4       GP.bell  bell 12.2      11.15   1.18      1.012    1.72    12.3    1.52 ## 5       GP.bell  bell 12.1      11.15   1.11      0.949    1.77    12.3    1.41 ## 6 E.dec.concave   dec  9.1       7.64   1.46      1.461      NA      NA    2.43 ##   BMR.zSD BMD.xfold BMR.xfold ## 1   12.19        NA     10.83 ## 2   12.08      6.59     11.02 ## 3    8.89      5.26      8.19 ## 4   12.33        NA     10.95 ## 5   12.26        NA     10.89 ## 6    8.90      5.47      8.19"},{"path":"/articles/DRomics_vignette.html","id":"plots-of-the-bmd-distribution","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Plots of the BMD distribution","title":"Overview of the DRomics package","text":"default plot output bmdcalc() function provides distribution benchmark doses ECDF (Empirical Cumulative Density Function) plot chosen BMD (“zSD”” “xfold”). See example .  Different alternative plots proposed (see ?bmdcalc details) can obtained using argument plottype choose type plot (“ecdf”, “hist” “density”) argument split plot example “trend”. can also use bmdplot() function make ECDF plot BMDs personalize (see ?bmdplot details). BMD ECDF plot one can add color gradient item coding intensity signal (shift control signal 0) function dose (see ?bmdplotwithgradient details example ). generally necessary use argument line.size manually adjust width lines plot default value always give satisfactory resut. also recommended (mandatory default option argument scaling) scale signal order focus shape dose-reponse curves amplitude signal change.","code":"plot(r, BMDtype = \"zSD\", plottype = \"ecdf\") + theme_bw() bmdplotwithgradient(r$res, BMDtype = \"zSD\",                     facetby = \"trend\",                      shapeby = \"model\",                     line.size = 1.2,                     scaling = TRUE)"},{"path":"/articles/DRomics_vignette.html","id":"bootstrap","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Calculation of confidence intervals on the BMDs by bootstrap","title":"Overview of the DRomics package","text":"Confidence intervals BMD values can calculated bootstrap. call function may take much time, default progressbar provided arguments can used specify parallel computing accelerate computation (see ?bmdboot details). example , small number iterations used just make vignette quick compile, default value argument niter (1000) considered minimal value obtain stable results. function gives output corresponding output bmdcalc() function completed bounds BMD confidence intervals (default 95% confidence intervals) number bootstrap iterations model successfully fitted data. extensive description outputs complete DRomics workflow provided last section main workflow. plot() function applied output bmdboot() function gives ECDF plot chosen BMD confidence interval BMD (see ?bmdcalc examples). default BMDs infinite confidence interval bound plotted.","code":"(b <- bmdboot(r, niter = 50, progressbar = FALSE)) ## Bootstrap confidence interval computation failed on 17 items among 128  ## due to lack of convergence of the model fit for a fraction of the  ## bootstrapped samples greater than 0.5. ## For 4 BMD.zSD values and 68 BMD.xfold values among 128 at least one  ## bound of the 95 percent confidence interval could not be computed due  ## to some bootstrapped BMD values not reachable due to model asymptotes  ## or reached outside the range of tested doses (bounds coded Inf)). head(b$res) ##      id irow adjpvalue        model nbpar       b    c     d    e    f SDres ## 1 383.2  725  2.08e-07 Gauss-probit     4  5.5836 8.58  8.58 1.70 3.62 0.157 ## 2 384.2  727  2.08e-07  exponential     3 -0.0298   NA 12.24 1.76   NA 0.160 ## 3 363.1  686  2.24e-07  exponential     3 -0.2058   NA  9.10 3.11   NA 0.218 ## 4 383.1  724  2.24e-07 Gauss-probit     4  5.4879 8.75  8.75 1.72 3.58 0.169 ## 5 384.1  726  3.41e-07 Gauss-probit     4  6.8453 7.26  7.26 1.77 5.01 0.158 ## 6 363.2  687  7.01e-07  exponential     3 -0.1467   NA  9.10 2.77   NA 0.206 ##        typology trend   y0 yatdosemax yrange maxychange xextrem yextrem BMD.zSD ## 1       GP.bell  bell 12.0      11.03   1.17      1.004    1.70    12.2    1.33 ## 2 E.dec.concave   dec 12.2      10.99   1.25      1.251      NA      NA    3.26 ## 3 E.dec.concave   dec  9.1       7.58   1.53      1.527      NA      NA    2.25 ## 4       GP.bell  bell 12.2      11.15   1.18      1.012    1.72    12.3    1.52 ## 5       GP.bell  bell 12.1      11.15   1.11      0.949    1.77    12.3    1.41 ## 6 E.dec.concave   dec  9.1       7.64   1.46      1.461      NA      NA    2.43 ##   BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower ## 1   12.19        NA     10.83         0.489          3.93             Inf ## 2   12.08      6.59     11.02         1.724          4.58            6.40 ## 3    8.89      5.26      8.19         1.366          3.52            4.61 ## 4   12.33        NA     10.95         0.423          4.17             Inf ## 5   12.26        NA     10.89         0.481          4.36             Inf ## 6    8.90      5.47      8.19         1.334          3.31            4.75 ##   BMD.xfold.upper nboot.successful ## 1             Inf               36 ## 2             Inf               47 ## 3            5.96               50 ## 4             Inf               36 ## 5             Inf               26 ## 6            6.00               50"},{"path":"/articles/DRomics_vignette.html","id":"bmdfilter","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Filtering BMDs according to estimation quality","title":"Overview of the DRomics package","text":"Using bmdfilter() function, possible use one three filters proposed retain items associated best estimated BMD values. default retained items BMD confidence interval defined (using \"CIdefined\") (excluding items bootstrap procedure failed). One can even restrictive retaining items BMD confidence interval within range tested/observed doses (using \"CIfinite\"), less restrictive (using \"BMDdefined\") requiring BMD point estimate must defined within range tested/observed doses. Let us recall bmdcalc() output, case BMD coded NA NaN. example application different filters based BMD-xfold values, chosen just better illustrate way filters work, far bad BMD-xfold estimations bad BMD-zSD estimations.","code":"# Plot of BMDs with no filtering subres <- bmdfilter(b$res, BMDfilter = \"none\") bmdplot(subres, BMDtype = \"xfold\", point.size = 2, point.alpha = 0.4,          add.CI = TRUE, line.size = 0.4) + theme_bw() # Plot of items with defined BMD point estimate subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"definedBMD\") bmdplot(subres, BMDtype = \"xfold\", point.size = 2, point.alpha = 0.4,          add.CI = TRUE, line.size = 0.4) + theme_bw() # Plot of items with defined BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"definedCI\") bmdplot(subres, BMDtype = \"xfold\", point.size = 2, point.alpha = 0.4,          add.CI = TRUE, line.size = 0.4) + theme_bw() # Plot of items with finite BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"finiteCI\")  bmdplot(subres, BMDtype = \"xfold\", point.size = 2, point.alpha = 0.4,          add.CI = TRUE, line.size = 0.4) + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"plot-of-fitted-curves-with-bmd-values-and-confidence-intervals","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Plot of fitted curves with BMD values and confidence intervals","title":"Overview of the DRomics package","text":"possible add output bmdcalc() (bmdboot()) argument BMDoutput plot() function drcfit(), order add BMD values (defined) vertical line fitted curve, bounds confidence intervals (successfully calculated) two dashed lines. Horizontal dotted lines corresponding two BMR potential values also added. See example .  fitted curves may also saved way pdf file using plotfit2pdf() function (see ?drcfit).","code":"# If you do not want to add the confidence intervals just replace b # the output of bmdboot() by r the output of bmdcalc() plot(f, BMDoutput = b)"},{"path":"/articles/DRomics_vignette.html","id":"plot-of-all-the-fitted-curves-in-one-figure-with-points-at-bmd-bmr-values","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Plot of all the fitted curves in one figure with points at BMD-BMR values","title":"Overview of the DRomics package","text":"possible use curvesplot() function plot fitted curves one figure add use curvesplot() function extensively described next parts corresponding help page. default plot curves scaled focus shape dose-response amplitude (add scaling = FALSE see curves without scaling) log dose scale used. following plot also added vertical lines corresponding tested doses plot add transparency visualize density curves shapes similar (especially case linear shapes).  use package plotly make plot interactive can interesting example get identifiant curve choose group curves eliminate focus . can try following code get interactive version previous figure.","code":"tested.doses <- unique(f$omicdata$dose) g <- curvesplot(r$res, xmax = max(tested.doses), colorby = \"trend\",            line.size = 0.8, line.alpha = 0.3, point.size = 2, point.alpha = 0.6) +   geom_vline(xintercept = tested.doses, linetype = 2) + theme_bw() print(g) if (require(plotly)) {   ggplotly(g) }"},{"path":"/articles/DRomics_vignette.html","id":"outputs","dir":"Articles","previous_headings":"Main workflow > Step 4: calculation of benchmark doses (BMD)","what":"Description of the outputs of the complete DRomics workflow","title":"Overview of the DRomics package","text":"output complete DRomics workflow, given b$res b output bmdboot(), output bmdfilter(b$res) (see previous section description BMD filtering options) data frame reporting results fit BMD computation selected item sorted ascending order adjusted p-values returned item selection step. columns data frame : id: item identifier irow: row number initial dataset adjpvalue: adjusted p-values returned item selection step model: best model fitted nbpar: number parameters best model (may smaller maximal number parameters model simplified version chosen) b, c, d, e, f, model parameter values SDres: residual standard deviation best model “H.inc” increasing Hill curves “H.dec” decreasing Hill curves “L.inc” increasing linear curves “L.dec” decreasing linear curves “E.inc.convex” increasing convex exponential curves “E.dec.concave” decreasing concave exponential curves “E.inc.concave” increasing concave exponential curves “E.dec.convex” decreasing convex exponential curves “GP.U” U-shape Gauss-probit curves “GP.bell” bell-shape Gauss-probit curves “GP.inc” increasing Gauss-probit curves “GP.dec” decreasing Gauss-probit curves “lGP.U” U-shape log-Gauss-probit curves “lGP.bell” bell-shape log-Gauss-probit curves “lGP.inc” increasing log-Gauss-probit curves “lGP.decreasing” decreasing log-Gauss-probit curves U shape bell shape increasing decreasing y0: y theoretical value control yatdosemax: theoretical y value maximal dose yrange: theoretical y range x within range tested doses maxychange: maximal absolute y change () control xextrem: biphasic curves, x value extremum reached yextrem: corresponding y value extremum BMD.zSD: BMD-zSD value BMR.zSD: corresponding BMR-zSD value BMD.xfold: BMD-xfold value BMR.xfold: corresponding BMR-xfold value nboot.successful: number bootstrap iterations model successfully fitted data incomplete version data frame also given end Step 3 (f$fitres f output drcfit()) bootstrap calculation BMD values (r$res r output bmdcalc()).","code":"str(b$res) ## 'data.frame':    128 obs. of  28 variables: ##  $ id              : chr  \"383.2\" \"384.2\" \"363.1\" \"383.1\" ... ##  $ irow            : int  725 727 686 724 726 687 689 688 568 569 ... ##  $ adjpvalue       : num  2.08e-07 2.08e-07 2.24e-07 2.24e-07 3.41e-07 ... ##  $ model           : Factor w/ 5 levels \"Hill\",\"linear\",..: 4 3 3 4 4 3 3 3 3 3 ... ##  $ nbpar           : num  4 3 3 4 4 3 3 3 3 3 ... ##  $ b               : num  5.5836 -0.0298 -0.2058 5.4879 6.8453 ... ##  $ c               : num  8.58 NA NA 8.75 7.26 ... ##  $ d               : num  8.58 12.24 9.1 8.75 7.26 ... ##  $ e               : num  1.7 1.76 3.11 1.72 1.77 ... ##  $ f               : num  3.62 NA NA 3.58 5.01 ... ##  $ SDres           : num  0.157 0.16 0.218 0.169 0.158 ... ##  $ typology        : Factor w/ 12 levels \"E.dec.concave\",..: 5 1 1 5 5 1 1 1 2 2 ... ##  $ trend           : Factor w/ 4 levels \"bell\",\"dec\",\"inc\",..: 1 2 2 1 1 2 2 2 2 2 ... ##  $ y0              : num  12 12.2 9.1 12.2 12.1 ... ##  $ yatdosemax      : num  11.03 10.99 7.58 11.15 11.15 ... ##  $ yrange          : num  1.17 1.25 1.53 1.18 1.11 ... ##  $ maxychange      : num  1.004 1.251 1.527 1.012 0.949 ... ##  $ xextrem         : num  1.7 NA NA 1.72 1.77 ... ##  $ yextrem         : num  12.2 NA NA 12.3 12.3 ... ##  $ BMD.zSD         : num  1.33 3.26 2.25 1.52 1.41 ... ##  $ BMR.zSD         : num  12.19 12.08 8.89 12.33 12.26 ... ##  $ BMD.xfold       : num  NA 6.59 5.26 NA NA ... ##  $ BMR.xfold       : num  10.83 11.02 8.19 10.95 10.89 ... ##  $ BMD.zSD.lower   : num  0.489 1.724 1.366 0.423 0.481 ... ##  $ BMD.zSD.upper   : num  3.93 4.58 3.52 4.17 4.36 ... ##  $ BMD.xfold.lower : num  Inf 6.4 4.61 Inf Inf ... ##  $ BMD.xfold.upper : num  Inf Inf 5.96 Inf Inf ... ##  $ nboot.successful: num  36 47 50 36 26 50 50 50 50 50 ..."},{"path":"/articles/DRomics_vignette.html","id":"interpreter","dir":"Articles","previous_headings":"","what":"Help for biological interpretation of DRomics outputs","title":"Overview of the DRomics package","text":"section illustrates functions developed DRomics help biological interpretation outputs. idea augment output data frame new column bringing biological information, generally provided biological annotation items (e.g. kegg pathway classes GO terms), use information organize visualisation DRomics output. shiny application DRomicsInterpreter-shiny can used implement steps described vignette without coding R. case, biological annotation items selected first DRomics workflow must previously done outside DRomics using database Gene Ontology (GO) kegg databases. section first present simple example metabolomic dataset [example two molecular levels] (#multilevels) using metabolomic transcriptomic data experiment, illustrate compare responses different experimental levels (example different molecular levels). different experimental levels also different time points, different experimental settings, different species, …","code":""},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"augmentation","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Interpretation of DRomics results in a simple case with only one data set obtained in one experimental condition","what":"Augmentation of the data frame of DRomics results with biological annotation","title":"Overview of the DRomics package","text":"augmentation done using DRomics functions, using simple R functions merge(). Nevertheless possible perform augmentation without coding R, using shiny application DRomicsInterpreter-shiny. Report introduction section see launch shiny application. example proceed: Import data frame DRomics results: output $res bmdcalc() bmdboot() functions Step 4 main DRomics workflow. step necessary previous steps done directly R, using DRomics package, described previously vignette (see section describing output data frame). example, order take real example took long time completely run, results stored package. Import data frame biological annotation (descriptor/category want use), KEGG pathway classes item present ‘res’ file. Examples embedded DRomics package, cautious, generally file must produced user. item may one annotation (.e. one line). items annotated whatever selected DRomics workflow , previously reduce dimension annotation file selecting items present DRomics output least one biological annotation. annotation stands one word, surround quotes, use tab column separator annotation file, import adding sep = \"\\t\" arguments read.table(). Merging previous data frames order obtain -called ‘extendedres’ data frame gathering, item, metrics derived DRomics workflow biological annotation. Arguments .x .y merge() function indicate column name res annot data frames respectively, must used merging.","code":"# code to import the file for this example stored in our package resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package = \"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE)  # to see the first lines of this data frame head(res) ##       id irow adjpvalue            model nbpar       b   c    d      e      f ## 1  NAP_2    2  6.23e-05      exponential     3  0.4598  NA 5.94 -1.648     NA ## 2 NAP_23   21  1.11e-05           linear     2 -0.0595  NA 5.39     NA     NA ## 3 NAP_30   28  1.03e-05           linear     2 -0.0451  NA 7.86     NA     NA ## 4 NAP_38   34  1.89e-03      exponential     3  0.6011  NA 6.86 -0.321     NA ## 5 NAP_42   38  4.16e-03      exponential     3  0.6721  NA 6.21 -0.323     NA ## 6 NAP_52   47  3.92e-02 log-Gauss-probit     5  0.4501 7.2 7.29  1.309 -0.144 ##    SDres     typology trend   y0 yrange maxychange xextrem yextrem BMD.zSD ## 1 0.1260 E.dec.convex   dec 5.94  0.456      0.456      NA      NA   0.528 ## 2 0.0793        L.dec   dec 5.39  0.461      0.461      NA      NA   1.333 ## 3 0.0520        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154 ## 4 0.2338 E.dec.convex   dec 6.86  0.601      0.601      NA      NA   0.158 ## 5 0.2897 E.dec.convex   dec 6.21  0.672      0.672      NA      NA   0.182 ## 6 0.0709        lGP.U     U 7.29  0.191      0.191    1.46     7.1   0.732 ##   BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower ## 1    5.82        NA      5.35        0.2001         1.110             Inf ## 2    5.31        NA      4.85        0.8534         1.746           7.611 ## 3    7.81        NA      7.07        0.7519         1.465             Inf ## 4    6.62        NA      6.17        0.0554         0.680           0.561 ## 5    5.92     0.832      5.59        0.0810         0.794           0.329 ## 6    7.22        NA      8.02        0.4247         1.052             Inf ##   BMD.xfold.upper nboot.successful ## 1             Inf              957 ## 2             Inf             1000 ## 3             Inf             1000 ## 4             Inf              648 ## 5             Inf              620 ## 6             Inf              872 # code to import the file for this example in our package annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package = \"DRomics\") # annotfilename <- \"yourchosenname.txt\" # for a local file annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE)  # to see the first lines of this data frame head(annot) ##   metab.code                                  path_class ## 1      NAP_2                            Lipid metabolism ## 2     NAP_23                     Carbohydrate metabolism ## 3     NAP_30                     Carbohydrate metabolism ## 4     NAP_30 Biosynthesis of other secondary metabolites ## 5     NAP_30                          Membrane transport ## 6     NAP_30                         Signal transduction # Merging extendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\")  # to see the first lines of the merged data frame head(extendedres) ##       id irow adjpvalue       model nbpar       b  c    d     e  f  SDres ## 1  NAP_2    2  6.23e-05 exponential     3  0.4598 NA 5.94 -1.65 NA 0.1260 ## 2 NAP_23   21  1.11e-05      linear     2 -0.0595 NA 5.39    NA NA 0.0793 ## 3 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 4 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 5 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 6 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ##       typology trend   y0 yrange maxychange xextrem yextrem BMD.zSD BMR.zSD ## 1 E.dec.convex   dec 5.94  0.456      0.456      NA      NA   0.528    5.82 ## 2        L.dec   dec 5.39  0.461      0.461      NA      NA   1.333    5.31 ## 3        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 4        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 5        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 6        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ##   BMD.xfold BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower ## 1        NA      5.35         0.200          1.11             Inf ## 2        NA      4.85         0.853          1.75            7.61 ## 3        NA      7.07         0.752          1.46             Inf ## 4        NA      7.07         0.752          1.46             Inf ## 5        NA      7.07         0.752          1.46             Inf ## 6        NA      7.07         0.752          1.46             Inf ##   BMD.xfold.upper nboot.successful                                  path_class ## 1             Inf              957                            Lipid metabolism ## 2             Inf             1000                     Carbohydrate metabolism ## 3             Inf             1000                     Carbohydrate metabolism ## 4             Inf             1000 Biosynthesis of other secondary metabolites ## 5             Inf             1000                          Membrane transport ## 6             Inf             1000                         Signal transduction"},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"bmdplot","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Interpretation of DRomics results in a simple case with only one data set obtained in one experimental condition > Various plots of results by biological group","what":"BMD ECDF plots split by group defined from biological annotation","title":"Overview of the DRomics package","text":"Using function bmdplot() argument facetby, BMD ECDF plot can split group (KEGG pathway class). Confidence intervals can added plot color coding trend example (See ?bmdplot options).  function ecdfplotwithCI() can also used alternative provide plot differing coloring intervals . (See ?ecdfplotwithCI options.) Using function bmdplotwithgradient() argument facetby, BMD plot color gradient can split KEGG pathway class. (See ?bmdplotwithgradient options).  One can focus group interest, instance group “Lipid metabolism”, add labels items using argument add.label display item identifiers instead points. case can useful control limits color gradient limits x-axis order use x-scale signal-scale global previous plot, following example (see ?bmdplotwithgradient details).","code":"bmdplot(extendedres, BMDtype = \"zSD\", add.CI = TRUE,                      facetby = \"path_class\",                      colorby = \"trend\") + theme_bw() ecdfplotwithCI(variable = extendedres$BMD.zSD,                 CI.lower = extendedres$BMD.zSD.lower,                 CI.upper = extendedres$BMD.zSD.upper,                 by = extendedres$path_class,                CI.col = extendedres$trend) + labs(col = \"trend\") bmdplotwithgradient(extendedres, BMDtype = \"zSD\",                     scaling = TRUE,                      facetby = \"path_class\",                      shapeby = \"trend\") extendedres_lipid <- extendedres[extendedres$path_class == \"Lipid metabolism\",]   bmdplotwithgradient(extendedres_lipid, BMDtype = \"zSD\",                     scaling = TRUE,                     facetby = \"path_class\",                      add.label = TRUE,                     xmin = 0, xmax = 6,                     label.size = 3,                     line.size = 2)"},{"path":"/articles/DRomics_vignette.html","id":"sensitivityplot","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Interpretation of DRomics results in a simple case with only one data set obtained in one experimental condition > Various plots of results by biological group","what":"Sensitivity plot of biological groups","title":"Overview of the DRomics package","text":"also possible visualize sensitivity biological group using sensitivityplot() function, choosing BMD summary argument BMDsummary fixed \"first.quartile\", \"median\" \"median..IQR\" (medians interquartile range interval). Moreover, function provide information number items involved pathway/category (coding size points). (See ?sensitivityplot options). example, ECDF plot 25th quantiles BMD-zSD calculated pathway class.  possible use medians BMD values represent order groups sensitivity plot optionally add interquartile range line plot, :  can customize sensitivity plot position pathway class labels next point instead y-axis, using ggplot2 functions.","code":"sensitivityplot(extendedres, BMDtype = \"zSD\",                 group = \"path_class\",                 BMDsummary = \"first.quartile\") + theme_bw() sensitivityplot(extendedres, BMDtype = \"zSD\",                 group = \"path_class\",                 BMDsummary = \"median.and.IQR\") + theme_bw() psens <- sensitivityplot(extendedres, BMDtype = \"zSD\",                          group = \"path_class\",                          BMDsummary = \"first.quartile\")  psens +    theme_bw() +   theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +   geom_text(aes(label = paste(\"   \", psens$data$groupby, \"   \")),              size = 3, hjust = \"inward\")"},{"path":"/articles/DRomics_vignette.html","id":"trendplot","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Interpretation of DRomics results in a simple case with only one data set obtained in one experimental condition > Various plots of results by biological group","what":"Trend plot per biological group","title":"Overview of the DRomics package","text":"possible represent repartition trends biological group using trendplot() function (see ?trendplot details).","code":"trendplot(extendedres, group = \"path_class\") + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"curvesplot","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Interpretation of DRomics results in a simple case with only one data set obtained in one experimental condition > Various plots of results by biological group","what":"Plot of dose-response curves per biological group","title":"Overview of the DRomics package","text":"function curvesplot() can show dose-response curves obtained different groups (one chosen group). use bmdplotwithgradient(), scaling curves can used default used focus shape , amplitude signal change. use function define dose range want computation dose-response fitted curves, strongly recommend choose range corresponding range tested/observed doses dataset. code plot dose-response curves split biological group (argument facetby) colored trend (argument colorby). also possible add point BMD-BMR values curve (See ?curvesplot options).  also possible using function visualize modeled response item one biological group, :","code":"# Plot of all the scaled dose-reponse curves split by path class curvesplot(extendedres, facetby = \"path_class\", scaling = TRUE, npoints = 100,             colorby = \"trend\", xmax = 6.5) + theme_bw() # Plot of the unscaled dose-reponses for one chosen group, split by metabolite LMres <- extendedres[extendedres$path_class == \"Lipid metabolism\", ] curvesplot(LMres, facetby = \"id\", npoints = 100,             point.size = 1.5, line.size = 1,            colorby = \"trend\", scaling = FALSE,            xmax = 6.5) + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"multilevels","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs","what":"Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach","title":"Overview of the DRomics package","text":"section illustrates use DRomics functions help interpretation outputs different data sets obtained different experimental levels (different molecular levels, different time points, different experimental settings, …). idea perform augmentation DRomics output data frame obtained experimental level (previously described one level), bind augmented data frames add column coding experimental level use column organize visualisation DRomics output make possible comparison responses experimental levels. used example corresponding multi-omics approach, experimental level corresponding molecular level, transcriptomic (microarray) metabolomic data set issued experiment. example uses metabolomics transcriptomics data Scenedesmus triclosan published Larras et al. 2020. possible perform without R coding within shiny application DRomicsInterpreter-shiny. Report introduction section see launch shiny application.","code":""},{"path":"/articles/DRomics_vignette.html","id":"augmentation-of-the-data-frames-of-dromics-results-with-biological-annotation","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach","what":"Augmentation of the data frames of DRomics results with biological annotation","title":"Overview of the DRomics package","text":"Following steps described one level, example R code import DRomics results microarray data, merge data frame giving biological annotation selected items. previouly created metabolomics data frame (extended results biological annotation) renamed sake homogeneity.","code":"# 1. Import the data frame with DRomics results to be used contigresfilename <- system.file(\"extdata\", \"triclosanSVcontigres.txt\", package = \"DRomics\") contigres <- read.table(contigresfilename, header = TRUE, stringsAsFactors = TRUE)  # 2. Import the data frame with biological annotation (or any other descriptor/category  # you want to use, here KEGG pathway classes)  contigannotfilename <- system.file(\"extdata\", \"triclosanSVcontigannot.txt\", package = \"DRomics\") # contigannotfilename <- \"yourchosenname.txt\" # for a local file contigannot <- read.table(contigannotfilename, header = TRUE, stringsAsFactors = TRUE)  # 3. Merging of both previous data frames    contigextendedres <- merge(x = contigres, y = contigannot, by.x = \"id\", by.y = \"contig\") # to see the first lines of the data frame head(contigextendedres) ##       id  irow adjpvalue       model nbpar        b  c    d     e  f SDres ## 1 c00134  2802  2.76e-04      linear     2 -0.21794 NA 10.9    NA NA 0.417 ## 2 c00276 39331  9.40e-07 exponential     3  1.49944 NA 12.4 -2.20 NA 0.287 ## 3 c00281 41217  2.89e-06 exponential     3  1.40817 NA 12.4 -2.41 NA 0.281 ## 4 c00322 52577  1.88e-03 exponential     3  0.00181 NA 16.4  1.15 NA 0.145 ## 5 c00323 52590  1.83e-03 exponential     3  1.48605 NA 15.3 -2.31 NA 0.523 ## 6 c00380 53968  4.16e-04 exponential     3  1.31958 NA 14.5 -2.52 NA 0.395 ##       typology trend   y0 yrange maxychange xextrem yextrem BMD.zSD BMR.zSD ## 1        L.dec   dec 10.9  1.445      1.445      NA      NA   1.913    10.4 ## 2 E.dec.convex   dec 12.4  1.426      1.426      NA      NA   0.467    12.1 ## 3 E.dec.convex   dec 12.4  1.319      1.319      NA      NA   0.536    12.1 ## 4 E.inc.convex   inc 16.4  0.567      0.567      NA      NA   5.073    16.6 ## 5 E.dec.convex   dec 15.3  1.402      1.402      NA      NA   1.004    14.8 ## 6 E.dec.convex   dec 14.5  1.225      1.225      NA      NA   0.896    14.1 ##   BMD.xfold BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower ## 1      4.98      9.77         1.255         2.759            3.94 ## 2      3.88     11.19         0.243         0.825            2.32 ## 3      5.13     11.17         0.282         0.925            2.79 ## 4        NA     18.05         2.650         5.573             Inf ## 5        NA     13.80         0.388         2.355            3.06 ## 6        NA     13.08         0.366         2.090            4.58 ##   BMD.xfold.upper nboot.successful                           path_class ## 1             Inf              500                    Energy metabolism ## 2             Inf              497                Nucleotide metabolism ## 3             Inf              495                Nucleotide metabolism ## 4             Inf              332                          Translation ## 5             Inf              466 Metabolism of cofactors and vitamins ## 6             Inf              469     Folding, sorting and degradation metabextendedres <- extendedres"},{"path":"/articles/DRomics_vignette.html","id":"binding","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach","what":"Binding of the data frames corresponding the results at each experimental level","title":"Overview of the DRomics package","text":"next step bind augmented data frames results obtained different levels (transcriptomics metabolomics data frames) add variable (named level) coding level (factor two levels, metabolites contigs).","code":"extendedres <- rbind(metabextendedres, contigextendedres) extendedres$explevel <- factor(c(rep(\"metabolites\", nrow(metabextendedres)),                               rep(\"contigs\", nrow(contigextendedres)))) # to see the first lines of the data frame head(extendedres) ##       id irow adjpvalue       model nbpar       b  c    d     e  f  SDres ## 1  NAP_2    2  6.23e-05 exponential     3  0.4598 NA 5.94 -1.65 NA 0.1260 ## 2 NAP_23   21  1.11e-05      linear     2 -0.0595 NA 5.39    NA NA 0.0793 ## 3 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 4 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 5 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ## 6 NAP_30   28  1.03e-05      linear     2 -0.0451 NA 7.86    NA NA 0.0520 ##       typology trend   y0 yrange maxychange xextrem yextrem BMD.zSD BMR.zSD ## 1 E.dec.convex   dec 5.94  0.456      0.456      NA      NA   0.528    5.82 ## 2        L.dec   dec 5.39  0.461      0.461      NA      NA   1.333    5.31 ## 3        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 4        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 5        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ## 6        L.dec   dec 7.86  0.350      0.350      NA      NA   1.154    7.81 ##   BMD.xfold BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower ## 1        NA      5.35         0.200          1.11             Inf ## 2        NA      4.85         0.853          1.75            7.61 ## 3        NA      7.07         0.752          1.46             Inf ## 4        NA      7.07         0.752          1.46             Inf ## 5        NA      7.07         0.752          1.46             Inf ## 6        NA      7.07         0.752          1.46             Inf ##   BMD.xfold.upper nboot.successful                                  path_class ## 1             Inf              957                            Lipid metabolism ## 2             Inf             1000                     Carbohydrate metabolism ## 3             Inf             1000                     Carbohydrate metabolism ## 4             Inf             1000 Biosynthesis of other secondary metabolites ## 5             Inf             1000                          Membrane transport ## 6             Inf             1000                         Signal transduction ##      explevel ## 1 metabolites ## 2 metabolites ## 3 metabolites ## 4 metabolites ## 5 metabolites ## 6 metabolites"},{"path":"/articles/DRomics_vignette.html","id":"comparisonR","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach","what":"Comparison of results obtained at the different experimental levels using basic R functions","title":"Overview of the DRomics package","text":"examples illustrations can made using basic R functions globally compare results obtained different experimental levels, example compute plot frequencies pathways molecular levels .  plot proportions, just apply function prop.table() table frequencies t.pathways. ggplot2 grammar used plot ECDF BMD_zSD using different colors different molecular levels, removing redundant lines corresponding items corresponding one pathway.","code":"(t.pathways <- table(extendedres$path_class, extendedres$explevel)) ##                                               ##                                               contigs metabolites ##   Amino acid metabolism                            54          14 ##   Biosynthesis of other secondary metabolites       0           8 ##   Carbohydrate metabolism                          76          10 ##   Energy metabolism                                49           5 ##   Lipid metabolism                                 46          12 ##   Membrane transport                               13          13 ##   Metabolism of other amino acids                  26           7 ##   Signal transduction                              13           8 ##   Translation                                      68           7 ##   Folding, sorting and degradation                 35           0 ##   Glycan biosynthesis and metabolism               14           0 ##   Metabolism of cofactors and vitamins             57           0 ##   Metabolism of terpenoids and polyketides         15           0 ##   Nucleotide metabolism                            30           0 ##   Replication and repair                            9           0 ##   Transcription                                    23           0 ##   Transport and catabolism                         14           0 ##   Xenobiotics biodegradation and metabolism        20           0 original.par <- par() par(las = 2, mar = c(4,13,1,1)) barplot(t(t.pathways), beside = TRUE, horiz = TRUE,          cex.names = 0.7, legend.text = TRUE,          main = \"Frequencies of pathways\") par(original.par) unique.items <- unique(extendedres$id) ggplot(extendedres[match(unique.items, extendedres$id), ], aes(x = BMD.zSD, color = explevel)) +       stat_ecdf(geom = \"step\") + ylab(\"ECDF\") + theme_bw()"},{"path":[]},{"path":"/articles/DRomics_vignette.html","id":"ecdf-plot-of-bmd-values-per-group-and-experimental-level-using-dromics-functions","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"ECDF plot of BMD values per group and experimental level using DRomics functions","title":"Overview of the DRomics package","text":"Using function bmdplot() ECDF plot BMD-zSD values can colored split experimental level /split group (KEGG pathway class) . (See ?bmdplot options, example add confidence intervals, …, previous section presenting bmdplot()).","code":"# BMD ECDF plot split by molecular level, after removing items redundancy bmdplot(extendedres[match(unique.items, extendedres$id), ], BMDtype = \"zSD\",                      facetby = \"explevel\", point.alpha = 0.4) + theme_bw() # BMD ECDF plot colored by molecular level and split by path class bmdplot(extendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                      colorby = \"explevel\",                     point.alpha = 0.4) +                labs(col = \"molecular level\") + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"plot-of-the-trend-repartition-per-group-and-experimental-level","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"Plot of the trend repartition per group and experimental level","title":"Overview of the DRomics package","text":"Using function trendplot() arguments facetby possible show repartition trends responses biological group experimental levels.","code":"# Preliminary optional alphabetic ordering of path_class groups extendedres$path_class <- factor(extendedres$path_class,                  levels = sort(levels(extendedres$path_class), decreasing = TRUE))  # Trend plot trendplot(extendedres, group = \"path_class\", facetby = \"explevel\") +   theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"sensitivity-plot-per-group-and-experimental-level","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"Sensitivity plot per group and experimental level","title":"Overview of the DRomics package","text":"Using function sensitivityplot() arguments group colorby, possible show summary BMD values size points coding number items group example, 25th quartiles BMD values represented per KEGG pathway class molecular level. (See ?sensitivityplot options).","code":"sensitivityplot(extendedres, BMDtype = \"zSD\",                 group = \"path_class\", colorby = \"explevel\",                 BMDsummary = \"first.quartile\") + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"selectgroups","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"Selection of groups on which to focus using the selectgroups() function","title":"Overview of the DRomics package","text":"number biological groups obtained annotation items high, may useful select groups focus, enhance visibility plots. can done example using results enrichment procedures case enrichment possible (e.g. sequenced organisms). One also use selection criteria based number items biological group (argument nitems, select represented groups, represented nitems) /BMD summary value (argument BMDmax, select sensitive groups, BMDmax). selectgroups() function can used purpose example (see ?selectgroups details). using function may optionally choose keep results experimental levels (comparison purpose) soon criteria met group least one experimental level (example fixing argument keepallexplev TRUE).","code":"selectedres <- selectgroups(extendedres,                           group = \"path_class\",                          explev = \"explevel\",                          BMDmax = 0.75,                          BMDtype = \"zSD\",                           BMDsummary = \"first.quartile\",                          nitems = 3,                          keepallexplev = TRUE)  # BMDplot on this selection bmdplot(selectedres, BMDtype = \"zSD\", add.CI = TRUE,                     facetby = \"path_class\", facetby2 = \"explevel\",                     colorby = \"trend\") + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"bmd-ecdf-plot-with-color-gradient-split-by-group-and-experimental-level","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"BMD ECDF plot with color gradient split by group and experimental level","title":"Overview of the DRomics package","text":"Using function bmdplotwithgradient() arguments facetby facetby2, BMD plot color gradient can split group experimental level, example manual selection pathway classes present molecular levels.(See ?bmdplotwithgradient options).  Especially metabolomic data transcriptomic data imported DRomics scale (log2 transcriptomics log10 metabolomics), use scaling option dose-response curve interesting . option focuses shape responses, skipping amplitude changes control.","code":"# Manual selection of groups on which to focus chosen_path_class <- c(\"Nucleotide metabolism\",                         \"Membrane transport\",                         \"Lipid metabolism\",                         \"Energy metabolism\") selectedres2 <- extendedres[extendedres$path_class %in% chosen_path_class, ] bmdplotwithgradient(selectedres2, BMDtype = \"zSD\", scaling = TRUE,                facetby = \"path_class\", facetby2 = \"explevel\")"},{"path":"/articles/DRomics_vignette.html","id":"plot-of-the-dose-response-curves-for-a-selection-of-groups","dir":"Articles","previous_headings":"Help for biological interpretation of DRomics outputs > Comparison of DRomics results obtained at different experimental levels, for example in a multi-omics approach > Comparison of results obtained at the different experimental levels using DRomics functions","what":"Plot of the dose-response curves for a selection of groups","title":"Overview of the DRomics package","text":"Using function curvesplot(), specific dose-response curves can explored. following example, results related “lipid metabolism” pathway class explored, using argument facetby split experimental level. second example, plot split biological group using argument facetby experimental level using argument facetby2 . (See ?curvesplot options).   scaling curves used second plot can interesting focus shapes curves, skipping amplitude changes control. helps evaluate homogeneity shapes responses within group. may example interesting observe example, transcriptomics responses (contigs) gathering shape (use scaling option - done default) just differing sign (increasing / decreasing, U-shape/bell-shape), clearly appear dose-response curves scaled (first plot).","code":"# Plot of the unscaled dose-response curves for the \"lipid metabolism\" path class # using transparency to get an idea of density of curves with the shame shape LMres <- extendedres[extendedres$path_class == \"Lipid metabolism\", ] curvesplot(LMres, facetby = \"explevel\", free.y.scales = TRUE, npoints = 100,             line.alpha = 0.4, line.size = 1, colorby = \"trend\",            xmax = 6.5) + labs(col = \"DR trend\") + theme_bw() # Plot of the scaled dose-response curves for previously chosen path classes curvesplot(selectedres2, scaling = TRUE,            facetby = \"path_class\", facetby2 = \"explevel\",            npoints = 100, line.size = 1, line.alpha = 0.4,            colorby = \"trend\", xmax = 6.5) + labs(col = \"DR trend\") + theme_bw()"},{"path":"/articles/DRomics_vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Overview of the DRomics package","text":"Burnham, KP, Anderson DR (2004). Multimodel inference: understanding AIC BIC model selection. Sociological methods & research, 33(2), 261-304. Delignette-Muller ML, Siberchicot , Larras F, Billoir E (2023). DRomics, workflow exploit dose-response omics data ecotoxicology. Peer Community Journal. doi : 10.24072/pcjournal.325. https://peercommunityjournal.org/articles/10.24072/pcjournal.325/ EFSA Scientific Committee, Hardy , Benford D, Halldorsson T, Jeger MJ, Knutsen KH, … & Schlatter JR (2017). Update: use benchmark dose approach risk assessment. EFSA Journal, 15(1), e04658.https://efsa.onlinelibrary.wiley.com/doi/full/10.2903/j.efsa.2017.4658 Hurvich, CM, Tsai, CL (1989). Regression time series model selection small samples. Biometrika, 76(2), 297-307.https://www.stat.berkeley.edu/~binyu/summer08/Hurvich.AICc.pdf Larras F, Billoir E, Baillard V, Siberchicot , Scholz S, Wubet T, Tarkka M, Schmitt-Jansen M Delignette-Muller ML (2018). DRomics : turnkey tool support use dose-response framework omics data ecological risk assessment. Environmental Science & Technology. https://pubs.acs.org/doi/10.1021/acs.est.8b04752. can also find article : https://hal.science/hal-02309919 Larras F, Billoir E, Scholz S, Tarkka M, Wubet T, Delignette-Muller ML, Schmitt-Jansen M (2020). multi-omics concentration-response framework uncovers novel understanding triclosan effects chlorophyte Scenedesmus vacuolatus. Journal Hazardous Materials. https://doi.org/10.1016/j.jhazmat.2020.122727.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marie-Laure Delignette-Muller. Author. Elise Billoir. Author. Floriane Larras. Contributor. Aurelie Siberchicot. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Delignette-Muller, Marie Laure; Siberchicot, Aurélie; Larras, Floriane; Billoir, Elise. DRomics, workflow exploit dose-response omics data ecotoxicology. Peer Community Journal, Volume 3 (2023). doi : 10.24072/pcjournal.325. https://peercommunityjournal.org/articles/10.24072/pcjournal.325/ Larras F, Billoir E, Baillard V, Siberchicot , Scholz S, Wubet T, Tarkka M,   Schmitt-Jansen M Delignette-Muller ML (2018). DRomics: turnkey tool support use dose-response framework omics data ecological risk assessment. Environmental science & technology. URL https://doi.org/10.1021/acs.est.8b04752.","code":"@Article{,   title = {DRomics: a turnkey tool to support the use of the dose-response framework for omics data in ecological risk assessment},   author = {{Marie Laure Delignette-Muller} and {Aurélie Siberchicot} and {Floriane Larras} and {Elise Billoir}},   journal = {Peer Community Journal,},   year = {2023},   doi = {10.24072/pcjournal.325},   url = {https://peercommunityjournal.org/articles/10.24072/pcjournal.325/}, } @Article{,   title = {DRomics: a turnkey tool to support the use of the dose-response framework for omics data in ecological risk assessment},   author = {{Floriane Larras} and {Elise Billoir} and {Vincent Baillard} and {Aurélie Siberchicot} and {Stefan Scholz} and {Wubet Tefaye} and {Mika Tarkka} and {Mechthild Schmitt-Jansen} and {Marie Laure Delignette-Muller}},   journal = {Environmental Science & Technology},   year = {2018},   doi = {10.1021/acs.est.8b04752},   url = {https://doi.org/10.1021/acs.est.8b04752}, }"},{"path":"/index.html","id":"dromics-dose-response-for-omics-","dir":"","previous_headings":"","what":"Dose Response for Omics","title":"Dose Response for Omics","text":"Please note! Since June 2024, repository belonged lbbe-software organization. avoid confusion, strongly recommend updating existing local clones point new repository URL. can using git remote command line: git remote set-url origin git@github.com:lbbe-software/DRomics.git git remote set-url origin https://github.com/lbbe-software/DRomics.git DRomics freely available tool dose-response (concentration-response) characterization omics data. especially dedicated omics data obtained using typical dose-response design, favoring great number tested doses (concentrations) rather great number replicates (need replicates use DRomics). first step consists importing, checking needed normalizing/transforming data (step 1), aim proposed workflow select monotonic /biphasic significantly responsive items (e.g. probes, contigs, metabolites) (step 2), choose best-fit model among predefined family monotonic biphasic models describe response selected item (step 3), derive benchmark dose concentration fitted curve (step 4). steps can performed R using DRomics functions, using shiny application named DRomics-shiny. available version, DRomics supports single-channel microarray data (log2 scale), RNAseq data (raw counts) continuous omics data metabolomics proteomics (log scale). order link responses across biological levels based common method, DRomics also handles continuous apical data long meet use conditions least squares regression (homoscedastic Gaussian regression). built environmental risk assessment context omics data often collected non-sequenced species species communities, DRomics provide annotation pipeline. annotation items selected DRomics may complex context, must done outside DRomics using databases KEGG Gene Ontology. DRomics functions can used help interpretation workflow results view biological annotation. enables multi-omics approach, comparison responses different levels organization (view common biological annotation). can also used compare responses one organization level, measured different experimental conditions (e.g. different time points). interpretation can performed R using DRomics functions, using second shiny application DRomicsInterpreter-shiny. informations DRomics can also found https://lbbe.univ-lyon1.fr/fr/dromics. Keywords : dose response modelling / benchmark dose (BMD) / environmental risk assessment / transcriptomics / proteomics / metabolomics / toxicogenomics / multi-omics","code":""},{"path":"/index.html","id":"the-package","dir":"","previous_headings":"","what":"The package","title":"Dose Response for Omics","text":"limma DESeq2 packages Bioconductor must installed use DRomics (can take long time): stable version DRomics can installed CRAN using: development version DRomics can installed GitHub (remotes needed): Finally load package current R session following R command:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))    install.packages(\"BiocManager\") else   BiocManager::install(ask = FALSE, update = TRUE)  BiocManager::install(c(\"limma\", \"DESeq2\")) install.packages(\"DRomics\") if (!requireNamespace(\"remotes\", quietly = TRUE))    install.packages(\"remotes\")     remotes::install_github(\"lbbe-software/DRomics\") require(\"DRomics\")"},{"path":"/index.html","id":"vignette-and-cheat-sheet","dir":"","previous_headings":"","what":"Vignette and cheat sheet","title":"Dose Response for Omics","text":"vignette attached DRomics package. vignette intended help users start using DRomics package. complementary reference manual can find details function package. first part vignette (Main workflow, steps 1 4) also help users first shiny application DRomics-shiny. second part (Help biological interpretation DRomics outputs) also help users second shiny application DRomicsInterpreter-shiny. vignette can reached : Note , default, vignette installed package installed GitHub. following command (rather long execute large size vignette) allow access vignette development version package installed GitHub: cheat sheet sum DRomics workflow also available.","code":"vignette(\"DRomics_vignette\") remotes::install_github(\"lbbe-software/DRomics\", build_vignettes = TRUE)"},{"path":"/index.html","id":"two-shiny-apps","dir":"","previous_headings":"","what":"Two shiny apps","title":"Dose Response for Omics","text":"two shiny apps (DRomics-shiny DRomicsInterpreter-shiny) work DRomics available : https://lbbe-shiny.univ-lyon1.fr/DRomics/inst/DRomics-shiny/ https://lbbe-shiny.univ-lyon1.fr/DRomics/inst/DRomicsInterpreter-shiny/ https://biosphere.france-bioinformatique.fr/catalogue/appliance/176/ DRomics-shiny https://biosphere.france-bioinformatique.fr/catalogue/appliance/209/ DRomicsInterpreter-shiny install.packages(c(\"shiny\", \"shinyBS\", \"shinycssloaders\", \"shinyjs\", \"shinyWidgets\", \"sortable\")) shiny::runApp(system.file(\"DRomics-shiny\", package = \"DRomics\")) shiny::runApp(system.file(\"DRomicsInterpreter-shiny\", package = \"DRomics\")) shiny apps runing development version DRomics.","code":""},{"path":"/index.html","id":"authors--contacts","dir":"","previous_headings":"","what":"Authors & Contacts","title":"Dose Response for Omics","text":"need yet covered, feedback package / Shiny app, training needs, feel free email us dromics@univ-lyon1.fr . Issues can reported https://github.com/lbbe-software/DRomics/issues . Elise Billoir: elise.billoir@univ-lorraine.fr Marie-Laure Delignette-Muller: marielaure.delignettemuller@vetagro-sup.fr Floriane Larras: floriane.larras@kreatis.eu Mechthild Schmitt-Jansen: mechthild.schmitt@ufz.de Aurélie Siberchicot: aurelie.siberchicot@univ-lyon1.fr","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Dose Response for Omics","text":"use Dromics, cite: Delignette-Muller ML, Siberchicot , Larras F, Billoir E (2023). DRomics, workflow exploit dose-response omics data ecotoxicology. Peer Community Journal. https://peercommunityjournal.org/articles/10.24072/pcjournal.325/ Larras F, Billoir E, Baillard V, Siberchicot , Scholz S, Wubet T, Tarkka M, Schmitt-Jansen M Delignette-Muller ML (2018). DRomics : turnkey tool support use dose-response framework omics data ecological risk assessment. Environmental Science & Technology. https://pubs.acs.org/doi/10.1021/acs.est.8b04752 can find article : https://hal.science/hal-02309919 can also look following citation complete example use:  Larras F, Billoir E, Scholz S, Tarkka M, Wubet T, Delignette-Muller ML, Schmitt-Jansen M (2020). multi-omics concentration-response framework uncovers novel understanding triclosan effects chlorophyte Scenedesmus vacuolatus. Journal Hazardous Materials. https://doi.org/10.1016/j.jhazmat.2020.122727.","code":""},{"path":"/reference/PCAdataplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs and plots the results of a PCA on omic data — PCAdataplot","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"Provides two dimensional plot (two first components) principal component analysis (PCA) performed omic data normalization /transformation, check promiximity samples exposed dose optionally presence/absence potential batch effect.","code":""},{"path":"/reference/PCAdataplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"","code":"PCAdataplot(omicdata, batch, label)"},{"path":"/reference/PCAdataplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"omicdata object class \"microarraydata\", \"RNAseqdata\" \"continuousomicdata\" respectively returned functions microarraydata, RNAseqdata continuousomicdata. batch Optionnally factor coding potential batch effect (factor length number samples dataset). label FALSE (default choice), TRUE character vector defining sample names. two last cases, points replaced labels samples (batch identified shape points, may appear sample names.","code":""},{"path":"/reference/PCAdataplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"ggplot object.","code":""},{"path":"/reference/PCAdataplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/PCAdataplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs and plots the results of a PCA on omic data — PCAdataplot","text":"","code":"# (1) on a microarray dataset #  datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",    package=\"DRomics\") o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. print(o) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 100  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"6.1\"  \"7.1\"  \"8.1\"  \"9.1\"  \"10.1\" #> [11] \"11.1\" \"12.1\" \"13.1\" \"14.1\" \"15\"   \"16.1\" \"17.1\" \"18.1\" \"19.1\" \"20.1\" #> Data were normalized between arrays using the following method: cyclicloess  plot(o)  PCAdataplot(o)  PCAdataplot(o, label = TRUE)  samplenames <- paste0(\"sample\", 1:ncol(o$data)) PCAdataplot(o, label = samplenames)    # \\donttest{ # (2) an example on an RNAseq dataset with a potential batch effect  # data(zebraf) str(zebraf) #> List of 3 #>  $ counts: int [1:1000, 1:16] 453 331 897 12 326 533 1948 904 583 154 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:1000] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" \"ENSDARG00000115971\" ... #>   .. ..$ : chr [1:16] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\" ... #>  $ dose  : num [1:16] 500 500 500 0 0 0 0 50000 50000 50000 ... #>  $ batch : Factor w/ 2 levels \"I10\",\"I17\": 1 1 1 1 1 1 1 2 2 2 ... data4DRomics <- formatdata4DRomics(signalmatrix = zebraf$counts,                             dose = zebraf$dose) o <- RNAseqdata(data4DRomics, transfo.method = \"vst\") #> converting counts to integer mode #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. PCAdataplot(o, batch = zebraf$batch)  PCAdataplot(o, label = TRUE)   # }"},{"path":"/reference/RNAseqdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"RNAseq data raw counts (integer values) imported .txt file (internally imported using function read.table), checked R object class data.frame (see description argument file required format data), normalized respect library size tranformed log2 scale using variance stabilizing transformation regularized logarithm.","code":""},{"path":"/reference/RNAseqdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"","code":"RNAseqdata(file, backgrounddose, check = TRUE, transfo.method,            transfo.blind = TRUE, round.counts = FALSE)  # S3 method for class 'RNAseqdata' print(x, ...) # S3 method for class 'RNAseqdata' plot(x, range4boxplot = 0, ...)"},{"path":"/reference/RNAseqdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"file name .txt file (e.g. \"mydata.txt\") containing one row per item, first column corresponding identifier item, columns giving responses item replicate dose concentration. first line, name identifier column, must tested doses concentrations numeric format corresponding replicate (example, triplicates treatment, first line \"item\", 0, 0, 0, 0.1, 0.1, 0.1, etc.). file imported within function using function read.table default field separator (sep argument) default decimal separator (dec argument \".\"). Alternatively R object class data.frame can directly given input, corresponding output read.table(file, header = FALSE) file described . two alternatives illustrated examples. backgrounddose argument must used dose zero data, prevent calculation BMD extrapolation. doses  equal value given backgrounddose fixed 0, considered background level exposition. check TRUE format input file checked. transfo.method method chosen transform raw counts log2 scale using   DESeq2: \"rlog\" regularized logarithm   \"vst\" variance stabilizing transformation. missing, default value   defined \"rlog\" datasets less 30 samples \"vst\" transfo.blind Argument given function rlog vst,   see rlog vst explaination, default   TRUE DESeq2 package . round.counts Put TRUE counts come Kallisto Salmon   order round treatment DESeq2. x object class \"RNAseqdata\". range4boxplot argument passed boxplot(), fixed default 0 prevent producing large plot files due many outliers. Can put 1.5 obtain classical boxplots. ... arguments passed print plot functions.","code":""},{"path":"/reference/RNAseqdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"function imports data, checks format (see description argument file required format data) gives print information help user check coding data correct : tested doses (concentrations) number replicates dose, number items, identifiers first 20 items. Data normalized respect library size tranformed using functions rlog vst DESeq2 package depending specified method : \"rlog\" (recommended default choice) \"vst\".","code":""},{"path":"/reference/RNAseqdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"RNAseqdata returns object class \"RNAseqdata\", list 9 components: data numeric matrix normalized transformed     responses item replicate   (one line per item, one column per replicate) dose numeric vector tested doses concentrations corresponding     column data item character vector identifiers items, corresponding     line data design table experimental design (tested doses number     replicates dose) control user data.mean numeric matrix mean responses item per dose (mean     corresponding replicates) (one line per item, one column per unique value     dose) data.sd numeric matrix standard deviations response     item per dose (sd corresponding replicates, NA replicate)     (one line per item, one column per unique value dose) transfo.method transformation method specified input raw.counts numeric matrix non transformed responses (raw counts)     item replicate   (one line per item, one column per replicate) normalization containsNA always FALSE RNAseq data allowed contain     NA values print RNAseqdata object gives tested doses (concentrations)   number replicates dose, number items, identifiers   first 20 items (check good coding data) tranformation method.    plot RNAseqdata object shows data distribution dose concentration replicate normalization tranformation.","code":""},{"path":[]},{"path":"/reference/RNAseqdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"Love MI, Huber W, Anders S (2014), Moderated estimation fold change dispersion RNA-seq data DESeq2. Genome biology, 15(12), 550.","code":""},{"path":"/reference/RNAseqdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/RNAseqdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import, check and normalization and transformation of RNAseq data — RNAseqdata","text":"","code":"# (1) import, check, normalization and transformation of RNAseq data  # An example on a subsample of a data set published by Zhou et al. 2017 # Effect on mouse kidney transcriptomes of tetrachloroethylene # (see ? Zhou for details) # datafilename <- system.file(\"extdata\", \"RNAseq_sample.txt\", package=\"DRomics\") (o <- RNAseqdata(datafilename, check = TRUE, transfo.method = \"vst\")) #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 999  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: vst plot(o)   # If you want to use your own data set just replace datafilename,  # the first argument of RNAseqdata(),  # by the name of your data file (e.g. \"mydata.txt\") #  # You should take care that the field separator of this data file is one # of the default field separators recognised by the read.table() function # when it is used with its default field separator (sep argument) # Tabs are recommended.  # Use of an R object of class data.frame # below the same example taking a subsample of the data set # Zhou_kidney_pce (see ?Zhou for details) data(Zhou_kidney_pce) subsample <- Zhou_kidney_pce[1:1000, ] (o <- RNAseqdata(subsample, check = TRUE, transfo.method = \"vst\")) #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 999  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: vst plot(o)  PCAdataplot(o)    # (2) transformation with two methods on the whole data set # \\donttest{ data(Zhou_kidney_pce)  # variance stabilizing tranformation (o1 <- RNAseqdata(Zhou_kidney_pce, check = TRUE, transfo.method = \"vst\")) #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 33394  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: vst plot(o1)   # regularized logarithm (o2 <- RNAseqdata(Zhou_kidney_pce, check = TRUE, transfo.method = \"rlog\")) #> Just wait, the transformation using regularized logarithm (rlog) may  #> take a few minutes. #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 33394  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: rlog plot(o2)   # variance stabilizing tranformation (blind to the experimental design) (o3 <- RNAseqdata(Zhou_kidney_pce, check = TRUE, transfo.method = \"vst\",       transfo.blind = TRUE)) #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 33394  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: vst plot(o3)   # regularized logarithm (o4 <- RNAseqdata(Zhou_kidney_pce, check = TRUE, transfo.method = \"rlog\",       transfo.blind = TRUE)) #> Just wait, the transformation using regularized logarithm (rlog) may  #> take a few minutes. #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 33394  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: rlog plot(o4)    # }"},{"path":"/reference/Scenedesmus.html","id":null,"dir":"Reference","previous_headings":"","what":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","title":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","text":"Metabolomic apical data sets effect triclosan chlorophyte Scenedesmus vacuolatus.","code":""},{"path":"/reference/Scenedesmus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","text":"","code":"data(Scenedesmus_metab) data(Scenedesmus_apical)"},{"path":"/reference/Scenedesmus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","text":"Scenedesmus_metab contains one row per metabolite, first column corresponding identifier metabolite, columns giving log10 tranformed area curve replicate concentration. first line, name identifier column, tested concentrations corresponding replicate. Scenedesmus_apical contains one row per apical endpoint, first column corresponding identifier endpoint, columns giving measured value endpoint replicate concentration. first line, name identifier column, tested concentrations corresponding replicate.","code":""},{"path":"/reference/Scenedesmus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","text":"Larras, F., Billoir, E., Scholz, S., Tarkka, M., Wubet, T., Delignette-Muller, M. L., & Schmitt-Jansen, M. (2020). multi-omics concentration-response framework uncovers novel understanding triclosan effects chlorophyte Scenedesmus vacuolatus. Journal Hazardous Materials, 122727.","code":""},{"path":"/reference/Scenedesmus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concentration-response effect of triclosan in Scenedesmus vacuolatus — Scenedesmus","text":"","code":"# (1.1) load of metabolomics data # data(Scenedesmus_metab) head(Scenedesmus_metab) #>           V1       V2       V3       V4       V5       V6       V7       V8 #> 1 metab.code 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 7.760000 #> 2      NAP_1 4.338845 4.727077 4.664407 4.741994 4.338845 4.667462 4.338845 #> 3      NAP_2 5.923194 5.997305 5.897229 6.092802 5.966068 5.733371 5.548711 #> 4      NAP_3 4.780252 4.890248 5.103817 5.060089 5.037458 4.829921 4.948354 #> 5      NAP_4 4.027370 4.457973 4.027370 4.027370 4.350887 4.027370 4.027370 #> 6      NAP_5 5.269317 4.660272 5.407287 5.282763 4.660272 4.660272 5.306268 #>         V9      V10      V11      V12      V13      V14      V15      V16 #> 1 4.780000 2.920000 1.790000 1.100000 0.690000 7.760000 7.760000 4.780000 #> 2 4.639875 4.684765 4.338845 4.338845 4.855040 4.338845 4.927042 4.338845 #> 3 5.478389 5.708228 5.585534 5.832640 5.853180 5.425401 5.590360 5.478412 #> 4 4.863668 4.923078 4.922019 4.870656 5.071359 4.869461 5.115907 5.135603 #> 5 4.027370 4.027370 4.027370 4.027370 4.027370 4.027370 4.027370 4.027370 #> 6 4.660272 5.342616 5.295892 4.660272 5.319847 5.104808 4.660272 5.219089 #>        V17      V18      V19      V20      V21      V22      V23      V24 #> 1 4.780000 2.920000 2.920000 1.790000 1.790000 1.100000 1.100000 0.690000 #> 2 4.338845 4.338845 4.733983 4.338845 4.338845 4.338845 5.078072 4.338845 #> 3 5.460895 5.485156 5.448148 5.582259 5.700495 5.976869 5.435696 5.875684 #> 4 5.002352 5.325395 4.479222 4.979134 5.164020 5.067967 5.279681 5.166167 #> 5 4.027370 4.027370 4.027370 4.521230 4.328400 4.422097 4.689859 4.492537 #> 6 4.660272 4.660272 4.961302 4.660272 4.660272 4.660272 5.455795 5.462184 #>        V25 #> 1 0.690000 #> 2 4.703429 #> 3 5.656397 #> 4 5.018734 #> 5 4.027370 #> 6 4.660272 str(Scenedesmus_metab) #> 'data.frame':\t225 obs. of  25 variables: #>  $ V1 : chr  \"metab.code\" \"NAP_1\" \"NAP_2\" \"NAP_3\" ... #>  $ V2 : num  0 4.34 5.92 4.78 4.03 ... #>  $ V3 : num  0 4.73 6 4.89 4.46 ... #>  $ V4 : num  0 4.66 5.9 5.1 4.03 ... #>  $ V5 : num  0 4.74 6.09 5.06 4.03 ... #>  $ V6 : num  0 4.34 5.97 5.04 4.35 ... #>  $ V7 : num  0 4.67 5.73 4.83 4.03 ... #>  $ V8 : num  7.76 4.34 5.55 4.95 4.03 ... #>  $ V9 : num  4.78 4.64 5.48 4.86 4.03 ... #>  $ V10: num  2.92 4.68 5.71 4.92 4.03 ... #>  $ V11: num  1.79 4.34 5.59 4.92 4.03 ... #>  $ V12: num  1.1 4.34 5.83 4.87 4.03 ... #>  $ V13: num  0.69 4.86 5.85 5.07 4.03 ... #>  $ V14: num  7.76 4.34 5.43 4.87 4.03 ... #>  $ V15: num  7.76 4.93 5.59 5.12 4.03 ... #>  $ V16: num  4.78 4.34 5.48 5.14 4.03 ... #>  $ V17: num  4.78 4.34 5.46 5 4.03 ... #>  $ V18: num  2.92 4.34 5.49 5.33 4.03 ... #>  $ V19: num  2.92 4.73 5.45 4.48 4.03 ... #>  $ V20: num  1.79 4.34 5.58 4.98 4.52 ... #>  $ V21: num  1.79 4.34 5.7 5.16 4.33 ... #>  $ V22: num  1.1 4.34 5.98 5.07 4.42 ... #>  $ V23: num  1.1 5.08 5.44 5.28 4.69 ... #>  $ V24: num  0.69 4.34 5.88 5.17 4.49 ... #>  $ V25: num  0.69 4.7 5.66 5.02 4.03 ...  # \\donttest{  # (1.2) import and check of metabolomics data # (o_metab <- continuousomicdata(Scenedesmus_metab)) #> Warning:  #> We recommend you to check that your omic data were correctly pretreated #> before importation. In particular data (e.g. metabolomic signal) should #> have been log-transformed, without replacing 0 values by NA values #> (consider using the half minimum method instead for example). #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.69  1.1 1.79 2.92 4.78 7.76  #>    6    3    3    3    3    3    3  #> Number of items: 224  #> Identifiers of the first 20 items: #>  #>  [1] \"NAP_1\"  \"NAP_2\"  \"NAP_3\"  \"NAP_4\"  \"NAP_5\"  \"NAP_6\"  \"NAP_7\"  \"NAP_8\"  #>  [9] \"NAP_9\"  \"NAP_11\" \"NAP_13\" \"NAP_14\" \"NAP_15\" \"NAP_16\" \"NAP_17\" \"NAP_18\" #> [17] \"NAP_19\" \"NAP_20\" \"NAP_21\" \"NAP_22\" plot(o_metab)   # (2.1) load of apical data # data(Scenedesmus_apical) head(Scenedesmus_apical) #>               V1      V2       V3       V4      V5      V6       V7      V8 #> 1       endpoint 0.10000  0.10000  0.10000 0.10000 0.10000  0.10000  0.1000 #> 2         growth 4.05405 -3.86402 -0.40118 0.21115 4.78474 -0.28645 -1.9627 #> 3 photosynthesis 0.00000  0.00000  0.00000 0.00000 0.00000  0.00000  0.0000 #>         V9     V10      V11      V12      V13      V14      V15      V16 #> 1  0.10000 0.10000  0.10000  0.10000  0.10000  2.40000  2.40000  2.40000 #> 2 -2.53559 8.21172 -4.63598 -1.64234 -1.93339 -7.98142  7.33857  3.34705 #> 3  0.00000 0.00000  0.00000  0.00000  0.00000 -7.18853 -4.50187 -8.42766 #>        V17       V18       V19      V20       V21      V22       V23      V24 #> 1  2.40000   2.40000   2.40000  3.80000   3.80000  6.20000   6.20000 10.10000 #> 2 -2.55707  -8.68987 -11.48974  1.41102 -10.93750 -4.08453 -12.98564  2.45072 #> 3 -5.63618 -11.47670  -6.96251 -7.53671  -8.01109 -6.37088  -8.79645 -7.67328 #>        V25      V26       V27      V28      V29       V30       V31      V32 #> 1 10.10000 16.50000  16.50000 16.50000 16.50000  16.50000  16.50000 26.80000 #> 2 -3.71622 27.30152  29.05854 17.60842 14.03268  18.95971  16.65211 64.81147 #> 3 -7.28024 -6.78936 -12.60403 -5.77177 -5.86055 -18.67683 -14.58052 -5.76963 #>       V33      V34      V35      V36      V37 #> 1 26.8000 43.50000 43.50000 70.70000 70.70000 #> 2 58.3826 77.06083 72.71959 72.94341 81.89225 #> 3  5.8997 22.08560 19.35689 21.28191 35.79860 str(Scenedesmus_apical) #> 'data.frame':\t3 obs. of  37 variables: #>  $ V1 : chr  \"endpoint\" \"growth\" \"photosynthesis\" #>  $ V2 : num  0.1 4.05 0 #>  $ V3 : num  0.1 -3.86 0 #>  $ V4 : num  0.1 -0.401 0 #>  $ V5 : num  0.1 0.211 0 #>  $ V6 : num  0.1 4.78 0 #>  $ V7 : num  0.1 -0.286 0 #>  $ V8 : num  0.1 -1.96 0 #>  $ V9 : num  0.1 -2.54 0 #>  $ V10: num  0.1 8.21 0 #>  $ V11: num  0.1 -4.64 0 #>  $ V12: num  0.1 -1.64 0 #>  $ V13: num  0.1 -1.93 0 #>  $ V14: num  2.4 -7.98 -7.19 #>  $ V15: num  2.4 7.34 -4.5 #>  $ V16: num  2.4 3.35 -8.43 #>  $ V17: num  2.4 -2.56 -5.64 #>  $ V18: num  2.4 -8.69 -11.48 #>  $ V19: num  2.4 -11.49 -6.96 #>  $ V20: num  3.8 1.41 -7.54 #>  $ V21: num  3.8 -10.94 -8.01 #>  $ V22: num  6.2 -4.08 -6.37 #>  $ V23: num  6.2 -13 -8.8 #>  $ V24: num  10.1 2.45 -7.67 #>  $ V25: num  10.1 -3.72 -7.28 #>  $ V26: num  16.5 27.3 -6.79 #>  $ V27: num  16.5 29.1 -12.6 #>  $ V28: num  16.5 17.61 -5.77 #>  $ V29: num  16.5 14.03 -5.86 #>  $ V30: num  16.5 19 -18.7 #>  $ V31: num  16.5 16.7 -14.6 #>  $ V32: num  26.8 64.81 -5.77 #>  $ V33: num  26.8 58.4 5.9 #>  $ V34: num  43.5 77.1 22.1 #>  $ V35: num  43.5 72.7 19.4 #>  $ V36: num  70.7 72.9 21.3 #>  $ V37: num  70.7 81.9 35.8  # (2.2) import and check of apical data # (o_apical <- continuousanchoringdata(Scenedesmus_apical, backgrounddose = 0.1)) #> Warning:  #> We recommend you to check that your anchoring data are continuous and #> defined in a scale that enable the use of a normal error model (needed #> at each step of the workflow including the selection step). #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0  2.4  3.8  6.2 10.1 16.5 26.8 43.5 70.7  #>   12    6    2    2    2    6    2    2    2  #> Number of endpoints: 2  #> Names of the endpoints: #> [1] \"growth\"         \"photosynthesis\" # It is here necessary to define the background dose as there is no dose at 0 in the data # The BMD cannot be computed without defining the background level plot(o_apical) #> Warning: log-10 transformation introduced infinite values.   # (2.3) selection of responsive endpoints on apical data # (s_apical <- itemselect(o_apical, select.method = \"quadratic\", FDR = 0.05)) #> Number of selected items using a quadratic trend test with an FDR of 0.05: 2 #> Identifiers of the responsive items: #> [1] \"growth\"         \"photosynthesis\"  # (2.4) fit of dose-response models on apical data # (f_apical <- drcfit(s_apical, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> Distribution of the chosen models among the 2 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0                0                0                2  #> log-Gauss-probit  #>                0  #> Distribution of the trends (curve shapes) among the 2 fitted dose-response curves: #>  #> U  #> 2  f_apical$fitres #>               id irow    adjpvalue        model nbpar        b        c #> 1         growth    1 4.120696e-17 Gauss-probit     4 12.20929 77.03040 #> 2 photosynthesis    2 2.669437e-13 Gauss-probit     4 16.87413 28.65168 #>          d        e         f    SDres typology trend        y0 yatdosemax #> 1 77.03040  5.38810 -84.19789 5.236305     GP.U     U  0.644969   77.03035 #> 2 28.65168 12.88431 -40.04502 3.788006     GP.U     U -1.267411   28.53860 #>     yrange maxychange  xextrem    yextrem #> 1 84.19784   76.38538  5.38810  -7.167487 #> 2 39.93195   29.80601 12.88431 -11.393343 plot(f_apical)  #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  plot(f_apical, dose_log_trans = TRUE) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  plot(f_apical, plot.type = \"dose_residuals\") #> Warning: log-10 transformation introduced infinite values.   # (2.5) Benchmark dose calculation on apical data # r_apical <- bmdcalc(f_apical, z = 1) r_apical$res #>               id irow    adjpvalue        model nbpar        b        c #> 1         growth    1 4.120696e-17 Gauss-probit     4 12.20929 77.03040 #> 2 photosynthesis    2 2.669437e-13 Gauss-probit     4 16.87413 28.65168 #>          d        e         f    SDres typology trend        y0 yatdosemax #> 1 77.03040  5.38810 -84.19789 5.236305     GP.U     U  0.644969   77.03035 #> 2 28.65168 12.88431 -40.04502 3.788006     GP.U     U -1.267411   28.53860 #>     yrange maxychange  xextrem    yextrem  BMD.zSD   BMR.zSD  BMD.xfold #> 1 84.19784   76.38538  5.38810  -7.167487 2.344346 -4.591336 0.02400000 #> 2 39.93195   29.80601 12.88431 -11.393343 2.978888 -5.055417 0.09375678 #>    BMR.xfold #> 1  0.5804721 #> 2 -1.3941523   # }"},{"path":"/reference/Zhou.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","title":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","text":"RNAseq data set effect Tetrachloroethylene (PCE) mouse kidney. environmental contaminant administered gavage aqueous vehicle male B6C3F1/J mice, within dose-reponse design including five doses plus control.","code":""},{"path":"/reference/Zhou.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","text":"","code":"data(Zhou_kidney_pce)"},{"path":"/reference/Zhou.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","text":"Zhou_kidney_pce contains one row per transcript, first column corresponding identifier transcript, columns giving count reads replicate dose. first line, name identifier column, tested doses corresponding replicate.","code":""},{"path":"/reference/Zhou.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","text":"Zhou, Y. H., Cichocki, J. ., Soldatow, V. Y., Scholl, E. H., Gallins, P. J., Jima, D., ... & Rusyn, . 2017. Comparative dose-response analysis liver kidney transcriptomic effects trichloroethylene tetrachloroethylene B6C3F1 mouse. Toxicological sciences, 160(1), 95-110.","code":""},{"path":"/reference/Zhou.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dose-response kidney transcriptomic effect of Tetrachloroethylene in mouse — Zhou","text":"","code":"# (1) load of data # data(Zhou_kidney_pce) head(Zhou_kidney_pce) #>             V1   V2   V3      V4      V5      V6      V7      V8      V9  V10 #> 1       RefSeq    0    0    0.22    0.22    0.22    0.67    0.67    0.67    2 #> 2    NM_144958 2072 2506 2519.00 2116.00 1999.00 2113.00 2219.00 2322.00 2359 #> 3    NR_102758    0    0    0.00    0.00    0.00    0.00    0.00    0.00    0 #> 4    NM_172405  198  265  250.00  245.00  212.00  206.00  227.00  246.00  265 #> 5    NM_029777   18   29   25.00   19.00   19.00   13.00   22.00   19.00   19 #> 6 NM_001130188    0    0    0.00    0.00    0.00    0.00    0.00    1.00    0 #>    V11  V12  V13  V14  V15 #> 1    2    2    6    6    6 #> 2 1932 1705 2110 2311 2140 #> 3    0    0    0    0    0 #> 4  205  175  288  315  242 #> 5   26   16   26   32   33 #> 6    0    0    1    0    1 str(Zhou_kidney_pce) #> 'data.frame':\t33395 obs. of  15 variables: #>  $ V1 : chr  \"RefSeq\" \"NM_144958\" \"NR_102758\" \"NM_172405\" ... #>  $ V2 : int  0 2072 0 198 18 0 0 3 0 61 ... #>  $ V3 : int  0 2506 0 265 29 0 0 1 0 65 ... #>  $ V4 : num  0.22 2519 0 250 25 ... #>  $ V5 : num  0.22 2116 0 245 19 ... #>  $ V6 : num  0.22 1999 0 212 19 ... #>  $ V7 : num  0.67 2113 0 206 13 ... #>  $ V8 : num  0.67 2219 0 227 22 ... #>  $ V9 : num  0.67 2322 0 246 19 ... #>  $ V10: int  2 2359 0 265 19 0 0 0 0 91 ... #>  $ V11: int  2 1932 0 205 26 0 0 0 0 59 ... #>  $ V12: int  2 1705 0 175 16 0 0 0 0 47 ... #>  $ V13: int  6 2110 0 288 26 1 0 0 0 42 ... #>  $ V14: int  6 2311 0 315 32 0 0 0 0 60 ... #>  $ V15: int  6 2140 0 242 33 1 0 2 1 58 ...  # \\donttest{  # (2) import, check, normalization and transformation of a sample # of one of those datasets # d <- Zhou_kidney_pce[1:501, ] (o <- RNAseqdata(d)) #> Just wait, the transformation using regularized logarithm (rlog) may  #> take a few minutes. #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 500  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: rlog plot(o)    # (3) analysis of the whole dataset (for kidney and PCE) # (may be long to run)  d <- Zhou_kidney_pce (o <- RNAseqdata(d)) #> Just wait, the transformation using regularized logarithm (rlog) may  #> take a few minutes. #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.22 0.67    2    6  #>    2    3    3    3    3  #> Number of items: 33394  #> Identifiers of the first 20 items: #>  [1] \"NM_144958\"    \"NR_102758\"    \"NM_172405\"    \"NM_029777\"    \"NM_001130188\" #>  [6] \"NM_207141\"    \"NM_001162368\" \"NM_008117\"    \"NM_001168290\" \"NM_010910\"    #> [11] \"NM_001004147\" \"NM_001146318\" \"NM_145597\"    \"NM_001161797\" \"NM_021483\"    #> [16] \"NR_002862\"    \"NR_033520\"    \"NM_134027\"    \"NM_010381\"    \"NM_019388\"    #> Data were normalized with respect to library size and tranformed using  #> the following method: rlog plot(o)  (s <- itemselect(o, select.method = \"quadratic\", FDR = 0.01)) #> converting counts to integer mode #>   the design formula contains one or more numeric variables with integer values, #>   specifying a model with increasing fold change for higher values. #>   did you mean for this to be a factor? if so, first convert #>   this variable to a factor using the factor() function #>   the design formula contains one or more numeric variables that have mean or #>   standard deviation larger than 5 (an arbitrary threshold to trigger this message). #>   Including numeric variables with large mean can induce collinearity with the intercept. #>   Users should center and scale numeric variables in the design to improve GLM convergence. #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #> Number of selected items using a quadratic trend test with an FDR of 0.01: 930 #> Identifiers of the first 20 most responsive items: #>  [1] \"NM_012055\"    \"NM_026929\"    \"NM_134188\"    \"NM_175093\"    \"NM_008638\"    #>  [6] \"NM_180678\"    \"NM_012006\"    \"NM_011076\"    \"NM_001302163\" \"NM_007918\"    #> [11] \"NM_028994\"    \"NM_172015\"    \"NM_146200\"    \"NM_001081318\" \"NM_011704\"    #> [16] \"NM_017399\"    \"NM_007822\"    \"NM_010011\"    \"NM_144869\"    \"NM_146230\"    (f <- drcfit(s, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 25 dose-response curves out of 930 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 905 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                1              769               26               86  #> log-Gauss-probit  #>               23  #> Distribution of the trends (curve shapes) among the 905 fitted dose-response curves: #>  #>    U bell  dec  inc  #>   67   41  363  434  head(f$fitres) #>          id  irow    adjpvalue       model nbpar          b       c         d #> 1 NM_012055 22032 6.756994e-42        Hill     4 2.70352170 9.81098  7.546171 #> 2 NM_026929 14409 4.585837e-37      linear     2 0.31249103      NA  5.726443 #> 3 NM_134188   986 5.247894e-36      linear     2 0.23123224      NA 10.418319 #> 4 NM_175093 26225 3.843143e-33 exponential     3 0.23781018      NA  5.356573 #> 5 NM_008638 30943 1.187148e-32      linear     2 0.27254307      NA  7.543362 #> 6 NM_180678 14173 9.154882e-29      linear     2 0.08641914      NA 11.552080 #>          e  f      SDres     typology trend        y0 yatdosemax    yrange #> 1 1.885806 NA 0.21185102        H.inc   inc  7.546171   9.716030 2.1698591 #> 2       NA NA 0.25622487        L.inc   inc  5.726443   7.601389 1.8749462 #> 3       NA NA 0.17560544        L.inc   inc 10.418319  11.805713 1.3873934 #> 4 2.906675 NA 0.16172244 E.inc.convex   inc  5.356573   6.992494 1.6359211 #> 5       NA NA 0.23350538        L.inc   inc  7.543362   9.178620 1.6352584 #> 6       NA NA 0.04747107        L.inc   inc 11.552080  12.070595 0.5185148 #>   maxychange xextrem yextrem #> 1  2.1698591      NA      NA #> 2  1.8749462      NA      NA #> 3  1.3873934      NA      NA #> 4  1.6359211      NA      NA #> 5  1.6352584      NA      NA #> 6  0.5185148      NA      NA  plot(f)  #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  plot(f, dose_log_trans = TRUE) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  plot(f, plot.type = \"dose_residuals\") #> Warning: log-10 transformation introduced infinite values.   r <- bmdcalc(f, z = 1) plot(r)   plot(r, by = \"trend\")  head(r$res) #>          id  irow    adjpvalue       model nbpar          b       c         d #> 1 NM_012055 22032 6.756994e-42        Hill     4 2.70352170 9.81098  7.546171 #> 2 NM_026929 14409 4.585837e-37      linear     2 0.31249103      NA  5.726443 #> 3 NM_134188   986 5.247894e-36      linear     2 0.23123224      NA 10.418319 #> 4 NM_175093 26225 3.843143e-33 exponential     3 0.23781018      NA  5.356573 #> 5 NM_008638 30943 1.187148e-32      linear     2 0.27254307      NA  7.543362 #> 6 NM_180678 14173 9.154882e-29      linear     2 0.08641914      NA 11.552080 #>          e  f      SDres     typology trend        y0 yatdosemax    yrange #> 1 1.885806 NA 0.21185102        H.inc   inc  7.546171   9.716030 2.1698591 #> 2       NA NA 0.25622487        L.inc   inc  5.726443   7.601389 1.8749462 #> 3       NA NA 0.17560544        L.inc   inc 10.418319  11.805713 1.3873934 #> 4 2.906675 NA 0.16172244 E.inc.convex   inc  5.356573   6.992494 1.6359211 #> 5       NA NA 0.23350538        L.inc   inc  7.543362   9.178620 1.6352584 #> 6       NA NA 0.04747107        L.inc   inc 11.552080  12.070595 0.5185148 #>   maxychange xextrem yextrem   BMD.zSD   BMR.zSD BMD.xfold BMR.xfold #> 1  2.1698591      NA      NA 0.8140636  7.758022  1.458975  8.300788 #> 2  1.8749462      NA      NA 0.8199431  5.982668  1.832514  6.299087 #> 3  1.3873934      NA      NA 0.7594332 10.593925  4.505565 11.460151 #> 4  1.6359211      NA      NA 1.5080487  5.518295  3.428164  5.892230 #> 5  1.6352584      NA      NA 0.8567651  7.776867  2.767769  8.297698 #> 6  0.5185148      NA      NA 0.5493120 11.599551        NA 12.707288  # }"},{"path":"/reference/bmdboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"Computes  95 percent confidence intervals x-fold z-SD benchmark doses bootstrap.","code":""},{"path":"/reference/bmdboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"","code":"bmdboot(r, items = r$res$id, niter = 1000,                      conf.level = 0.95,                      tol = 0.5, progressbar = TRUE,                      parallel = c(\"no\", \"snow\", \"multicore\"), ncpus)  # S3 method for class 'bmdboot' print(x, ...)  # S3 method for class 'bmdboot' plot(x, BMDtype = c(\"zSD\", \"xfold\"), remove.infinite = TRUE,                    by = c(\"none\", \"trend\", \"model\", \"typology\"),                     CI.col = \"blue\", BMD_log_transfo = TRUE,  ...)"},{"path":"/reference/bmdboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"r object class \"bmdcalc\" returned function bmdcalc. items character vector specifying identifiers items want computation confidence intervals. omitted computation done items. niter number samples drawn bootstrap. conf.level Confidence level intervals. tol tolerance term proportion bootstrap samples fit model successful (proportion tolerance, NA values given limits confidence interval. progressbar TRUE progress bar used follow bootstrap process. parallel type parallel operation used, \"snow\" \"multicore\"   (second one available Windows),   \"\" parallel operation. ncpus Number processes used parallel operation :   typically one fix number available CPUs. x object class \"bmdboot\". BMDtype type BMD plot, \"zSD\" (default choice) \"xfold\". remove.infinite TRUE confidence intervals non finite upper bound plotted. \"none\" plot split indicated factor (\"trend\",   \"model\" \"typology\"). CI.col color draw confidence intervals. BMD_log_transfo TRUE, default option, log transformation BMD used plot. ... arguments passed graphical print functions.","code":""},{"path":"/reference/bmdboot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"Non-parametric bootstrapping used, mean centered residuals bootstrapped. item, bootstrapped parameter estimates obtained fitting model resampled data sets. fitting procedure fails converge tol*100% cases, NA values given confidence interval. Otherwise, bootstraped BMD computed bootstrapped parameter estimates using method bmdcalc. Confidence intervals BMD computed using percentiles bootstrapped BMDs. example 95 percent confidence intervals computed using 2.5 97.5 percentiles bootstrapped BMDs. cases bootstrapped BMD estimated reached highest tested dose reachable due model asymptotes, given infinite value Inf, enable computation lower limit BMD confidence interval sufficient number bootstrapped BMD values estimated finite values.","code":""},{"path":"/reference/bmdboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"bmdboot returns object class \"bmdboot\", list 3 components:  res data frame reporting results fit, BMD computation bootstrap    specified item sorted ascending order adjusted p-values. different columns correspond    identifier item (id), row number item initial data set (irow),    adjusted p-value selection step (adjpvalue), name best fit model (model),    number fitted parameters (nbpar), values parameters b, c, d,    e f, (NA non used parameters), residual standard deviation (SDres),    typology curve (typology, (16 class typology described help drcfit    function)), rough trend curve (trend) defined four classes    (U, bell, increasing decreasing shape), theoretical y value control (y0),    theoretical y value maximal dose yatdosemax),    theoretical y range x within range tested doses    (yrange), maximal absolute y change () control(maxychange)    biphasic curves    x value extremum reached (xextrem)    corresponding y value (yextrem), BMD-zSD value (BMD.zSD)    corresponding BMR-zSD value (reached , BMR.zSD)    BMD-xfold value (BMD.xfold)    corresponding BMR-xfold value (reached , BMR.xfold),    BMD.zSD.lower  BMD.zSD.upper lower upper bounds    confidence intervals BMD-zSD value,    BMD.xfold.lower  BMD.xfold.upper lower upper bounds    confidence intervals BMD-xfold value    nboot.successful number successful fits bootstrapped samples item. z Value z given input define BMD-zSD. x Value x given input percentage define BMD-xfold. tol tolerance given input term tolerated proportion failures   fit bootstrapped samples. niter number samples drawn bootstrap (given input).","code":""},{"path":[]},{"path":"/reference/bmdboot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"Huet S, Bouvier , Poursat M-, Jolivet E (2003) Statistical tools nonlinear regression: practical guide S-PLUS R examples. Springer, Berlin, Heidelberg, New York.","code":""},{"path":"/reference/bmdboot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/bmdboot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of confidence interval on benchmark doses by bootstrap — bmdboot","text":"","code":"# (1) a toy example (a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",    package = \"DRomics\")  # to test the package on a small but not very small data set # use the following commented line # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package = \"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% r <- bmdcalc(f) set.seed(1234) # to get reproducible results with a so small number of iterations (b <- bmdboot(r, niter = 5)) # with a non reasonable value for niter  #> Warning:  #> A small number of iterations (less than 1000) may not be sufficient to #> ensure a good quality of bootstrap confidence intervals. #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation was successful on 10 items among10. #> For 0 BMD.zSD values and 4 BMD.xfold values among 10 at least one bound  #> of the 95 percent confidence interval could not be computed due to some  #> bootstrapped BMD values not reachable due to model asymptotes or  #> reached outside the range of tested doses (bounds coded Inf)). # !!!! TO GET CORRECT RESULTS # !!!! niter SHOULD BE FIXED FAR LARGER , e.g. to 1000  # !!!! but the run will be longer  b$res #>      id irow    adjpvalue        model nbpar            b          c          d #> 1    15   15 1.546048e-05  exponential     3  0.071422368         NA   7.740153 #> 2  12.1   12 2.869315e-05 Gauss-probit     5  0.414151082   8.903415   7.564374 #> 3  27.1   27 3.087292e-05       linear     2 -0.108446801         NA  15.608419 #> 4  25.1   25 1.597308e-04  exponential     3 -0.128807120         NA  15.142111 #> 5     4    4 2.302448e-04 Gauss-probit     4  3.079188189   9.851210   9.851210 #> 6    70   70 2.323292e-04  exponential     3 -0.007515088         NA   6.682254 #> 7   7.1    7 2.712029e-04 Gauss-probit     4  2.384260578   9.122630   9.122630 #> 8  88.1   88 4.566344e-04 Gauss-probit     4  2.103260654  11.157946  11.157946 #> 9    92   92 4.566344e-04 Gauss-probit     4  8.381660245 -27.802234 -27.802234 #> 10   81   81 6.448977e-04  exponential     3 -0.025717119         NA   6.713592 #>           e          f     SDres      typology trend        y0 yatdosemax #> 1  2.276377         NA 0.3183292  E.inc.convex   inc  7.740153   8.983706 #> 2  1.131878  0.7204105 0.3802228       GP.bell  bell  7.585780   8.903415 #> 3        NA         NA 0.1648041         L.dec   dec 15.608419  14.889308 #> 4  3.404150         NA 0.2142472 E.dec.concave   dec 15.142111  14.367457 #> 5  1.959459 -1.6121603 0.2994936          GP.U     U  8.534547   9.341173 #> 6  1.074077         NA 1.1263294 E.dec.concave   dec  6.682254   3.082935 #> 7  1.735801 -0.9436037 0.2594717          GP.U     U  8.398699   9.007963 #> 8  1.755034  0.7172904 0.2131311       GP.bell  bell 11.664352  11.206771 #> 9  2.557094 37.5298696 1.1492863       GP.bell  bell  8.021106   5.546334 #> 10 1.357555         NA 1.1925115 E.dec.concave   dec  6.713592   3.338828 #>       yrange maxychange  xextrem   yextrem   BMD.zSD   BMR.zSD BMD.xfold #> 1  1.2435537  1.2435537       NA        NA 3.8627796  8.058482 5.6254804 #> 2  1.5579862  1.5579862 1.438980  9.143766 0.5682965  7.966002 0.7867277 #> 3  0.7191107  0.7191107       NA        NA 1.5196769 15.443615        NA #> 4  0.7746535  0.7746535       NA        NA 3.3346126 14.927864        NA #> 5  1.1021236  0.8066266 1.959459  8.239050 4.9146813  8.834040        NA #> 6  3.5993187  3.5993187       NA        NA 5.3880607  5.555924 4.8321611 #> 7  0.8289366  0.6092640 1.735801  8.179027 4.5746396  8.658171        NA #> 8  0.6684651  0.4575814 1.755034 11.875236 4.5680110 11.451221        NA #> 9  4.1813022  2.4747723 2.557094  9.727636 1.1073035  9.170392 0.7057605 #> 10 3.3747644  3.3747644       NA        NA 5.2374434  5.521081 4.4795770 #>    BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper #> 1   8.514168     2.5419700     5.4286722       5.2096765       6.3162984 #> 2   8.344358     0.3962742     0.6113321       0.7585065       0.8436521 #> 3  14.047577     1.2880859     1.8703357             Inf             Inf #> 4  13.627900     1.7779710     4.3860469             Inf             Inf #> 5   9.388001     0.8764847     4.6482205       6.2736049       6.5002416 #> 6   6.014028     5.5427871     5.8066178       4.8002579       5.2522007 #> 7   9.238569     0.8306627     5.0191965             Inf             Inf #> 8  10.497917     0.8761450     1.3426819             Inf             Inf #> 9   8.823216     0.6833626     1.7755504       0.5927639       0.9811746 #> 10  6.042233     4.3970380     5.6776339       3.2853517       5.1984168 #>    nboot.successful #> 1                 5 #> 2                 3 #> 3                 5 #> 4                 5 #> 5                 3 #> 6                 3 #> 7                 4 #> 8                 5 #> 9                 3 #> 10                4 plot(b) # plot of BMD.zSD after removing of BMDs with infinite upper bounds   # \\donttest{ # same plot in raw scale (without log transformation of BMD values) plot(b, BMD_log_transfo = FALSE)   # plot of BMD.zSD without removing of BMDs  # with infinite upper bounds plot(b, remove.infinite = FALSE)   # }   # bootstrap on only a subsample of items # with a greater number of iterations # \\donttest{ chosenitems <- r$res$id[1:5]  (b.95 <- bmdboot(r, items = chosenitems,                      niter = 1000, progressbar = TRUE)) #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation was successful on 5 items among5. #> For 0 BMD.zSD values and 3 BMD.xfold values among 5 at least one bound  #> of the 95 percent confidence interval could not be computed due to some  #> bootstrapped BMD values not reachable due to model asymptotes or  #> reached outside the range of tested doses (bounds coded Inf)). b.95$res #>     id irow    adjpvalue        model nbpar           b        c         d #> 1   15   15 1.546048e-05  exponential     3  0.07142237       NA  7.740153 #> 2 12.1   12 2.869315e-05 Gauss-probit     5  0.41415108 8.903415  7.564374 #> 3 27.1   27 3.087292e-05       linear     2 -0.10844680       NA 15.608419 #> 4 25.1   25 1.597308e-04  exponential     3 -0.12880712       NA 15.142111 #> 5    4    4 2.302448e-04 Gauss-probit     4  3.07918819 9.851210  9.851210 #>          e          f     SDres      typology trend        y0 yatdosemax #> 1 2.276377         NA 0.3183292  E.inc.convex   inc  7.740153   8.983706 #> 2 1.131878  0.7204105 0.3802228       GP.bell  bell  7.585780   8.903415 #> 3       NA         NA 0.1648041         L.dec   dec 15.608419  14.889308 #> 4 3.404150         NA 0.2142472 E.dec.concave   dec 15.142111  14.367457 #> 5 1.959459 -1.6121603 0.2994936          GP.U     U  8.534547   9.341173 #>      yrange maxychange  xextrem  yextrem   BMD.zSD   BMR.zSD BMD.xfold #> 1 1.2435537  1.2435537       NA       NA 3.8627796  8.058482 5.6254804 #> 2 1.5579862  1.5579862 1.438980 9.143766 0.5682965  7.966002 0.7867277 #> 3 0.7191107  0.7191107       NA       NA 1.5196769 15.443615        NA #> 4 0.7746535  0.7746535       NA       NA 3.3346126 14.927864        NA #> 5 1.1021236  0.8066266 1.959459 8.239050 4.9146813  8.834040        NA #>   BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper #> 1  8.514168     1.9234542     5.3597201        4.288446        6.313835 #> 2  8.344358     0.2467196     0.8196903        0.507739        1.068040 #> 3 14.047577     0.9228184     2.1008927             Inf             Inf #> 4 13.627900     1.5729443     5.0433579             Inf             Inf #> 5  9.388001     0.5446487     5.1515178        5.792727             Inf #>   nboot.successful #> 1              932 #> 2              559 #> 3             1000 #> 4              931 #> 5              745  # Plot of fits with BMD values  and confidence intervals # with the default BMD.zSD plot(f, items = chosenitems, BMDoutput = b.95, BMDtype = \"zSD\") #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  # with the default BMD.xfold  plot(f, items = chosenitems, BMDoutput = b.95, BMDtype = \"xfold\") #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_vline()`).   # same bootstrap but changing the default confidence level (0.95) to 0.90 (b.90 <- bmdboot(r, items = chosenitems,                        niter = 1000, conf.level = 0.9, progressbar = TRUE)) #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation was successful on 5 items among5. #> For 0 BMD.zSD values and 3 BMD.xfold values among 5 at least one bound  #> of the 95 percent confidence interval could not be computed due to some  #> bootstrapped BMD values not reachable due to model asymptotes or  #> reached outside the range of tested doses (bounds coded Inf)). b.90$res #>     id irow    adjpvalue        model nbpar           b        c         d #> 1   15   15 1.546048e-05  exponential     3  0.07142237       NA  7.740153 #> 2 12.1   12 2.869315e-05 Gauss-probit     5  0.41415108 8.903415  7.564374 #> 3 27.1   27 3.087292e-05       linear     2 -0.10844680       NA 15.608419 #> 4 25.1   25 1.597308e-04  exponential     3 -0.12880712       NA 15.142111 #> 5    4    4 2.302448e-04 Gauss-probit     4  3.07918819 9.851210  9.851210 #>          e          f     SDres      typology trend        y0 yatdosemax #> 1 2.276377         NA 0.3183292  E.inc.convex   inc  7.740153   8.983706 #> 2 1.131878  0.7204105 0.3802228       GP.bell  bell  7.585780   8.903415 #> 3       NA         NA 0.1648041         L.dec   dec 15.608419  14.889308 #> 4 3.404150         NA 0.2142472 E.dec.concave   dec 15.142111  14.367457 #> 5 1.959459 -1.6121603 0.2994936          GP.U     U  8.534547   9.341173 #>      yrange maxychange  xextrem  yextrem   BMD.zSD   BMR.zSD BMD.xfold #> 1 1.2435537  1.2435537       NA       NA 3.8627796  8.058482 5.6254804 #> 2 1.5579862  1.5579862 1.438980 9.143766 0.5682965  7.966002 0.7867277 #> 3 0.7191107  0.7191107       NA       NA 1.5196769 15.443615        NA #> 4 0.7746535  0.7746535       NA       NA 3.3346126 14.927864        NA #> 5 1.1021236  0.8066266 1.959459 8.239050 4.9146813  8.834040        NA #>   BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper #> 1  8.514168     2.1636242     5.1282797       4.4988439        6.218120 #> 2  8.344358     0.2862136     0.7639272       0.5873191        1.026054 #> 3 14.047577     0.9791835     2.0226321             Inf             Inf #> 4 13.627900     1.8299433     4.8873535             Inf             Inf #> 5  9.388001     0.6371109     4.9854763       5.9397256             Inf #>   nboot.successful #> 1              942 #> 2              580 #> 3             1000 #> 4              949 #> 5              769   # }    # (2) an example on a microarray data set (a subsample of a greater data set)  # # \\donttest{ datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.001: 78 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  15%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 11 dose-response curves out of 78 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 67 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0               11               30               23  #> log-Gauss-probit  #>                3  #> Distribution of the trends (curve shapes) among the 67 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    6   20   22   19  (r <- bmdcalc(f)) #> 1 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 28 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses). (b <- bmdboot(r, niter = 100)) # niter to put at 1000 for a better precision #> Warning:  #> A small number of iterations (less than 1000) may not be sufficient to #> ensure a good quality of bootstrap confidence intervals. #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |==============                                                        |  19%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |===========================================                           |  61%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  78%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation failed on 4 items among 67  #> due to lack of convergence of the model fit for a fraction of the  #> bootstrapped samples greater than 0.5. #> For 0 BMD.zSD values and 36 BMD.xfold values among 67 at least one  #> bound of the 95 percent confidence interval could not be computed due  #> to some bootstrapped BMD values not reachable due to model asymptotes  #> or reached outside the range of tested doses (bounds coded Inf)).  # different plots of BMD-zSD plot(b) #> Warning:  #> 4 BMD values for which lower and upper bounds were coded NA or with #> lower or upper infinite bounds were removed before plotting.  plot(b, by = \"trend\")  #> Warning:  #> 4 BMD values for which lower and upper bounds were coded NA or with #> lower or upper infinite bounds were removed before plotting.  plot(b, by = \"model\")  #> Warning:  #> 4 BMD values for which lower and upper bounds were coded NA or with #> lower or upper infinite bounds were removed before plotting.  plot(b, by = \"typology\")  #> Warning:  #> 4 BMD values for which lower and upper bounds were coded NA or with #> lower or upper infinite bounds were removed before plotting.   # a plot of BMD-xfold (by default BMD-zSD is plotted) plot(b, BMDtype = \"xfold\")  #> Warning:  #> 40 BMD values for which lower and upper bounds were coded NA or with #> lower or upper infinite bounds were removed before plotting.  # }  # (3) Comparison of parallel and non parallel implementations  # # \\donttest{ # to be tested with a greater number of iterations if(!requireNamespace(\"parallel\", quietly = TRUE)) {    if(parallel::detectCores() > 1) {       system.time(b1 <- bmdboot(r, niter = 100, progressbar = TRUE))       system.time(b2 <- bmdboot(r, niter = 100, progressbar = FALSE, parallel = \"snow\", ncpus = 2)) }} # }"},{"path":"/reference/bmdcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of benchmark doses for responsive items — bmdcalc","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"Computes x-fold z-SD benchmark doses responsive item using best fit dose-reponse model.","code":""},{"path":"/reference/bmdcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"","code":"bmdcalc(f, z = 1, x = 10, minBMD, ratio2switchinlog = 100)  # S3 method for class 'bmdcalc' print(x, ...)  # S3 method for class 'bmdcalc' plot(x, BMDtype = c(\"zSD\", \"xfold\"),              plottype = c(\"ecdf\", \"hist\", \"density\"),              by = c(\"none\", \"trend\", \"model\", \"typology\"),             hist.bins = 30, BMD_log_transfo = TRUE, ...)"},{"path":"/reference/bmdcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"f object class \"drcfit\" returned function drcfit. z Value z defining BMD-zSD dose response reaching y0 +/- z * SD, y0 level control given dose-response fitted model SD residual standard deviation dose-response fitted model. x Value x given percentage defining BMD-xfold dose response reaching y0 +/- (x/100) * y0, y0 level control given dose-response fitted model. print plot functions, object class \"bmdcalc\". minBMD minimal value calculated BMDs, value considered negligible compared tested doses. given user argument fixed minimal non null tested dose divided 100. ratio2switchinlog ratio maximal minimal tested doses numerical computation (use uniroot necessary) BMD performed log scale dose. BMDtype type BMD plot, \"zSD\" (default choice) \"xfold\". plottype type plot, \"ecdf\" empirical cumulative distribution plot (default choice), \"hist\" histogram \"density\" density plot. different \"none\" plot split trend (\"trend\"), model (\"model\") typology (\"typology\"). hist.bins number bins, used histogram(s). BMD_log_transfo TRUE, default option, log transformation BMD used plot. ... arguments passed graphical print functions.","code":""},{"path":"/reference/bmdcalc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"two types benchmark doses (BMD) proposed EFSA (2017) computed responsive item using best fit dose-reponse model previously obtained using drcfit function (see Larras et al. 2018 details): BMD-zSD defined dose response reaching     y0 +/- z * SD, y0 level control given dose-response model, SD     residual standard deviation dose response model fit z given input     (z fixed 1  default), BMD-xfold defined dose response reaching   y0 +/- (x/100) * y0, y0 level control given dose-response fitted model   x percentage given input (x fixed 10 default.) analytical solution BMD, numerically searched along fitted curve using uniroot function. cases BMD reached due asymptote high doses, NaN returned. cases BMD reached highest tested dose, NA returned. low BMD values obtained extrapolation 0 smallest non null tested dose, correspond sensitive items (want exclude), thresholded minBMD, argument default fixed smallest non null tested dose divided 100, can fixed user considers negligible dose.","code":""},{"path":"/reference/bmdcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"bmdcalc returns object class \"bmdcalc\", list 4 components:  res data frame reporting results fit BMD computation    selected item sorted ascending order adjusted p-values returned function itemselect. different columns correspond identifier item (id), row number item initial data set (irow), adjusted p-value selection step (adjpvalue), name best fit model (model), number fitted parameters (nbpar), values parameters b, c, d, e f, (NA non used parameters), residual standard deviation (SDres), typology curve (typology, (16 class typology described help drcfit    function)),    rough trend curve (trend) defined four classes (U, bell, increasing decreasing shape),    theoretical y value control (y0),    theoretical y value maximal dose yatdosemax),    theoretical y range    x within range tested doses    (yrange), maximal absolute y change () control(maxychange)    biphasic curves    x value extremum reached (xextrem)    corresponding y value (yextrem), BMD-zSD value (BMD.zSD)    corresponding BMR-zSD value (reached , BMR.zSD)    BMD-xfold value (BMD.xfold)    corresponding BMR-xfold value (reached , BMR.xfold). z Value z given input define BMD-zSD. x Value x given input percentage define BMD-xfold. minBMD minimal value calculated BMDs given input fixed   minimal non null tested dose divided 100. ratio2switchinlog ratio maximal minimal tested doses numerical computations performed log scale (given input). omicdata corresponding object given input     (component itemselect).","code":""},{"path":[]},{"path":"/reference/bmdcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"EFSA Scientific Committee, Hardy , Benford D, Halldorsson T, Jeger MJ, Knutsen KH, ... & Schlatter JR  (2017). Update: use benchmark dose approach risk assessment. EFSA Journal, 15(1), e04658. Larras F, Billoir E, Baillard V, Siberchicot , Scholz S, Wubet T, Tarkka M, Schmitt-Jansen M Delignette-Muller ML (2018). DRomics: turnkey tool support use dose-response framework omics data ecological risk assessment. Environmental science & technology.doi:10.1021/acs.est.8b04752","code":""},{"path":"/reference/bmdcalc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"Marie-Laure Delignette-Muller Elise Billoir","code":""},{"path":"/reference/bmdcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of benchmark doses for responsive items — bmdcalc","text":"","code":"# (1) a toy example (a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\", package=\"DRomics\")  # to test the package on a small (for a quick calculation) but not very small data set # use the following commented line # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 100  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"6.1\"  \"7.1\"  \"8.1\"  \"9.1\"  \"10.1\" #> [11] \"11.1\" \"12.1\" \"13.1\" \"14.1\" \"15\"   \"16.1\" \"17.1\" \"18.1\" \"19.1\" \"20.1\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.01)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.01: 17 #> Identifiers of the responsive items: #>  [1] \"15\"   \"12.1\" \"27.1\" \"25.1\" \"4\"    \"70\"   \"7.1\"  \"88.1\" \"92\"   \"81\"   #> [11] \"13.1\" \"74.1\" \"83.1\" \"84.1\" \"54.1\" \"85.1\" \"67.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> Distribution of the chosen models among the 17 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0                4                6                6  #> log-Gauss-probit  #>                1  #> Distribution of the trends (curve shapes) among the 17 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    4    3    6    4  (r <- bmdcalc(f)) #> 9 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses). plot(r)    # \\donttest{ # same plot in raw scale of BMD (without log transformation of BMD values) plot(r, BMD_log_transfo = FALSE)    # changing the values of z and x for BMD calculation (rb <- bmdcalc(f, z = 2, x = 50)) #> 2 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 13 BMD-xfold values and 2 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses). plot(rb) #> Warning:  #> 2 BMD coded NA or NaN were removed before plotting.   # }  # Plot of fits with BMD values  # \\donttest{ # example with the BMD-1SD plot(f, BMDoutput = r, BMDtype = \"zSD\") #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # example with the BMD-2SD plot(f, BMDoutput = rb, BMDtype = \"zSD\") #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_vline()`).   # example with the BMD-xfold with x = 10 percent plot(f, BMDoutput = r, BMDtype = \"xfold\") #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: Removed 9 rows containing missing values or values outside the scale range #> (`geom_vline()`).  # }  # (2) an example on a microarray data set (a subsample of a greater data set)  # # \\donttest{ datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  # to test the package on a small (for a quick calculation) but not very small data set # use the following commented line # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.01)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.01: 183 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 30 dose-response curves out of 183 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 153 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                1               44               44               59  #> log-Gauss-probit  #>                5  #> Distribution of the trends (curve shapes) among the 153 fitted dose-response curves: #>  #>    U bell  dec  inc  #>   29   35   40   49  (r <- bmdcalc(f)) #> 2 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 82 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses). plot(r)    # different plots of BMD-zSD  plot(r, plottype = \"hist\")   plot(r, plottype = \"density\")   plot(r, plottype = \"density\", by = \"trend\")   plot(r, plottype = \"ecdf\", by = \"trend\")   plot(r, plottype = \"ecdf\", by = \"model\")   plot(r, plottype = \"ecdf\", by = \"typology\")    # a plot of BMD-xfold (by default BMD-zSD is plotted) plot(r, BMDtype = \"xfold\", plottype = \"hist\", by = \"typology\", hist.bins = 10)  #> Warning:  #> 84 BMD coded NA or NaN were removed before plotting.  # }"},{"path":"/reference/bmdfilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering BMDs according to estimation quality — bmdfilter","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"Filtering BMDs DRomics workflow output according estimation quality, retain best estimated BMDs subsequent biological annotation interpretation.","code":""},{"path":"/reference/bmdfilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"","code":"bmdfilter(res,                BMDfilter = c(\"definedCI\", \"finiteCI\", \"definedBMD\", \"none\"),               BMDtype = c(\"zSD\", \"xfold\"))"},{"path":"/reference/bmdfilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"res dataframe results provided  bmdboot bmdcalc (res)  subset data frame. Even function intended used just calculation  BMD values, biological annotation, can also used  within interpretation workflow, extended dataframe  additional columns coming example biological annotation items,  lines replicated items one annotation. case dataframe  must least contain column giving BMD values (BMD.zSD BMD.xfold  depending chosen BMDtype), identification curve (id),  BMDfilter set \"CIdefined\" \"CIfinite\",  columns BMD.zSD.lower, BMD.zSD.upper  BMD.xfold.lower, BMD.xfold.upper depending argument BMDtype. BMDfilter \"none\", type filter applied, based BMD estimation. \"definedCI\" (default choice), items point interval estimates BMD successfully calculated retained (items bootstrap procedure failed excluded). \"finiteCI\", items point interval estimates BMD successfully calculated gave values within range tested/observed doses retained. \"definedBMD\", items point estimate BMD estimated value within range tested/observed doses retained. BMDtype type BMD used previously described filtering procedure, \"zSD\" (default choice) \"xfold\".","code":""},{"path":"/reference/bmdfilter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"Using argument BMDfilter three filters proposed retain items associated best estimated BMD values. default recommend retain items BMD confidence interval defined (using \"CIdefined\") (excluding items bootstrap procedure failed). One can even restrictive retaining items BMD confidence interval within range tested/observed doses (using \"CIfinite\"), less restrictive (using \"BMDIdefined\") requiring BMD point estimate must defined within range tested/observed doses (let us recall bmdcalc output, case BMD coded NA). propose option \"none\" case, future, add filters based BMD.","code":""},{"path":"/reference/bmdfilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"dataframe corresponding subset res given input,    can used biological annotation exploration.","code":""},{"path":[]},{"path":"/reference/bmdfilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/bmdfilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering BMDs according to estimation quality — bmdfilter","text":"","code":"# (1) a toy example  # on a very small subsample of a microarray data set # and a very smal number of bootstrap iterations  # (clearly not sufficient, but it is just for illustration) # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",                             package = \"DRomics\")  # to test the package on a small but not very small data set # use the following commented line # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package = \"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.05) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |===                                                                   |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  14%   |                                                                               |=============                                                         |  19%   |                                                                               |=================                                                     |  24%   |                                                                               |====================                                                  |  29%   |                                                                               |=======================                                               |  33%   |                                                                               |===========================                                           |  38%   |                                                                               |==============================                                        |  43%   |                                                                               |=================================                                     |  48%   |                                                                               |=====================================                                 |  52%   |                                                                               |========================================                              |  57%   |                                                                               |===========================================                           |  62%   |                                                                               |===============================================                       |  67%   |                                                                               |==================================================                    |  71%   |                                                                               |=====================================================                 |  76%   |                                                                               |=========================================================             |  81%   |                                                                               |============================================================          |  86%   |                                                                               |===============================================================       |  90%   |                                                                               |===================================================================   |  95%   |                                                                               |======================================================================| 100% r <- bmdcalc(f) set.seed(1234) # to get reproducible results with a so small number of iterations (b <- bmdboot(r, niter = 10)) # with a non reasonable value for niter #> Warning:  #> A small number of iterations (less than 1000) may not be sufficient to #> ensure a good quality of bootstrap confidence intervals. #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |==========================================                            |  60%   |                                                                               |==============================================                        |  65%   |                                                                               |====================================================                  |  75%   |                                                                               |========================================================              |  80%   |                                                                               |============================================================          |  85%   |                                                                               |===============================================================       |  90%   |                                                                               |==================================================================    |  95%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation failed on 2 items among 20  #> due to lack of convergence of the model fit for a fraction of the  #> bootstrapped samples greater than 0.5. #> For 3 BMD.zSD values and 12 BMD.xfold values among 20 at least one  #> bound of the 95 percent confidence interval could not be computed due  #> to some bootstrapped BMD values not reachable due to model asymptotes  #> or reached outside the range of tested doses (bounds coded Inf)).  # !!!! TO GET CORRECT RESULTS # !!!! niter SHOULD BE FIXED FAR LARGER , e.g. to 1000  # !!!! but the run will be longer  ### (1.a) Examples on BMD.xfold (with some undefined BMD.xfold values)  # Plot of BMDs with no filtering subres <- bmdfilter(b$res, BMDfilter = \"none\") bmdplot(subres, BMDtype = \"xfold\", point.size = 3, add.CI = TRUE) #> Warning: Removed 10 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_errorbarh()`).   # Plot of items with defined BMD point estimate subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"definedBMD\") bmdplot(subres, BMDtype = \"xfold\", point.size = 3, add.CI = TRUE) #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_errorbarh()`).   # Plot of items with defined BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"definedCI\") bmdplot(subres, BMDtype = \"xfold\", point.size = 3, add.CI = TRUE)   # Plot of items with finite BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"xfold\", BMDfilter = \"finiteCI\")  bmdplot(subres, BMDtype = \"xfold\", point.size = 3, add.CI = TRUE)   # \\donttest{  ### (1.b) Examples on BMD.zSD (with no undefined BMD.zSD values)  # Plot of BMDs with no filtering subres <- bmdfilter(b$res, BMDfilter = \"none\") bmdplot(subres, BMDtype = \"zSD\", point.size = 3, add.CI = TRUE) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_errorbarh()`).   # Plot items with defined BMD point estimate (the same on this ex.) subres <- bmdfilter(b$res, BMDtype = \"zSD\", BMDfilter = \"definedBMD\") bmdplot(subres, BMDtype = \"zSD\", point.size = 3, add.CI = TRUE) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_errorbarh()`).   # Plot of items with defined BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"zSD\", BMDfilter = \"definedCI\") bmdplot(subres, BMDtype = \"zSD\", point.size = 3, add.CI = TRUE)   # Plot of items with finite BMD point estimate and CI bounds subres <- bmdfilter(b$res, BMDtype = \"zSD\", BMDfilter = \"finiteCI\")  bmdplot(subres, BMDtype = \"zSD\", point.size = 3, add.CI = TRUE)  # }"},{"path":"/reference/bmdplot.html","id":null,"dir":"Reference","previous_headings":"","what":"BMD plot optionally with confidence intervals on BMD — bmdplot","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"Provides ECDF plot BMD values optionally confidence intervals BMD value /labels items.","code":""},{"path":"/reference/bmdplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"","code":"bmdplot(extendedres, BMDtype = c(\"zSD\", \"xfold\"),                                   add.CI = FALSE,                                     facetby, facetby2,                                     shapeby,  colorby,                                    point.size = 1.5,                                    point.alpha = 0.8,                                    line.size = 0.5,                                     line.alpha = 0.8,                                    ncol4faceting,                                     add.label = FALSE, label.size = 2,                                     BMD_log_transfo = TRUE)"},{"path":"/reference/bmdplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"extendedres dataframe results provided plot.bmdcalc plot.bmdboot (res)  subset data frame (selected lines). dataframe can extended  additional columns coming example functional annotation items, lines  can replicated corresponding item one annotation.  dataframe  must least contain column giving BMD values (BMD.zSD BMD.xfold  depending chosen BMDtype), identification curve (id),  add.CI TRUE,  columns BMD.zSD.lower, BMD.zSD.upper  BMD.xfold.lower, BMD.xfold.upper depending argument BMDtype. BMDtype type BMD plot, \"zSD\" (default choice) \"xfold\". add.CI TRUE (default choice FALSE) item confidence interval added. facetby optional argument naming column extendedres chosen   split plot facets using ggplot2::facet_wrap (split omitted). facetby2 optional argument naming column extendedres chosen   additional argument split plot facets using   ggplot2::facet_grid, columns defined facetby   rows defined facetby2 (split omitted). shapeby optional argument naming column extendedres chosen   shape BMD points (difference shapeby omitted). colorby optional argument naming column extendedres chosen   color BMD points (difference colorby omitted). point.size Size BMD points. point.alpha Transparency points. line.size Width lines. line.alpha Transparency lines. ncol4faceting Number columns facetting (used facetby2   also provided. add.label Points replaced  labels items TRUE. label.size Size labels add.label TRUE. BMD_log_transfo TRUE, default option, log transformation BMD used plot.","code":""},{"path":"/reference/bmdplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"BMD values plotted ECDF plot, plot.bmdcalc using \"ecdf\" plottype confidence intervals BMD value /labels items requested. optional use columns code shape /facets item particularly intended give view dose-response per group (e.g. metabolic pathways). groups must coded column extendedres. case one item allocated one group annotation process, line item must replicated extendedres many times number annotation groups allocated.","code":""},{"path":"/reference/bmdplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/bmdplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/bmdplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BMD plot optionally with confidence intervals on BMD — bmdplot","text":"","code":"# (1) # Plot of BMD values with color dose-response gradient # faceted by metabolic pathway (from annotation of the selected items) # and shaped by dose-response trend  # An example from the paper published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727 # A example of plot obtained with this function is in Figure 5 in Larras et al. 2020  # the dataframe with metabolomic results (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # the dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe metabextendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(metabextendedres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport   ### (1.a) BMDplot by pathway shaped by trend bmdplot(metabextendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                         shapeby = \"trend\")    # \\donttest{  ### (1.b) BMDplot by pathway with items labels bmdplot(metabextendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                         add.label = TRUE,                        label.size = 2)    ### (1.c) BMDplot by pathway with confidence intervals bmdplot(metabextendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                         add.CI = TRUE)    ### (1.d) BMDplot by pathway with confidence intervals  #         in BMD raw scale (not default log scale) bmdplot(metabextendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                      add.CI = TRUE,                      BMD_log_transfo = FALSE)    ### (1.e) BMDplot by pathway with confidence intervals  #         colored by trend and playing with graphical parameters bmdplot(metabextendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                      add.CI = TRUE,                      colorby = \"trend\",                       point.size = 2,                      point.alpha = 0.5,                      line.size = 0.8,                      line.alpha = 0.5)     # (2)  # An example with two molecular levels # # Import the dataframe with transcriptomic results  contigresfilename <- system.file(\"extdata\", \"triclosanSVcontigres.txt\", package = \"DRomics\") contigres <- read.table(contigresfilename, header = TRUE, stringsAsFactors = TRUE) str(contigres) #> 'data.frame':\t447 obs. of  27 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ...  # Import the dataframe with functional annotation (or any other descriptor/category  # you want to use, here KEGG pathway classes)  contigannotfilename <- system.file(\"extdata\", \"triclosanSVcontigannot.txt\", package = \"DRomics\") contigannot <- read.table(contigannotfilename, header = TRUE, stringsAsFactors = TRUE) str(contigannot) #> 'data.frame':\t562 obs. of  2 variables: #>  $ contig    : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ path_class: Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  # Merging of both previous dataframes    contigextendedres <- merge(x = contigres, y = contigannot, by.x = \"id\", by.y = \"contig\") # to see the structure of this dataframe str(contigextendedres) #> 'data.frame':\t562 obs. of  28 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ... #>  $ path_class      : Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  ### Merge metabolomic and transcriptomic results extendedres <- rbind(metabextendedres, contigextendedres) extendedres$molecular.level <- factor(c(rep(\"metabolites\", nrow(metabextendedres)),                               rep(\"contigs\", nrow(contigextendedres)))) str(extendedres) #> 'data.frame':\t646 obs. of  29 variables: #>  $ id              : Factor w/ 478 levels \"NAP47_51\",\"NAP_2\",..: 1 2 3 4 4 4 4 5 6 7 ... #>  $ irow            : int  46 2 21 28 28 28 28 34 38 47 ... #>  $ adjpvalue       : num  7.16e-04 6.23e-05 1.11e-05 1.03e-05 1.03e-05 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 3 3 3 3 3 2 2 4 ... #>  $ nbpar           : int  2 3 2 2 2 2 2 3 3 5 ... #>  $ b               : num  -0.056 0.4598 -0.0595 -0.0451 -0.0451 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ e               : num  NA -1.65 NA NA NA ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.1245 0.126 0.0793 0.052 0.052 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 7 7 7 7 7 2 2 9 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 3 3 3 3 1 ... #>  $ y0              : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ yrange          : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ maxychange      : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  2.224 0.528 1.333 1.154 1.154 ... #>  $ BMR.zSD         : num  7.22 5.82 5.31 7.81 7.81 ... #>  $ BMD.xfold       : num  NA NA NA NA NA ... #>  $ BMR.xfold       : num  6.61 5.35 4.85 7.07 7.07 ... #>  $ BMD.zSD.lower   : num  0.979 0.2 0.853 0.752 0.752 ... #>  $ BMD.zSD.upper   : num  4.07 1.11 1.75 1.46 1.46 ... #>  $ BMD.xfold.lower : num  Inf Inf 7.61 Inf Inf ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  1000 957 1000 1000 1000 1000 1000 648 620 872 ... #>  $ path_class      : Factor w/ 18 levels \"Amino acid metabolism\",..: 5 5 3 3 2 6 8 5 5 5 ... #>  $ molecular.level : Factor w/ 2 levels \"contigs\",\"metabolites\": 2 2 2 2 2 2 2 2 2 2 ...  ### BMD plot per pathway with molecular level coding for color bmdplot(extendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                      colorby = \"molecular.level\",                      point.alpha = 0.3)    ### BMD plot per pathway and per molecular level  # for a selection of pathways chosen_path_class <- c(\"Membrane transport\", \"Lipid metabolism\") ischosen <- is.element(extendedres$path_class, chosen_path_class) bmdplot(extendedres[ischosen, ], BMDtype = \"zSD\",                      facetby = \"path_class\",                      facetby2 = \"molecular.level\",                      colorby = \"trend\",                      point.size = 2,                      add.CI = TRUE)     # }"},{"path":"/reference/bmdplotwithgradient.html","id":null,"dir":"Reference","previous_headings":"","what":"BMD plot with color gradient — bmdplotwithgradient","title":"BMD plot with color gradient — bmdplotwithgradient","text":"Provides ECDF plot BMD values horizontal color gradient coding, item, theoretical signal function dose (concentration). idea display amplitude intensity response item BMD ECDF plot, addition BMD ordered values. plot interest especially much items presented. maximize lisibility plot, one can manually pre-select items based criteria (e.g. functional group interest).","code":""},{"path":"/reference/bmdplotwithgradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BMD plot with color gradient — bmdplotwithgradient","text":"","code":"bmdplotwithgradient(extendedres, BMDtype = c(\"zSD\", \"xfold\"),                                    xmin, xmax, y0shift = TRUE, scaling = TRUE,                                    facetby, facetby2,                                     shapeby, npoints = 50,                                     line.size, point.size = 1,                                    ncol4faceting, limits4colgradient,                                    lowercol = \"darkblue\", uppercol = \"darkred\",                                    add.label, label.size = 2,                                    BMD_log_transfo = TRUE)"},{"path":"/reference/bmdplotwithgradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BMD plot with color gradient — bmdplotwithgradient","text":"extendedres dataframe results provided bmdcalc (res)  subset data frame (selected lines). dataframe can extended  additional columns coming example functional annotation items, lines  can replicated corresponding item one annotation.  extended dataframe  must least contain column giving BMD values (BMD.zSD BMD.xfold  depending chosen BMDtype), identification curve (id),  column model naming fitted model values parameters (columns b, c, d, e, f). BMDtype type BMD plot, \"zSD\" (default choice) \"xfold\". xmin Optional minimal dose/concentration definition x range. xmax Optional maximal dose/concentration definition x range (can defined  max(f$omicdata$dose) f output drcfit() example). y0shift TRUE (default choice) item signal shifted theoretical signal control 0. scaling TRUE, default choice, item signal shifted theoretical signal control 0 scaled dividing  maximal absolute signal change () signal control  maxychange. facetby optional argument naming column extendedres chosen   split plot facets using ggplot2::facet_wrap (split omitted). facetby2 optional argument naming column extendedres chosen   additional argument split plot facets using   ggplot2::facet_grid, columns defined facetby   rows defined facetby2 (split omitted). shapeby optional argument naming column extendedres chosen   shape BMD points (difference shapeby omitted). npoints Number points computed curve order define   signal color gradient (= number doses concentrations theoretical   signal computed fitted model item). line.size Size horizontal lines plotting signal color gradient. point.size Size BMD points. ncol4faceting Number columns facetting (used facetby2   also provided. limits4colgradient Optional vector giving minimal maximal value signal   color gradient. lowercol Chosen color lower values signal. uppercol Chosen color upper values signal. add.label Points replaced  labels items TRUE. label.size Size labels add.label TRUE. BMD_log_transfo TRUE, default option, log transformation BMD used plot.   option used null value xmin input.","code":""},{"path":"/reference/bmdplotwithgradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BMD plot with color gradient — bmdplotwithgradient","text":"BMD values plotted ECDF plot, plot.bmdcalc using \"ecdf\" plottype. addition plotted horizontal color gradient item coding signal level dose (concentration). optional use columns code shape /facets item particularly intended give view dose-response per group (e.g. metabolic pathways). groups must coded column extendedres. case one item allocated one group annotation process, line item must replicated extendedres many times number annotation groups allocated. item extended dataframe, name model (column model) values parameters (columns b, c, d, e, f) used compute theoretical dose-response curves, corresponding signal color gradient, range [xmin ; xmax].","code":""},{"path":"/reference/bmdplotwithgradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BMD plot with color gradient — bmdplotwithgradient","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/bmdplotwithgradient.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BMD plot with color gradient — bmdplotwithgradient","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/bmdplotwithgradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BMD plot with color gradient — bmdplotwithgradient","text":"","code":"# (1)  # A toy example on a very small subsample of a microarray data set datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\", package=\"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.01) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% r <- bmdcalc(f)  # Plot of all the BMD values with color dose-response gradient  # bmdplotwithgradient(r$res, BMDtype = \"zSD\")   #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.    # \\donttest{  # Same plot without signal scaling #  bmdplotwithgradient(r$res, BMDtype = \"zSD\", scaling = FALSE)  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.   # Plot of all the BMD values with color dose-response gradient  # with definition of xmax from the maximal tested dose # bmdplotwithgradient(r$res, BMDtype = \"zSD\",                     xmax = max(f$omicdata$dose))    # Add of item labels bmdplotwithgradient(r$res, BMDtype = \"zSD\",                     xmax = max(f$omicdata$dose), add.label = TRUE)    # The same plot in raw scale (we can fix xmin at 0 in this case)  # bmdplotwithgradient(r$res, BMDtype = \"zSD\", xmin = 0,                     BMD_log_transfo = FALSE)  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.   # The same plot in log scale with defining xmin and xmax at a chosen values  # bmdplotwithgradient(r$res, BMDtype = \"zSD\",                     xmin =  min(f$omicdata$dose[f$omicdata$dose != 0] / 2),                      xmax = max(f$omicdata$dose),                     BMD_log_transfo = TRUE)    # Plot of all the BMD values with color dose-response gradient  # faceted by response trend and shaped by model # bmdplotwithgradient(r$res, BMDtype = \"zSD\",                       facetby = \"trend\", shapeby = \"model\")  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.                         # same plot changing the names of the facets  levels(r$res$trend) #> [1] \"U\"    \"bell\" \"dec\"  \"inc\"  levels(r$res$trend) <- c(\"bell shape\", \"decreasing\", \"increasing\", \"U shape\")  bmdplotwithgradient(r$res, BMDtype = \"zSD\",                       facetby = \"trend\", shapeby = \"model\") #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.   # same plot changing the labels of the legends  # and inversing the two guides if (require(ggplot2)) bmdplotwithgradient(r$res, BMDtype = \"zSD\",                       facetby = \"trend\", shapeby = \"model\") +                        labs(col = \"signal value\", shape = \"model\") +                       guides(colour = guide_colourbar(order = 1),                       shape = guide_legend(order = 2)) #> Loading required package: ggplot2 #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.                         # (2) # Plot of BMD values with color dose-response gradient # faceted by metabolic pathway (from annotation of the selected items) # and shaped by dose-response trend  # An example from the paper published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727 # A example of plot obtained with this function is in Figure 5 in Larras et al. 2020   # the dataframe with metabolomic results (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # the dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe extendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(extendedres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport   ### (2.a) BMDplot with gradient by pathway bmdplotwithgradient(extendedres, BMDtype = \"zSD\",                      facetby = \"path_class\",                       xmax = 7.76, # maximal tested dose in those data                        shapeby = \"trend\")    ### (2.a) BMDplot with gradient by pathway without scaling bmdplotwithgradient(extendedres, BMDtype = \"zSD\",                      facetby = \"path_class\", xmax = 7.76,                        shapeby = \"trend\", scaling = FALSE)     # (2.b) BMDplot with gradient by pathway # forcing the limits of the colour gradient at other  # values than observed minimal and maximal values of the signal bmdplotwithgradient(extendedres, BMDtype = \"zSD\",                       facetby = \"path_class\",                         shapeby = \"trend\",                        limits4colgradient = c(-1, 1))  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.   # (2.c) The same example changing the gradient colors and the line size bmdplotwithgradient(extendedres, BMDtype = \"zSD\",                       facetby = \"path_class\",                         shapeby = \"trend\",                        line.size = 3,                         lowercol = \"darkgreen\", uppercol = \"orange\")  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.   # (2.d) The same example with only lipid metabolism pathclass # and identification of the metabolites LMres <- extendedres[extendedres$path_class == \"Lipid metabolism\", ] bmdplotwithgradient(LMres, BMDtype = \"zSD\",                        line.size = 3,                         add.label = TRUE, label.size = 3)  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.    # (3)  # An example on a microarray data set (a subsample of a greater data set) # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.001: 78 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  15%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 11 dose-response curves out of 78 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 67 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0               11               30               23  #> log-Gauss-probit  #>                3  #> Distribution of the trends (curve shapes) among the 67 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    6   20   22   19  (r <- bmdcalc(f)) #> 1 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 28 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses).  bmdplotwithgradient(r$res, BMDtype = \"zSD\",                       facetby = \"trend\",                        shapeby = \"model\")  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.  # without scaling bmdplotwithgradient(r$res, BMDtype = \"zSD\",                       scaling = FALSE, facetby = \"trend\",                        shapeby = \"model\")  #> Warning:  #> By default xmax was fixed at the maximal BMD value, but you could also #> fix it at the maximal tested dose.  # }"},{"path":"/reference/continuousanchoringdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and check of continuous anchoring apical data — continuousanchoringdata","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"Continuous anchoring apical data imported .txt file (internally imported using function read.table) checked R object class data.frame (see description argument file required format data). transformation provided function. needed pretreatment data must done importation data, can directly modelled using normal error model. strong hypothesis required selection responsive endpoints dose-reponse modelling.","code":""},{"path":"/reference/continuousanchoringdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"","code":"continuousanchoringdata(file, backgrounddose, check = TRUE)  # S3 method for class 'continuousanchoringdata' print(x, ...) # S3 method for class 'continuousanchoringdata' plot(x, dose_log_transfo = TRUE, ...)"},{"path":"/reference/continuousanchoringdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"file name .txt file (e.g. \"mydata.txt\") containing one row per endpoint, first column corresponding identifier endpoint, columns giving measured values endpoint replicate dose concentration. first line, name endpoint column, must tested doses concentrations numeric format corresponding replicate (example, triplicates treatment, first line \"endpoint\", 0, 0, 0, 0.1, 0.1, 0.1, etc.). file imported within function using function read.table default field separator (sep argument) default decimal separator (dec argument \".\"). Alternatively R object class data.frame can directly given input, corresponding output read.table(file, header = FALSE) file described . two alternatives illustrated examples. backgrounddose argument must used dose zero data, prevent calculation BMD extrapolation. doses equal value given backgrounddose fixed 0, considered background level exposition. check TRUE format input file checked. x object class \"continuousanchoringdata\". dose_log_transfo TRUE log transformation dose used plot. ... arguments passed print plot functions.","code":""},{"path":"/reference/continuousanchoringdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"function imports data, checks format (see description argument file required format data) gives print information help user check coding data correct : tested doses (concentrations) number replicates dose, number endpoints.","code":""},{"path":"/reference/continuousanchoringdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"continuousanchoringdata returns object class \"continuousanchoringdata\", list 7 components: data numeric matrix responses item replicate   (one line per item, one column per replicate) dose numeric vector tested doses concentrations corresponding     column data item character vector identifiers endpoints, corresponding     line data design table experimental design (tested doses number     replicates dose) control user data.mean numeric matrix mean responses item per dose (mean     corresponding replicates) (one line per item, one column per unique value     dose data.sd numeric matrix standard deviations response     item per dose (sd corresponding replicates, NA replicate)     (one line per item, one column per unique value dose) containsNA TRUE data set contains NA values print continuousanchoringdata object gives tested doses (concentrations)   number replicates dose, number items, identifiers   first 20 items (check good coding data) normalization method.    plot continuousanchoringdata object shows data distribution dose concentration replicate.","code":""},{"path":[]},{"path":"/reference/continuousanchoringdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/continuousanchoringdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and check of continuous anchoring apical data — continuousanchoringdata","text":"","code":"# (1) import and check of continuous anchoring data  # (an example with two apical endpoints of an example given in the package (see ?Scenedesmus)) # datafilename <- system.file(\"extdata\", \"apical_anchoring.txt\", package = \"DRomics\")  o <- continuousanchoringdata(datafilename, backgrounddose = 0.1, check = TRUE) #> Warning:  #> We recommend you to check that your anchoring data are continuous and #> defined in a scale that enable the use of a normal error model (needed #> at each step of the workflow including the selection step). # It is here necessary to define the background dose as there is no dose at 0 in the data # The BMD cannot be computed without defining the background level  print(o) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0  2.4  3.8  6.2 10.1 16.5 26.8 43.5 70.7  #>   12    6    2    2    2    6    2    2    2  #> Number of endpoints: 2  #> Names of the endpoints: #> [1] \"growth\"         \"photosynthesis\" # \\donttest{ plot(o) #> Warning: log-10 transformation introduced infinite values.  # } # If you want to use your own data set just replace datafilename,  # the first argument of continuousanchoringdata(),  # by the name of your data file (e.g. \"mydata.txt\") #  # You should take care that the field separator of this data file is one # of the default field separators recognised by the read.table() function # when it is used with its default field separator (sep argument) # Tabs are recommended.  # Use of an R object of class data.frame # on the same example (see ?Scenedesmus for details) data(Scenedesmus_apical) o <- continuousanchoringdata(Scenedesmus_apical, backgrounddose = 0.1) #> Warning:  #> We recommend you to check that your anchoring data are continuous and #> defined in a scale that enable the use of a normal error model (needed #> at each step of the workflow including the selection step). print(o) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0  2.4  3.8  6.2 10.1 16.5 26.8 43.5 70.7  #>   12    6    2    2    2    6    2    2    2  #> Number of endpoints: 2  #> Names of the endpoints: #> [1] \"growth\"         \"photosynthesis\" # \\donttest{ plot(o) #> Warning: log-10 transformation introduced infinite values.  # }"},{"path":"/reference/curvesplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of fitted curves — curvesplot","title":"Plot of fitted curves — curvesplot","text":"Provides plot fitted curves dataframe main workflow results, possibly extended additional information (e.g. groups functional annotation) used color /split curves.","code":""},{"path":"/reference/curvesplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of fitted curves — curvesplot","text":"","code":"curvesplot(extendedres, xmin, xmax, y0shift = TRUE, scaling = TRUE,                        facetby, facetby2, free.y.scales = FALSE, ncol4faceting,                        colorby, removelegend = FALSE,                           npoints = 500, line.size = 0.5,                          line.alpha = 0.8, dose_log_transfo = TRUE,                        addBMD = TRUE, BMDtype = c(\"zSD\", \"xfold\"),                         point.size = 1, point.alpha = 0.8)"},{"path":"/reference/curvesplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of fitted curves — curvesplot","text":"extendedres dataframe results provided bmdcalc (res)  subset data frame (selected lines). dataframe can extended  additional columns coming example annotation items, lines  can replicated corresponding item one annotation.  extended dataframe  must least contain column giving identification curve (id),  column model naming fitted model values parameters (columns b, c, d, e, f) column coding chosen BMD, default BMD.zSD BMD.xfold BMDtype \"xfold\". xmin defined, value just maximum BMD values fixed x  dose scale log, 0 otherwise. xmax Maximal dose/concentration definition x range (can defined  max(f$omicdata$dose) f output drcfit()). defined, value just maximum BMD values taken. y0shift TRUE (default choice) curves shifted theoretical  signal control 0. scaling TRUE, default choice, curves shifted theoretical  signal control 0 y0 scaled dividing  maximal absolute signal change () signal control  maxychange. facetby optional argument naming column extendedres chosen   split plot facets (split omitted). facetby2 optional argument naming column extendedres chosen   additional argument split plot facets using   ggplot2::facet_grid, columns defined facetby   rows defined facetby2 (split omitted). free.y.scales TRUE y scales free different facets. ncol4faceting Number columns facetting (used facetby2   also provided. colorby optional argument naming column extendedres chosen   color curves (color omitted). removelegend TRUE color legend removed (useful number   colors great). npoints Number points computed curve plot . line.size Width lines plotting curves. line.alpha Transparency lines plotting curves. dose_log_transfo TRUE log transformation dose used plot.   option needs definition strictly positive value xmin input. addBMD TRUE points added curve BMD-BMR values (requires BMD BMD values first argument extendedres). BMDtype type BMD add, \"zSD\" (default choice) \"xfold\". point.size Size BMD-BMR points added curves. point.alpha Transparency BMD-BMR points added curves.","code":""},{"path":"/reference/curvesplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of fitted curves — curvesplot","text":"item extended dataframe, name model (column model) values parameters (columns b, c, d, e, f) used compute theoretical dose-response curves range [xmin ; xmax].","code":""},{"path":"/reference/curvesplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of fitted curves — curvesplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/curvesplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of fitted curves — curvesplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/curvesplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of fitted curves — curvesplot","text":"","code":"# (1) A toy example on a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",    package = \"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.01) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% r <- bmdcalc(f)  # (1.a)  # Default plot of all the curves with BMD values added as points on the curve # curvesplot(r$res, xmax = max(f$omicdata$dose))   # \\donttest{ # use of line size, point size, transparency curvesplot(r$res, xmax = max(f$omicdata$dose),    line.alpha = 0.2, line.size = 1, point.alpha = 0.3, point.size = 1.8)   # the same plot with dose not in log scale # fixing xmin and xmax curvesplot(r$res, xmin = 0.1, xmax = max(f$omicdata$dose),   dose_log_transfo = FALSE, addBMD = TRUE)  # or not curvesplot(r$res, dose_log_transfo = FALSE, addBMD = TRUE)   # plot of curves colored by models curvesplot(r$res, xmax = max(f$omicdata$dose), colorby = \"model\")   # plot of curves facetted by item curvesplot(r$res, xmax = max(f$omicdata$dose), facetby = \"id\")   # plot of curves facetted by trends curvesplot(r$res, xmax = max(f$omicdata$dose), facetby = \"trend\")   # the same plot with free y scales curvesplot(r$res, xmax = max(f$omicdata$dose), facetby = \"trend\",   free.y.scales =  TRUE)     # (1.b)  # Plot of all the curves without shifting y0 values to 0 # and without scaling curvesplot(r$res, xmax = max(f$omicdata$dose),     scaling = FALSE, y0shift = FALSE)   # (1.c)  # Plot of all the curves colored by model, with one facet per trend # curvesplot(r$res, xmax = max(f$omicdata$dose),    facetby = \"trend\", colorby = \"model\")   # changing the number of columns curvesplot(r$res, xmax = max(f$omicdata$dose),    facetby = \"trend\", colorby = \"model\", ncol4faceting = 4)   # playing with size and transparency of lines curvesplot(r$res, xmax = max(f$omicdata$dose),    facetby = \"trend\", colorby = \"model\",    line.size = 0.5, line.alpha = 0.8)  curvesplot(r$res, xmax = max(f$omicdata$dose),     facetby = \"trend\", colorby = \"model\",    line.size = 0.8, line.alpha = 0.2)  curvesplot(r$res, xmax = max(f$omicdata$dose),     facetby = \"trend\", line.size = 1, line.alpha = 0.2)     # (2) an example on a microarray data set (a subsample of a greater data set) # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.001: 78 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  15%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 11 dose-response curves out of 78 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 67 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0               11               30               23  #> log-Gauss-probit  #>                3  #> Distribution of the trends (curve shapes) among the 67 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    6   20   22   19  (r <- bmdcalc(f)) #> 1 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 28 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses).  # plot split by trend and model with BMR-BMD points added on curves # adding transparency curvesplot(r$res, xmax = max(f$omicdata$dose),    line.alpha = 0.2, line.size = 0.8,   addBMD = TRUE, point.alpha = 0.2, point.size = 1.5,   facetby = \"trend\", facetby2 = \"model\")   # same plot without scaling and not in log dose scale curvesplot(r$res, xmax = max(f$omicdata$dose),    line.alpha = 0.2, line.size = 0.8, dose_log_transfo = FALSE,   addBMD = TRUE, point.alpha = 0.2, point.size = 1.5,   scaling = FALSE, facetby = \"trend\", facetby2 = \"model\")   # (3) An example from data published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # a dataframe with metabolomic results (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # a dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe # bootstrap results and annotation extendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(extendedres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport  # Plot of the dose-response curves by pathway colored by trend # with BMR-BMD points added on curves curvesplot(extendedres, facetby = \"path_class\", npoints = 100, line.size = 0.5,   colorby = \"trend\", xmax = 7, addBMD = TRUE)    # The same plot not in log scale curvesplot(extendedres, facetby = \"path_class\", npoints = 100, line.size = 0.5,   dose_log_transfo = FALSE, colorby = \"trend\", xmin = 0, xmax = 7)    # The same plot in log scale without scaling curvesplot(extendedres, facetby = \"path_class\", npoints = 100, line.size = 0.5,   colorby = \"trend\", scaling = FALSE, xmax = 7)    # Plot of the dose-response curves split by pathway and by trend # for a selection pathway chosen_path_class <- c(\"Membrane transport\", \"Lipid metabolism\") ischosen <- is.element(extendedres$path_class, chosen_path_class) curvesplot(extendedres[ischosen, ],   facetby = \"trend\", facetby2 = \"path_class\",   npoints = 100, line.size = 0.5, xmax = 7)    # Plot of the dose-response curves for a specific pathway # in this example the \"lipid metabolism\" pathclass LMres <- extendedres[extendedres$path_class == \"Lipid metabolism\", ] curvesplot(LMres, facetby = \"id\", npoints = 100, line.size = 0.8, point.size = 2,   colorby = \"trend\", xmax = 7)   # }"},{"path":"/reference/drcfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose response modelling for responsive items — drcfit","title":"Dose response modelling for responsive items — drcfit","text":"Fits dose reponse models responsive items.","code":""},{"path":"/reference/drcfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose response modelling for responsive items — drcfit","text":"","code":"drcfit(itemselect,    information.criterion = c(\"AICc\", \"BIC\", \"AIC\"),   deltaAICminfromnullmodel = 2,   postfitfilter = TRUE, preventsfitsoutofrange = TRUE,    enablesfequal0inGP = TRUE, enablesfequal0inLGP = TRUE,   progressbar = TRUE, parallel = c(\"no\", \"snow\", \"multicore\"), ncpus)  # S3 method for class 'drcfit' print(x, ...)  # S3 method for class 'drcfit' plot(x, items,    plot.type = c(\"dose_fitted\", \"dose_residuals\",\"fitted_residuals\"),    dose_log_transfo = TRUE, BMDoutput, BMDtype = c(\"zSD\", \"xfold\"), ...)     plotfit2pdf(x, items,    plot.type = c(\"dose_fitted\", \"dose_residuals\", \"fitted_residuals\"),    dose_log_transfo = TRUE, BMDoutput, BMDtype = c(\"zSD\", \"xfold\"),   nrowperpage = 6, ncolperpage = 4, path2figs = getwd())"},{"path":"/reference/drcfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dose response modelling for responsive items — drcfit","text":"itemselect object class \"itemselect\" returned function itemselect. information.criterion information criterion used select best fit model, \"AICc\" recommended default   choice (corrected version AIC recommended   small samples (see Burnham Anderson 2004), \"BIC\" \"AIC\". deltaAICminfromnullmodel minimal difference chosen information criterion (AICc, AIC BIC) null model best fit model, requested accept fit bestfit model. default fixed 2 keep models fit data clearly better null model, can fixed 0 less stringent. postfitfilter TRUE fits significant trends residuals   (showing global significant quadratic trend residuals   function dose (rank-scale)) considered failures eliminated.   strongly recommended let TRUE, default value. preventsfitsoutofrange TRUE fits Gaussian log-Gaussian models   give extremum value outside range observed signal item   eliminated candidate models item,   choice best.   strongly recommended let TRUE, default value. enablesfequal0inGP TRUE fit Gauss-probit model 5 parameters   successful, simplified version f = 0 also fitted included candidate   models. submodel log-Gauss-probit model corresponds probit model.   recommend let argument TRUE, default value, order prevent   overfitting, prefer description monotonic curve   parameter f necessary model data according information criterion. enablesfequal0inLGP TRUE fit log-Gauss-probit model 5 parameters   successful, simplified version f = 0 also fitted included candidate   models. submodel log-Gauss-probit model corresponds log-probit model.   recommend let argument TRUE, default value, order prevent   overfitting prefer description monotonic curve   parameter f necessary model data according information criterion. progressbar TRUE progress bar used follow fitting process. parallel type parallel operation used, \"snow\" \"multicore\"   (second one available Windows),   \"\" parallel operation. ncpus Number processes used parallel operation :   typically one fix number available CPUs. x object class \"drcfit\". items Argument plot.drcfit function : number first fits   plot (20 items max) character vector   specifying identifiers items plot (20 items max). plot.type type plot, default \"dose_fitted\" plot   fitted curves observed points added plot observed means dose   added black plain circles, \"dose_residuals\" plot residuals function   dose, \"fitted_residuals\" plot residuals function   fitted value. dose_log_transfo default TRUE use log transformation   dose axis (used dose x-axis,   plot.type \"fitted_residuals\"). BMDoutput Argument can used add BMD values   optionally confidence intervals plot type \"dose_fitted\".   must previously apply bmdcalc optionally   bmdboot   x class drcfit   give argument output bmdcalc   bmdboot. BMDtype type BMD add plot, \"zSD\" (default choice)   \"xfold\" (used BMDoutput missing). nrowperpage Number rows plots plots saved pdf file using   plotfit2pdf() (passed facet_wrap()). ncolperpage Number columns plots plots saved pdf file using   plotfit2pdf() (passed facet_wrap()). path2figs File path plots saved pdf file using plotfit2pdf() ... arguments passed graphical print functions.","code":""},{"path":"/reference/drcfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dose response modelling for responsive items — drcfit","text":"selected item, five dose-response models (linear, Hill, exponential, Gauss-probit log-Gauss-probit, see Larras et al. 2018 definition) fitted non linear regression, using nls function. fit biphasic model gives extremum value range observed signal, eliminated (may happen rare cases, especially observational data  number samples high dose uncontrolled, doses distributed along dose range). best fit chosen one giving lowest AICc (BIC AIC) value. use AICc (second-order Akaike criterion) instead AIC strongly recommended prevent overfitting may occur dose-response designs small number data points (Hurvich Tsai, 1989; Burnham Anderson DR, 2004). Note extremely rare cases number data points great, AIC converge AICc procedures equivalent. Items best AICc value lower AICc value null model (constant model) minus 2 eliminated. Items best fit showing global significant quadratic trend residuals function dose (rank-scale) also eliminated (best fit considered reliable cases). retained item classified four classes global trend, can used roughly describe shape dose-response curve: inc increasing curves, dec decreasing curves , U U-shape curves, bell bell-shape curves. curves fitted Gauss-probit model can classified increasing decreasing dose value extremum reached zero simplified version f = 0 retained (corresponding probit model). curves fitted log-Gauss-probit model can classified increasing decreasing simplified version f = 0 retained (corresponding log-probit model). retained item thus classified 16 class typology depending chosen model parameter values : H.inc increasing Hill curves, H.dec decreasing Hill curves, L.inc increasing linear curves, L.dec decreasing linear curves, E.inc.convex increasing convex exponential curves, E.dec.concave decreasing concave exponential curves, E.inc.concave increasing concave exponential curves, E.dec.convex decreasing convex exponential curves, GP.U U-shape Gauss-probit curves, GP.bell bell-shape Gauss-probit curves, GP.inc increasing Gauss-probit curves, GP.dec decreasing Gauss-probit curves, lGP.U U-shape log-Gauss-probit curves, lGP.bell bell-shape log-Gauss-probit curves. lGP.inc increasing log-Gauss-probit curves, lGP.dec decreasing log-Gauss-probit curves,","code":""},{"path":"/reference/drcfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dose response modelling for responsive items — drcfit","text":"drcfit returns object class \"drcfit\", list 4 components:  fitres data frame reporting results fit selected item    successful fit reached (one line per item) sorted ascending order adjusted p-values returned function itemselect. different columns correspond identifier item (id), row number item initial data set (irow), adjusted p-value selection step (adjpvalue), name best fit model (model), number fitted parameters (nbpar), values parameters b, c, d, e f, (NA non used parameters), residual standard deviation (SDres), typology curve (typology),    rough trend curve (trend) defined four classes (U, bell, increasing decreasing shape),    theoretical y value control y0),    theoretical y value maximal dose yatdosemax), theoretical y range x within range    tested doses (yrange), maximal absolute y change () control(maxychange)    biphasic curves    x value extremum reached (xextrem)    corresponding y value (yextrem). omicdata object containing data, given input itemselect() also component output itemselect(). information.criterion information criterion used select best fit model given input. information.criterion.val data frame reporting IC values (AICc, BIC AIC) values selected item (one line per item) fitted model (one colum per model IC value fixed Inf fit failed). n.failure number previously selected items workflow failed fit acceptable model. unfitres data frame reporting results selected item successful fit reached (one line per item) sorted ascending order adjusted p-values returned function itemselect. different columns correspond identifier item (id), row number item initial data set (irow), adjusted p-value selection step (adjpvalue), code reason fitting failure (cause, equal \"constant.model\" best fit model constant model \"trend..residuals\" best fit model rejected due quadratic trend residuals.) residualtests data frame P-values tests performed residuals, mean trend (resimeantrendP ) variance trend (resivartrendP). first one tests global significant quadratic trend residuals function dose rank-scale (used eliminate unreliable fits) second one global significant quadratic trend residuals absolute value function dose rank-scale (used alert case heteroscedasticity).","code":""},{"path":[]},{"path":"/reference/drcfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dose response modelling for responsive items — drcfit","text":"Burnham, KP, Anderson DR (2004). Multimodel inference: understanding AIC BIC model selection. Sociological methods & research, 33(2), 261-304. Hurvich, CM, Tsai, CL (1989). Regression time series model selection small samples. Biometrika, 76(2), 297-307. Larras F, Billoir E, Baillard V, Siberchicot , Scholz S, Wubet T, Tarkka M, Schmitt-Jansen M Delignette-Muller ML (2018). DRomics: turnkey tool support use dose-response framework omics data ecological risk assessment. Environmental science & technology.doi:10.1021/acs.est.8b04752","code":""},{"path":"/reference/drcfit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dose response modelling for responsive items — drcfit","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/drcfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dose response modelling for responsive items — drcfit","text":"","code":"# (1) a toy example (a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\", package = \"DRomics\")  # to test the package on a small (for a quick calculation) but not very small data set # use the following commented line # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package = \"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.05) #> Removing intercept from test coefficients (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |===                                                                   |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  14%   |                                                                               |=============                                                         |  19%   |                                                                               |=================                                                     |  24%   |                                                                               |====================                                                  |  29%   |                                                                               |=======================                                               |  33%   |                                                                               |===========================                                           |  38%   |                                                                               |==============================                                        |  43%   |                                                                               |=================================                                     |  48%   |                                                                               |=====================================                                 |  52%   |                                                                               |========================================                              |  57%   |                                                                               |===========================================                           |  62%   |                                                                               |===============================================                       |  67%   |                                                                               |==================================================                    |  71%   |                                                                               |=====================================================                 |  76%   |                                                                               |=========================================================             |  81%   |                                                                               |============================================================          |  86%   |                                                                               |===============================================================       |  90%   |                                                                               |===================================================================   |  95%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 1 dose-response curves out of 21 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 20 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0                6                6                7  #> log-Gauss-probit  #>                1  #> Distribution of the trends (curve shapes) among the 20 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    4    4    6    6   # Default plot plot(f) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  # \\donttest{ # The same plot without log transformation of the doses  # (in raw scale of doses) plot(f, dose_log_transfo = FALSE)   # The same plot in x log scale choosing x limits for plot if (require(ggplot2))   plot(f, dose_log_transfo = TRUE) +      scale_x_log10(limits = c(0.1, 10)) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.  #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # Plot of residuals as function of the dose plot(f, plot.type = \"dose_residuals\") #> Warning: log-10 transformation introduced infinite values.   # Same plot of residuals without log transformation of the doses plot(f, plot.type = \"dose_residuals\", dose_log_transfo = FALSE)   # plot of residuals as function of the fitted value plot(f, plot.type = \"fitted_residuals\")    # (2) an example on a microarray data set (a subsample of a greater data set)  # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package = \"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.05)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.05: 318 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 60 dose-response curves out of 318 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 258 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                2               85               64               89  #> log-Gauss-probit  #>               18  #> Distribution of the trends (curve shapes) among the 258 fitted dose-response curves: #>  #>    U bell  dec  inc  #>   55   52   58   93   # Default plot plot(f) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # save all plots to pdf using plotfit2pdf() plotfit2pdf(f, path2figs = tempdir()) #>  #> Figures are stored in /tmp/RtmpIYDpWj. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> pdf  #>   2  plotfit2pdf(f, plot.type = \"fitted_residuals\",    nrowperpage = 9, ncolperpage = 6, path2figs = tempdir()) #>  #> Figures are stored in /tmp/RtmpIYDpWj. #> pdf  #>   2   # Plot of the fit of the first 12 most responsive items plot(f, items = 12) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # Plot of the chosen items in the chosen order plot(f, items = c(\"301.2\", \"363.1\", \"383.1\")) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # Look at the table of results for successful fits head(f$fitres) #>      id irow    adjpvalue        model nbpar           b         c         d #> 1 384.2  727 2.519524e-07 Gauss-probit     4  8.39021007  6.160174  6.160174 #> 2 383.1  724 6.558388e-07 Gauss-probit     4  3.81611448 10.480252 10.480252 #> 3 383.2  725 8.234946e-07 Gauss-probit     4  6.27817663  8.505693  8.505693 #> 4 384.1  726 2.804671e-06 Gauss-probit     4  8.59581518  5.684089  5.684089 #> 5 301.1  569 6.932747e-06  exponential     3  2.02444957        NA 12.846110 #> 6 363.1  686 7.084800e-06  exponential     3 -0.06029708        NA  9.026630 #>           e        f     SDres      typology trend       y0 yatdosemax #> 1  1.538640 6.077561 0.1126233       GP.bell  bell 12.13639  11.215361 #> 2  1.833579 1.861385 0.1411563       GP.bell  bell 12.13871  11.324854 #> 3  1.751051 3.683404 0.1335847       GP.bell  bell 12.04858  11.228734 #> 4  1.874867 6.568752 0.1379656       GP.bell  bell 12.09844  11.320509 #> 5 -1.404111       NA 0.4905313  E.dec.convex   dec 12.84611  10.839662 #> 6  2.064800       NA 0.2526946 E.dec.concave   dec  9.02663   7.590655 #>      yrange maxychange  xextrem  yextrem #> 1 1.0223735  0.9210335 1.538640 12.23774 #> 2 1.0167830  0.8138568 1.833579 12.34164 #> 3 0.9603629  0.8198451 1.751051 12.18910 #> 4 0.9323327  0.7779265 1.874867 12.25284 #> 5 2.0064474  2.0064474       NA       NA #> 6 1.4359752  1.4359752       NA       NA  # Look at the table of results for unsuccessful fits head(f$unfitres) #>       id irow    adjpvalue              cause #> 25 368.1  696 5.865601e-05 trend.in.residuals #> 38 367.1  694 2.748644e-04 trend.in.residuals #> 51 360.2  681 3.964071e-04 trend.in.residuals #> 57 162.2  305 4.818750e-04 trend.in.residuals #> 59 161.1  302 5.387711e-04 trend.in.residuals #> 60 275.1  519 5.387711e-04 trend.in.residuals  # count the number of unsuccessful fits for each cause table(f$unfitres$cause) #>  #>     constant.model trend.in.residuals  #>                 30                 30    # (3) Comparison of parallel and non paralell implementations on a larger selection of items # if(!requireNamespace(\"parallel\", quietly = TRUE)) {   if(parallel::detectCores() > 1) {     s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.05)     system.time(f1 <- drcfit(s_quad, progressbar = TRUE))     system.time(f2 <- drcfit(s_quad, progressbar = FALSE, parallel = \"snow\", ncpus = 2)) }}  # }"},{"path":"/reference/ecdfplotwithCI.html","id":null,"dir":"Reference","previous_headings":"","what":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"Provides ECDF plot variable, x-error bars given confidence intervals variable, possibly partitioned groups. context package function intended used BMD variable groups defined user functional annotation.","code":""},{"path":"/reference/ecdfplotwithCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"","code":"ecdfplotwithCI(variable, CI.lower, CI.upper, by, CI.col = \"blue\",  CI.alpha = 1, add.point = TRUE, point.size = 1, point.type = 16)"},{"path":"/reference/ecdfplotwithCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"variable numeric vector variable plot. context package variable may BMD. CI.lower corresponding numeric vector (length) lower bounds confidence intervals. CI.upper corresponding numeric vector (length) upper bounds confidence intervals. factor length split plot factor (split omitted). context package factor may code groups defined user functional annotation. CI.col color draw confidence intervals (unique color) factor coding color. CI.alpha Optional transparency lines used draw confidence intervals. add.point TRUE points added confidence intervals. point.size Size added points case add.point TRUE. point.type Shape added points case add.point TRUE   defined integer coding unique common shape   factor coding shape.","code":""},{"path":"/reference/ecdfplotwithCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/ecdfplotwithCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/ecdfplotwithCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ECDF plot of a variable with given confidence intervals on this variable — ecdfplotwithCI","text":"","code":"# (1) a toy example (a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\", package=\"DRomics\") o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% r <- bmdcalc(f) set.seed(1) # to get reproducible results with a so small number of iterations b <- bmdboot(r, niter = 5) # with a non reasonable value for niter  #> Warning:  #> A small number of iterations (less than 1000) may not be sufficient to #> ensure a good quality of bootstrap confidence intervals. #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% # !!!! TO GET CORRECT RESULTS # !!!! niter SHOULD BE FIXED FAR LARGER , e.g. to 1000  # !!!! but the run will be longer   # manual ecdf plot of the bootstrap results as an ecdf distribution  # on BMD, plot that could also be obtained with plot(b)  # in this simple case # a <- b$res[is.finite(b$res$BMD.zSD.upper), ] ecdfplotwithCI(variable = a$BMD.zSD, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, CI.col = \"red\")   # \\donttest{  # (2) An example from data published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # This function can also be used to go deeper in the exploration of the biological  # meaning of the responses. Here is an example linking the DRomics outputs  # with the functional annotation of the responding metabolites of the microalgae  # Scenedesmus vacuolatus to the biocide triclosan.  # This extra step uses a dataframe previously built by the user which links the items # to the biological information of interest (e.g. KEGG pathways).  # importation of a dataframe with metabolomic results  # (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # importation of a dataframe with annotation of each item # identified in the previous file (this dataframe must be previously built by the user) # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe # bootstrap results and annotation annotres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(annotres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport  ### an ECDFplot with confidence intervals by pathway # with color coding for dose-response trend ecdfplotwithCI(variable = annotres$BMD.zSD,                 CI.lower = annotres$BMD.zSD.lower,                 CI.upper = annotres$BMD.zSD.upper,                 by = annotres$path_class,                CI.col = annotres$trend)     # (3) an example on a microarray data set (a subsample of a greater data set)  # datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess  (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.001)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.001: 78 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" (f <- drcfit(s_quad, progressbar = TRUE)) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |===========                                                           |  15%   |                                                                               |============                                                          |  17%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  29%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  38%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  41%   |                                                                               |==============================                                        |  42%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  65%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |=======================================================               |  78%   |                                                                               |========================================================              |  79%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  92%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Results of the fitting using the AICc to select the best fit model #> 11 dose-response curves out of 78 previously selected were removed  #> because no model could be fitted reliably. #> Distribution of the chosen models among the 67 fitted dose-response curves: #>  #>             Hill           linear      exponential     Gauss-probit  #>                0               11               30               23  #> log-Gauss-probit  #>                3  #> Distribution of the trends (curve shapes) among the 67 fitted dose-response curves: #>  #>    U bell  dec  inc  #>    6   20   22   19  (r <- bmdcalc(f)) #> 1 BMD-xfold values and 0 BMD-zSD values are not defined (coded NaN as  #> the BMR stands outside the range of response values defined by the model). #> 28 BMD-xfold values and 0 BMD-zSD values could not be calculated (coded  #> NA as the BMR stands within the range of response values defined by the  #> model but outside the range of tested doses). (b <- bmdboot(r, niter = 100)) # niter to put at 1000 for a better precision #> Warning:  #> A small number of iterations (less than 1000) may not be sufficient to #> ensure a good quality of bootstrap confidence intervals. #> The bootstrap may be long if the number of items and the number of  #> bootstrap iterations is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |=                                                                     |   1%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |=============                                                         |  18%   |                                                                               |==============                                                        |  19%   |                                                                               |===============                                                       |  21%   |                                                                               |================                                                      |  22%   |                                                                               |=================                                                     |  24%   |                                                                               |==================                                                    |  25%   |                                                                               |===================                                                   |  27%   |                                                                               |====================                                                  |  28%   |                                                                               |=====================                                                 |  30%   |                                                                               |======================                                                |  31%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  40%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |====================================                                  |  51%   |                                                                               |=====================================                                 |  52%   |                                                                               |======================================                                |  54%   |                                                                               |=======================================                               |  55%   |                                                                               |========================================                              |  57%   |                                                                               |=========================================                             |  58%   |                                                                               |===========================================                           |  61%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  78%   |                                                                               |=========================================================             |  82%   |                                                                               |===========================================================           |  84%   |                                                                               |============================================================          |  85%   |                                                                               |=============================================================         |  87%   |                                                                               |==============================================================        |  88%   |                                                                               |===============================================================       |  90%   |                                                                               |================================================================      |  91%   |                                                                               |=================================================================     |  93%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================| 100% #> Bootstrap confidence interval computation failed on 4 items among 67  #> due to lack of convergence of the model fit for a fraction of the  #> bootstrapped samples greater than 0.5. #> For 0 BMD.zSD values and 35 BMD.xfold values among 67 at least one  #> bound of the 95 percent confidence interval could not be computed due  #> to some bootstrapped BMD values not reachable due to model asymptotes  #> or reached outside the range of tested doses (bounds coded Inf)).  # (3.a)  # manual ecdf plot of the bootstrap results as an ecdf distribution  # on BMD for each trend # plot that could also be obtained with plot(b, by = \"trend\")  # in this simple case # a <- b$res[is.finite(b$res$BMD.zSD.upper), ] ecdfplotwithCI(variable = a$BMD.zSD, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, by = a$trend, CI.col = \"red\")   # (3.b) # ecdf plot of the bootstrap results as an ecdf distribution  # on BMD for each model # with the color of the confidence intervals coding for the trend # ecdfplotwithCI(variable = a$BMD.zSD, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, by = a$model, CI.col = a$trend)   # changing the size of the points and the transparency of CI lines ecdfplotwithCI(variable = a$BMD.zSD, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, by = a$model, CI.col = a$trend,               CI.alpha = 0.5, point.size = 0.5)   # with the model coding for the type of points ecdfplotwithCI(variable = a$BMD.zSD, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, CI.col = a$trend,               CI.alpha = 0.5, point.size = 0.5, point.type = a$model)    # (3.c) # ecdf plot of the bootstrap results as an ecdf distribution on  # on BMD_L (lower value of the confidence interval) for each trend #  ecdfplotwithCI(variable = a$BMD.zSD.lower, CI.lower = a$BMD.zSD.lower,                CI.upper = a$BMD.zSD.upper, by = a$model, CI.col = a$trend,                add.point = FALSE)    # }"},{"path":"/reference/ecdfquantileplot.html","id":null,"dir":"Reference","previous_headings":"","what":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"Plots given quantile variable calculated group ECDF plot points sized numbers items per group. context package function intended used BMD variable groups defined user functional annotation.","code":""},{"path":"/reference/ecdfquantileplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"","code":"ecdfquantileplot(variable, by, quantile.prob = 0.5, title)"},{"path":"/reference/ecdfquantileplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"variable numeric vector corresponding variable want calculate given quantile group. context package variable may BMD. factor length defining groups. context package factor may code groups defined user functional annotation. quantile.prob probability (]0, 1[) defining quantile calculate group. title optional title plot.","code":""},{"path":"/reference/ecdfquantileplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"given quantile calculated group (e.g.items metabolic pathway) using function quantile plotted ECDF plot. ECDF plot quantiles point sized according number items corresponding group (e.g. metabolic pathway). recommend use new function sensitivityplot may convenient offers options.","code":""},{"path":"/reference/ecdfquantileplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/ecdfquantileplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/ecdfquantileplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ECDF plot of a given quantile of a variable calculated by group — ecdfquantileplot","text":"","code":"# (1) An example from data published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # a dataframe with metabolomic results (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # a dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe # bootstrap results and annotation annotres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(annotres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport  ### an ECDFplot of quantiles of BMD-zSD calculated by pathway ecdfquantileplot(variable = annotres$BMD.zSD,                 by = annotres$path_class,                quantile.prob = 0.25)     # same plot in log10 dose scale (not interesting on this example # but could be on another one)  if (require(ggplot2))   ecdfquantileplot(variable = annotres$BMD.zSD,                 by = annotres$path_class,                quantile.prob = 0.25) + scale_y_log10()"},{"path":"/reference/formatdata4DRomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"Build R object can used data input data importation function two inputs: nitems x nsamples matrix coding signal nsamples vector doses","code":""},{"path":"/reference/formatdata4DRomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"","code":"formatdata4DRomics(signalmatrix, dose, samplenames)"},{"path":"/reference/formatdata4DRomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"signalmatrix matrix data one row item one column sample. row names matrix taken identify   items.   Depending type measured signal, look help corresponding importation function especially check use good scale data RNAseqdata, microarraydata, continuousomicdata   continuousanchoringdata. dose numeric vector giving dose sample. samplenames character vector giving names samples (optional argument - given, col names signalmatrix taken sample names).","code":""},{"path":"/reference/formatdata4DRomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"R object corresponds dataframe can passed input    first argument data importation functions RNAseqdata,    microarraydata, continuousomicdata   continuousanchoringdata.","code":""},{"path":[]},{"path":"/reference/formatdata4DRomics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/formatdata4DRomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build an R object that can be used as data input in DRomics — formatdata4DRomics","text":"","code":"# (1) load of data # data(zebraf) str(zebraf) #> List of 3 #>  $ counts: int [1:1000, 1:16] 453 331 897 12 326 533 1948 904 583 154 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:1000] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" \"ENSDARG00000115971\" ... #>   .. ..$ : chr [1:16] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\" ... #>  $ dose  : num [1:16] 500 500 500 0 0 0 0 50000 50000 50000 ... #>  $ batch : Factor w/ 2 levels \"I10\",\"I17\": 1 1 1 1 1 1 1 2 2 2 ...  # (2) formating of data for use in DRomics #  data4DRomics <- formatdata4DRomics(signalmatrix = zebraf$counts,                             dose = zebraf$dose) # \\donttest{ # (3) Normalization and transformation of data  # o <- RNAseqdata(data4DRomics) #> Just wait, the transformation using regularized logarithm (rlog) may  #> take a few minutes. #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. plot(o)  # }"},{"path":"/reference/itemselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection of significantly responsive items — itemselect","title":"Selection of significantly responsive items — itemselect","text":"Significantly responsive items selected using one three proposed methods: quadratic trend test, linear trend test ANOVA-based test.","code":""},{"path":"/reference/itemselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection of significantly responsive items — itemselect","text":"","code":"itemselect(omicdata, select.method = c(\"quadratic\", \"linear\", \"ANOVA\"),    FDR = 0.05, max.ties.prop = 0.2)     # S3 method for class 'itemselect' print(x, nfirstitems = 20, ...)"},{"path":"/reference/itemselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection of significantly responsive items — itemselect","text":"omicdata object class \"microarraydata\", \"RNAseqdata\", \"metabolomicdata\" \"continuousanchoringdata\" respectively returned functions microarraydata, RNAseqdata, metabolomicdata continuousanchoringdata. select.method \"quadratic\" quadratic trend test dose ranks, \"linear\" linear trend test dose ranks \"ANOVA\" ANOVA-type test (see details explaination). FDR threshold term FDR (False Discovery Rate) selecting responsive items. max.ties.prop maximal tolerated proportion tied values item,   item selected (must ]0, 0.5],   default fixed 0.2 - see details description filtering step). x object class \"itemselect\". nfirstitems maximum number selected items print. ... arguments passed print function.","code":""},{"path":"/reference/itemselect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selection of significantly responsive items — itemselect","text":"selection responsive items performed using limma package microarray continuous omics data (metabolomics), DESeq2 package RNAseq data lm function continuous anchoring data. Three methods proposed (described ). Within limma methods implemented using functions lmFit, eBayes topTable p-values ajusted multiple testing using Benjamini-Hochberg method (also called q-values), false discovery rate given input (argument FDR). Within DESeq2 methods implemented using functions DESeqDataSetFromMatrix, DESeq results p-values ajusted multiple testing using Benjamini-Hochberg method (also called q-values), false discovery rate given input (argument FDR). continuous anchoring data, lm anova functions used fit model compare null model, pvalues corrected using function p.adjust Benjamini-Hochberg method.  ANOVA_based test (\"ANOVA\") classically used selection omics data general case requires many replicates per dose efficient, thus really suited dose-response design. linear trend test (\"linear\") aims detecting monotonic trends dose-response designs, whatever number replicates per dose. proposed Tukey (1985), tests global significance linear model describing response function dose rank-scale. quadratic trend test (\"quadratic\") tests global significance quadratic model describing response function dose rank-scale. variant linear trend method aims detecting monotonic non monotonic trends dose-response designs, whatever number replicates per dose (default chosen method). use one previously described tests, filter based proportion tied values also performed whatever type data, assuming tied values correspond minimal common value non detections imputed. items proportion tied minimal values input argument max.ties.prop eliminated selection.","code":""},{"path":"/reference/itemselect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection of significantly responsive items — itemselect","text":"itemselect returns object class \"itemselect\", list 5 components:  adjpvalue vector p-values adjusted Benjamini-Hochberg method   (also called q-values) selected items (adjpvalue inferior FDR) sorted ascending order selectindex corresponding vector row indices selected items object omicdata omicdata corresponding object class \"microarraydata\",   \"RNAseqdata\", \"continuousomicdata\" \"continuousanchoringdata\"   given input. select.method selection method given input. FDR threshold term FDR given input. print \"itemselect\" object gives number selected items   identifiers 20 responsive items.","code":""},{"path":[]},{"path":"/reference/itemselect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Selection of significantly responsive items — itemselect","text":"Tukey JW, Ciminera JL Heyse JF (1985), Testing statistical certainty response increasing doses drug. Biometrics, 295-301. Ritchie , Phipson B, Wu D, Hu Y, Law CW, Shi W, Smyth, GK (2015), limma powers differential expression analyses RNA-sequencing microarray studies. Nucleic Acids Research 43, e47. Love MI, Huber W, Anders S (2014), Moderated estimation fold change dispersion RNA-seq data DESeq2. Genome biology, 15(12), 550.","code":""},{"path":"/reference/itemselect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Selection of significantly responsive items — itemselect","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/itemselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection of significantly responsive items — itemselect","text":"","code":"# (1) an example on a microarray data set (a subsample of a greater data set)  #      datafilename <- system.file(\"extdata\", \"transcripto_sample.txt\", package=\"DRomics\")  (o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\")) #> Just wait, the normalization using cyclicloess may take a few minutes. #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 1000  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"5.2\"  \"6.1\"  \"6.2\"  \"7.1\"  \"7.2\"  #> [11] \"8.1\"  \"8.2\"  \"9.1\"  \"9.2\"  \"10.1\" \"10.2\" \"11.1\" \"11.2\" \"12.1\" \"12.2\" #> Data were normalized between arrays using the following method: cyclicloess   # 1.a using the quadratic trend test # (s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.05)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.05: 318 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" print(s_quad, nfirstitems = 30) #> Number of selected items using a quadratic trend test with an FDR of 0.05: 318 #> Identifiers of the first 30 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\" \"351.2\" \"12.1\"  \"7.2\"   \"239.2\" \"368.1\" \"263.2\" \"264.1\" #> [28] \"138.1\" \"233.2\" \"334.1\"  # to get the names of all the selected items (selecteditems <- s_quad$omicdata$item[s_quad$selectindex])  #>   [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #>  [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #>  [19] \"15\"    \"350.1\" \"351.2\" \"12.1\"  \"7.2\"   \"239.2\" \"368.1\" \"263.2\" \"264.1\" #>  [28] \"138.1\" \"233.2\" \"334.1\" \"353.1\" \"359\"   \"136.1\" \"167.1\" \"138.2\" \"27.2\"  #>  [37] \"312.1\" \"367.1\" \"264.2\" \"334.2\" \"168.2\" \"247.2\" \"336\"   \"168.1\" \"25.2\"  #>  [46] \"7.1\"   \"136.2\" \"167.2\" \"233.1\" \"353.2\" \"360.2\" \"13.2\"  \"12.2\"  \"88.1\"  #>  [55] \"263.1\" \"352.2\" \"162.2\" \"70\"    \"161.1\" \"275.1\" \"358.2\" \"88.2\"  \"320.1\" #>  [64] \"352.1\" \"311.1\" \"27.1\"  \"4\"     \"358.1\" \"42.2\"  \"55.2\"  \"92\"    \"249.2\" #>  [73] \"360.1\" \"103\"   \"162.1\" \"320.2\" \"198.1\" \"229.2\" \"371.2\" \"225\"   \"321.2\" #>  [82] \"329.1\" \"438.2\" \"229.1\" \"25.1\"  \"348\"   \"228.1\" \"247.1\" \"371.1\" \"512.1\" #>  [91] \"81\"    \"13.1\"  \"148\"   \"311.2\" \"113.2\" \"83.2\"  \"268.2\" \"268.1\" \"84.1\"  #> [100] \"321.1\" \"467.1\" \"228.2\" \"113.1\" \"489.1\" \"330.2\" \"249.1\" \"83.1\"  \"439.2\" #> [109] \"369.2\" \"330.1\" \"295.1\" \"294.1\" \"295.2\" \"490.2\" \"117.2\" \"337\"   \"267.2\" #> [118] \"274.1\" \"367.2\" \"468.1\" \"116.1\" \"368.2\" \"401.2\" \"116.2\" \"137\"   \"341.1\" #> [127] \"195.2\" \"490.1\" \"467.2\" \"404.2\" \"446.1\" \"329.2\" \"85.2\"  \"118.1\" \"118.2\" #> [136] \"126\"   \"267.1\" \"115\"   \"132.1\" \"401.1\" \"402.1\" \"449.1\" \"404.1\" \"199.2\" #> [145] \"312.2\" \"84.2\"  \"74.1\"  \"275.2\" \"446.2\" \"373.1\" \"449.2\" \"465.2\" \"117.1\" #> [154] \"294.2\" \"74.2\"  \"194.2\" \"195.1\" \"40.2\"  \"497.2\" \"169.2\" \"5.2\"   \"194.1\" #> [163] \"372.2\" \"274.2\" \"410.1\" \"169.1\" \"170\"   \"171.1\" \"202.2\" \"207.1\" \"373.2\" #> [172] \"402.2\" \"496.1\" \"372.1\" \"298.2\" \"67.1\"  \"144.1\" \"154.1\" \"199.1\" \"369.1\" #> [181] \"396.2\" \"232.1\" \"177.2\" \"41.2\"  \"85.1\"  \"159\"   \"171.2\" \"245.2\" \"396.1\" #> [190] \"87.2\"  \"299.1\" \"496.2\" \"161.2\" \"266.1\" \"512.2\" \"464.1\" \"356.1\" \"397.1\" #> [199] \"8.1\"   \"39.2\"  \"464.2\" \"61.2\"  \"385.1\" \"131.2\" \"176.1\" \"497.1\" \"245.1\" #> [208] \"528.1\" \"131.1\" \"465.1\" \"54.1\"  \"204.2\" \"451.1\" \"54.2\"  \"441.1\" \"260.1\" #> [217] \"299.2\" \"397.2\" \"400.2\" \"436\"   \"177.1\" \"232.2\" \"386.2\" \"260.2\" \"256.1\" #> [226] \"87.1\"  \"265.1\" \"204.1\" \"258.2\" \"67.2\"  \"198.2\" \"439.1\" \"40.1\"  \"206.2\" #> [235] \"66.1\"  \"385.2\" \"356.2\" \"293.2\" \"527.1\" \"258.1\" \"129.1\" \"68.1\"  \"191.1\" #> [244] \"511.1\" \"286.1\" \"75.2\"  \"128.2\" \"428.1\" \"122.1\" \"144.2\" \"282.1\" \"523.2\" #> [253] \"377.2\" \"386.1\" \"128.1\" \"440.1\" \"523.1\" \"461.2\" \"293.1\" \"342.2\" \"433.1\" #> [262] \"68.2\"  \"86.2\"  \"451.2\" \"298.1\" \"291.1\" \"342.1\" \"43.1\"  \"499.1\" \"333.2\" #> [271] \"227.1\" \"121.1\" \"208.2\" \"412.2\" \"438.1\" \"282.2\" \"376.2\" \"75.1\"  \"155.1\" #> [280] \"526.2\" \"291.2\" \"482.2\" \"129.2\" \"526.1\" \"121.2\" \"440.2\" \"515.2\" \"65.2\"  #> [289] \"341.2\" \"122.2\" \"461.1\" \"224.1\" \"419.1\" \"482.1\" \"466.1\" \"524.2\" \"524.1\" #> [298] \"112.1\" \"41.1\"  \"284.1\" \"187.1\" \"513.2\" \"110.1\" \"101.2\" \"419.2\" \"210.1\" #> [307] \"205.1\" \"498.2\" \"382.1\" \"133.2\" \"390.1\" \"243.1\" \"452.1\" \"110.2\" \"513.1\" #> [316] \"468.2\" \"511.2\" \"65.1\"   # \\donttest{  # 1.b using the linear trend test # (s_lin <- itemselect(o, select.method = \"linear\", FDR = 0.05)) #> Removing intercept from test coefficients #> Number of selected items using a linear trend test with an FDR of 0.05: 90 #> Identifiers of the first 20 most responsive items: #>  [1] \"300.2\" \"301.1\" \"239.1\" \"300.1\" \"240.1\" \"301.2\" \"240.2\" \"239.2\" \"364.2\" #> [10] \"363.1\" \"364.1\" \"136.1\" \"363.2\" \"27.2\"  \"138.1\" \"336\"   \"233.2\" \"25.2\"  #> [19] \"27.1\"  \"136.2\"  # 1.c using the ANOVA-based test # (s_ANOVA <- itemselect(o, select.method = \"ANOVA\", FDR = 0.05)) #> Removing intercept from test coefficients #> Number of selected items using an ANOVA type test with an FDR of 0.05: 203 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"363.2\" \"367.1\" \"383.1\" \"383.2\" \"363.1\" \"364.1\" \"364.2\" \"384.1\" #> [10] \"368.1\" \"300.2\" \"351.1\" \"301.1\" \"320.1\" \"350.2\" \"300.1\" \"351.2\" \"353.1\" #> [19] \"353.2\" \"350.1\"  # 1.d using the quadratic trend test with a smaller false discovery rate # (s_quad.2 <- itemselect(o, select.method = \"quadratic\", FDR = 0.001)) #> Removing intercept from test coefficients #> Number of selected items using a quadratic trend test with an FDR of 0.001: 78 #> Identifiers of the first 20 most responsive items: #>  [1] \"384.2\" \"383.1\" \"383.2\" \"384.1\" \"301.1\" \"363.1\" \"300.2\" \"364.2\" \"364.1\" #> [10] \"363.2\" \"301.2\" \"300.1\" \"351.1\" \"350.2\" \"239.1\" \"240.1\" \"240.2\" \"370\"   #> [19] \"15\"    \"350.1\"  # }"},{"path":"/reference/metabolomicdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"Metabolomic continuous omics data imported .txt file (internally imported using function read.table) checked R object class data.frame (see description argument file required format data). normalization transformation provided function. pretreatment continuous omic data data must done importation data, data must imported log scale needed (imperative example metabolomic data), can directly modelled using normal error model. strong hypothesis required selection items dose-reponse modelling. example, basic procedure pre-treatment metabolomic data follow three steps described thereafter: ) removing metabolites proportion missing data   (non detections) across samples high   (20 50 percents according tolerance level); ii) retrieving missing values data using half minimum method   (.e. half minimum value found metabolite across samples); iii) log-transformation values. scaling total intensity (normalization sum signals sample) another normalization necessary pertinent, recommend three previously decribed steps.","code":""},{"path":"/reference/metabolomicdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"","code":"continuousomicdata(file, backgrounddose, check = TRUE) metabolomicdata(file, backgrounddose, check = TRUE)  # S3 method for class 'continuousomicdata' print(x, ...) # S3 method for class 'continuousomicdata' plot(x, range4boxplot = 0, ...)"},{"path":"/reference/metabolomicdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"file name .txt file (e.g. \"mydata.txt\") containing one row per item, first column corresponding identifier item, columns giving responses item replicate dose concentration. first line, name identifier column, must tested doses concentrations numeric format corresponding replicate (example, triplicates treatment, first line \"item\", 0, 0, 0, 0.1, 0.1, 0.1, etc.). file imported within function using function read.table default field separator (sep argument)default decimal separator (dec argument \".\"). Alternatively R object class data.frame can directly given input, corresponding output read.table(file, header = FALSE) file described . two alternatives illustrated examples. backgrounddose argument must used dose zero data, prevent calculation BMD extrapolation. doses  equal value given backgrounddose fixed 0, considered background level exposition. check TRUE format input file checked. x object class \"continuousomicdata\". range4boxplot argument passed boxplot(), fixed default 0   prevent producing large plot files due many outliers.   Can put 1.5 obtain classical boxplots. ... arguments passed print plot functions.","code":""},{"path":"/reference/metabolomicdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"function imports data, checks format (see description argument file required format data) gives print information help user check coding data correct : tested doses (concentrations), number replicates dose, number items identifiers first 20 items. metabolomicdata() first name gave function. renamed continuousomicdata (keeping first name available) offer use continuous omic data proteomics data RT-QPCR data. Nevertheless one take care scale data imported DRomics. transformation may needed enable use normal error model step DRomics workflow (selection items modelling BMD calculation)","code":""},{"path":"/reference/metabolomicdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"continuousomicdata() returns object class \"continuousomicdata\",    list 7 components: data numeric matrix responses item replicate   (one line per item, one column per replicate) dose numeric vector tested doses concentrations corresponding     column data item character vector identifiers items, corresponding     line data design table experimental design (tested doses number     replicates dose) control user data.mean numeric matrix mean responses item per dose (mean     corresponding replicates) (one line per item, one column per unique value     dose data.sd numeric matrix standard deviations response    item per dose (sd corresponding replicates, NA replicate)    (one line per item, one column per unique value dose) containsNA TRUE data set contains NA values print continuousomicdata object gives tested doses (concentrations)   number replicates dose, number items, identifiers   first 20 items (check good coding data) normalization method.    plot continuousomicdata object shows data distribution dose concentration replicate.","code":""},{"path":[]},{"path":"/reference/metabolomicdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/metabolomicdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import and check of continuous omic data (e.g. metabolomic data) — continuousomicdata","text":"","code":"# (1) import and check of metabolomic data  # (an example on a subsample of a greater data set given in the package (see ?Scenedesmus)) # datafilename <- system.file(\"extdata\", \"metabolo_sample.txt\", package = \"DRomics\") o <- continuousomicdata(datafilename) #> Warning:  #> We recommend you to check that your omic data were correctly pretreated #> before importation. In particular data (e.g. metabolomic signal) should #> have been log-transformed, without replacing 0 values by NA values #> (consider using the half minimum method instead for example). print(o) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.69  1.1 1.79 2.92 4.78 7.76  #>   10    6    2    2    2    6    2  #> Number of items: 109  #> Identifiers of the first 20 items: #>  #>  [1] \"P_2\"  \"P_4\"  \"P_5\"  \"P_6\"  \"P_7\"  \"P_10\" \"P_11\" \"P_12\" \"P_14\" \"P_16\" #> [11] \"P_19\" \"P_21\" \"P_22\" \"P_26\" \"P_32\" \"P_34\" \"P_35\" \"P_36\" \"P_37\" \"P_38\" plot(o)  PCAdataplot(o)   # if you want to skip the check of data o <- continuousomicdata(datafilename, check = FALSE)   # If you want to use your own data set just replace datafilename,  # the first argument of metabolomicdata(),  # by the name of your data file (e.g. \"mydata.txt\") #  # You should take care that the field separator of this data file is one # of the default field separators recognised by the read.table() function # when it is used with its default field separator (sep argument) # Tabs are recommended.  # Use of an R object of class data.frame # An example using the complete data set # Scenedesmus_metab (see ?Scenedesmus for details) data(Scenedesmus_metab) (o <- continuousomicdata(Scenedesmus_metab)) #> Warning:  #> We recommend you to check that your omic data were correctly pretreated #> before importation. In particular data (e.g. metabolomic signal) should #> have been log-transformed, without replacing 0 values by NA values #> (consider using the half minimum method instead for example). #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>    0 0.69  1.1 1.79 2.92 4.78 7.76  #>    6    3    3    3    3    3    3  #> Number of items: 224  #> Identifiers of the first 20 items: #>  #>  [1] \"NAP_1\"  \"NAP_2\"  \"NAP_3\"  \"NAP_4\"  \"NAP_5\"  \"NAP_6\"  \"NAP_7\"  \"NAP_8\"  #>  [9] \"NAP_9\"  \"NAP_11\" \"NAP_13\" \"NAP_14\" \"NAP_15\" \"NAP_16\" \"NAP_17\" \"NAP_18\" #> [17] \"NAP_19\" \"NAP_20\" \"NAP_21\" \"NAP_22\" plot(o)"},{"path":"/reference/microarraydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import, check and normalization of single-channel microarray data — microarraydata","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"Single-channel microarray data log2 imported .txt file (internally imported using function read.table), checked R object class data.frame (see description argument file required format data)normalized (arrays normalization). omicdata deprecated version microarraydata.","code":""},{"path":"/reference/microarraydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"","code":"microarraydata(file, backgrounddose, check = TRUE,    norm.method = c(\"cyclicloess\", \"quantile\", \"scale\", \"none\"))    omicdata(file, backgrounddose, check = TRUE,    norm.method = c(\"cyclicloess\", \"quantile\", \"scale\", \"none\"))  # S3 method for class 'microarraydata' print(x, ...) # S3 method for class 'microarraydata' plot(x, range4boxplot = 0, ...)"},{"path":"/reference/microarraydata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"file name .txt file (e.g. \"mydata.txt\") containing one row per item, first column corresponding identifier item, columns giving responses item replicate dose concentration. first line, name identifier column, must tested doses concentrations numeric format corresponding replicate (example, triplicates treatment, first line \"item\", 0, 0, 0, 0.1, 0.1, 0.1, etc.). file imported within function using function read.table default field separator (sep argument) default decimal separator (dec argument \".\"). Alternatively R object class data.frame can directly given input, corresponding output read.table(file, header = FALSE) file described . backgrounddose argument must used dose zero data, prevent calculation BMD extrapolation. doses  equal value given backgrounddose fixed 0, considered background level exposition. check TRUE format input file checked. norm.method \"none\" normalization performed, else normalization performed using function normalizeBetweenArrays limma package using specified method. x object class \"microarraydata\". range4boxplot argument passed boxplot(), fixed default 0   prevent producing large plot files due many outliers.   Can put 1.5 obtain classical boxplots. ... arguments passed print plot functions.","code":""},{"path":"/reference/microarraydata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"function imports data, checks format (see description argument file required format data) gives print information help user check coding data correct : tested doses (concentrations) number replicates dose, number items, identifiers first 20 items. argument norm.method \"none\", data normalized using function normalizeBetweenArrays limma package using specified method : \"cyclicloess\" (default choice), \"quantile\" \"scale\".","code":""},{"path":"/reference/microarraydata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"microarraydata returns object class \"microarraydata\", list 9 components: data numeric matrix normalized responses item replicate   (one line per item, one column per replicate) dose numeric vector tested doses concentrations corresponding     column data item character vector identifiers items, corresponding     line data design table experimental design (tested doses number     replicates dose) control user data.mean numeric matrix mean responses item per dose (mean     corresponding replicates) (one line per item, one column per unique value     dose data.sd numeric matrix standard deviations response     item per dose (sd corresponding replicates, NA replicate)     (one line per item, one column per unique value dose) norm.method normalization method specified input data.beforenorm numeric matrix responses item replicate   (one line per item, one column per replicate) normalization containsNA always FALSE microarray data allowed contain     NA values print microarraydata object gives tested doses (concentrations)   number replicates dose, number items, identifiers   first 20 items (check good coding data) normalization method.    plot microarraydata object shows data distribution dose concentration replicate normalization.","code":""},{"path":[]},{"path":"/reference/microarraydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"Ritchie , Phipson B, Wu D, Hu Y, Law CW, Shi W, Smyth, GK (2015), limma powers differential expression analyses RNA-sequencing microarray studies. Nucleic Acids Research 43, e47.","code":""},{"path":"/reference/microarraydata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/microarraydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import, check and normalization of single-channel microarray data — microarraydata","text":"","code":"# (1) import, check and normalization of microarray data  # (an example on a subsample of a greater data set published in Larras et al. 2018 # Transcriptomic effect of triclosan in the chlorophyte Scenedesmus vacuolatus) datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",    package=\"DRomics\") o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. print(o) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 100  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"6.1\"  \"7.1\"  \"8.1\"  \"9.1\"  \"10.1\" #> [11] \"11.1\" \"12.1\" \"13.1\" \"14.1\" \"15\"   \"16.1\" \"17.1\" \"18.1\" \"19.1\" \"20.1\" #> Data were normalized between arrays using the following method: cyclicloess  plot(o)  PCAdataplot(o)  PCAdataplot(o, label = TRUE)    # If you want to use your own data set just replace datafilename,  # the first argument of microarraydata(),  # by the name of your data file (e.g. \"mydata.txt\") #  # You should take care that the field separator of this data file is one # of the default field separators recognised by the read.table() function # when it is used with its default field separator (sep argument) # Tabs are recommended.  # \\donttest{  # (2) normalization with other methods (o.2 <- microarraydata(datafilename, check = TRUE, norm.method = \"quantile\")) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 100  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"6.1\"  \"7.1\"  \"8.1\"  \"9.1\"  \"10.1\" #> [11] \"11.1\" \"12.1\" \"13.1\" \"14.1\" \"15\"   \"16.1\" \"17.1\" \"18.1\" \"19.1\" \"20.1\" #> Data were normalized between arrays using the following method: quantile  plot(o.2)  (o.3 <- microarraydata(datafilename, check = TRUE, norm.method = \"scale\")) #> Elements of the experimental design in order to check the coding of the data: #> Tested doses and number of replicates for each dose: #>  #>     0  0.69 1.223 2.148 3.774 6.631  #>     5     5     5     5     5     5  #> Number of items: 100  #> Identifiers of the first 20 items: #>  [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5.1\"  \"6.1\"  \"7.1\"  \"8.1\"  \"9.1\"  \"10.1\" #> [11] \"11.1\" \"12.1\" \"13.1\" \"14.1\" \"15\"   \"16.1\" \"17.1\" \"18.1\" \"19.1\" \"20.1\" #> Data were normalized between arrays using the following method: scale  plot(o.3)   # }"},{"path":"/reference/selectgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection of groups on which to focus — selectgroups","title":"Selection of groups on which to focus — selectgroups","text":"Selection groups (e.g. corresponding different biological annotations) focus, based sensitivity (BMD summary value) representativeness (number items group).","code":""},{"path":"/reference/selectgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection of groups on which to focus — selectgroups","text":"","code":"selectgroups(extendedres, group, explev,    BMDmax, BMDtype = c(\"zSD\", \"xfold\"),     BMDsummary = c(\"first.quartile\", \"median\" ),    nitemsmin = 3, keepallexplev = FALSE)"},{"path":"/reference/selectgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection of groups on which to focus — selectgroups","text":"extendedres dataframe results provided drcfit (fitres) bmdcalc (res)  subset data frame (selected lines). dataframe extended  additional columns coming group (example biological  annotation items) optionnally another experimental level  (example molecular level),  lines  can replicated corresponding item one annotation. group name column extendedres coding groups. explev optional argument naming column extendedres coding experimental level. BMDmax maximum BMD summary value used limit groups sensitive (optional input : missing selection based BMD). BMDtype type BMD used selection BMD,   \"zSD\" (default choice) \"xfold\". BMDsummary type summary used selection based BMD, \"first.quartile\" (default choice first quartile BMD values per group) \"median\" (choice median BMD values per group). nitemsmin minimum number items per group limit groups represented (can put 1 want select number: recommended. keepallexplev TRUE (default value FALSE), group selected least one experimental level, kept selection experimental levels.","code":""},{"path":"/reference/selectgroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selection of groups on which to focus — selectgroups","text":"function provide subset input extendedres corresponding groups number items representing group greater equal nitemsmin BMDmax secified, BMD summary value less equal BMDmax. one experimental level (explev specified), selection groups made separately experimental level: group may selected one experimental level removed another one. function eliminates rows NA values chosen BMD (BMDtype) performing selection.","code":""},{"path":"/reference/selectgroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection of groups on which to focus — selectgroups","text":"dataframe corresponding subset extendedres given input,    can used exploration using example bmdplot,    bmdplotwithgradient,    trendplot sensitivityplot.","code":""},{"path":[]},{"path":"/reference/selectgroups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Selection of groups on which to focus — selectgroups","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/selectgroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection of groups on which to focus — selectgroups","text":"","code":"# (1)  # An example from the paper published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # the dataframe with metabolomic results  resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # the dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe extendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(extendedres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport   # (1) Sensitivity by pathway # (1.a) before selection sensitivityplot(extendedres, BMDtype = \"zSD\",                 group = \"path_class\",                  BMDsummary = \"first.quartile\")  # (1.b) after selection on representativeness extendedres.b <- selectgroups(extendedres,                           group = \"path_class\",                           nitemsmin = 10) sensitivityplot(extendedres.b, BMDtype = \"zSD\",                 group = \"path_class\",                  BMDsummary = \"first.quartile\")                   # \\donttest{ # (1.c) after selection on sensitivity extendedres.c <- selectgroups(extendedres,                           group = \"path_class\",                           BMDmax = 1.25,                           BMDtype = \"zSD\",                           BMDsummary = \"first.quartile\",                          nitemsmin = 1) sensitivityplot(extendedres.c, BMDtype = \"zSD\",                 group = \"path_class\",                  BMDsummary = \"first.quartile\")   # (1.d) after selection on representativeness and sensitivity  extendedres.d <- selectgroups(extendedres,                           group = \"path_class\",                           BMDmax = 1.25,                           BMDtype = \"zSD\",                           BMDsummary = \"first.quartile\",                          nitemsmin = 10) sensitivityplot(extendedres.d, BMDtype = \"zSD\",                 group = \"path_class\",                  BMDsummary = \"first.quartile\")   # (2)  # An example with two molecular levels # ### Rename metabolomic results metabextendedres <- extendedres  # Import the dataframe with transcriptomic results  contigresfilename <- system.file(\"extdata\", \"triclosanSVcontigres.txt\", package = \"DRomics\") contigres <- read.table(contigresfilename, header = TRUE, stringsAsFactors = TRUE) str(contigres) #> 'data.frame':\t447 obs. of  27 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ...  # Import the dataframe with functional annotation (or any other descriptor/category  # you want to use, here KEGG pathway classes)  contigannotfilename <- system.file(\"extdata\", \"triclosanSVcontigannot.txt\", package = \"DRomics\") contigannot <- read.table(contigannotfilename, header = TRUE, stringsAsFactors = TRUE) str(contigannot) #> 'data.frame':\t562 obs. of  2 variables: #>  $ contig    : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ path_class: Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  # Merging of both previous dataframes    contigextendedres <- merge(x = contigres, y = contigannot, by.x = \"id\", by.y = \"contig\") # to see the structure of this dataframe str(contigextendedres) #> 'data.frame':\t562 obs. of  28 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ... #>  $ path_class      : Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  ### Merge metabolomic and transcriptomic results extendedres <- rbind(metabextendedres, contigextendedres) extendedres$molecular.level <- factor(c(rep(\"metabolites\", nrow(metabextendedres)),                               rep(\"contigs\", nrow(contigextendedres)))) str(extendedres) #> 'data.frame':\t646 obs. of  29 variables: #>  $ id              : Factor w/ 478 levels \"NAP47_51\",\"NAP_2\",..: 1 2 3 4 4 4 4 5 6 7 ... #>  $ irow            : int  46 2 21 28 28 28 28 34 38 47 ... #>  $ adjpvalue       : num  7.16e-04 6.23e-05 1.11e-05 1.03e-05 1.03e-05 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 3 3 3 3 3 2 2 4 ... #>  $ nbpar           : int  2 3 2 2 2 2 2 3 3 5 ... #>  $ b               : num  -0.056 0.4598 -0.0595 -0.0451 -0.0451 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ e               : num  NA -1.65 NA NA NA ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.1245 0.126 0.0793 0.052 0.052 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 7 7 7 7 7 2 2 9 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 3 3 3 3 1 ... #>  $ y0              : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ yrange          : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ maxychange      : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  2.224 0.528 1.333 1.154 1.154 ... #>  $ BMR.zSD         : num  7.22 5.82 5.31 7.81 7.81 ... #>  $ BMD.xfold       : num  NA NA NA NA NA ... #>  $ BMR.xfold       : num  6.61 5.35 4.85 7.07 7.07 ... #>  $ BMD.zSD.lower   : num  0.979 0.2 0.853 0.752 0.752 ... #>  $ BMD.zSD.upper   : num  4.07 1.11 1.75 1.46 1.46 ... #>  $ BMD.xfold.lower : num  Inf Inf 7.61 Inf Inf ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  1000 957 1000 1000 1000 1000 1000 648 620 872 ... #>  $ path_class      : Factor w/ 18 levels \"Amino acid metabolism\",..: 5 5 3 3 2 6 8 5 5 5 ... #>  $ molecular.level : Factor w/ 2 levels \"contigs\",\"metabolites\": 2 2 2 2 2 2 2 2 2 2 ...  # optional inverse alphabetic ordering of groups for the plot extendedres$path_class <- factor(extendedres$path_class,                  levels = sort(levels(extendedres$path_class), decreasing = TRUE)) ### (2.1) sensitivity plot of both molecular levels before and after selection of  #   most sensitive groups sensitivityplot(extendedres, BMDtype = \"zSD\",                 group = \"path_class\", colorby = \"molecular.level\",                 BMDsummary = \"first.quartile\")  extendedres.2 <- selectgroups(extendedres,                           group = \"path_class\",                          explev = \"molecular.level\",                          BMDmax = 1,                           BMDtype = \"zSD\",                           BMDsummary = \"first.quartile\",                          nitemsmin = 1) sensitivityplot(extendedres.2, BMDtype = \"zSD\",                 group = \"path_class\", , colorby = \"molecular.level\",                 BMDsummary = \"first.quartile\")  ### (2.2) same selection but keeping all the experimental as soon # as the selection criterion is met for at least one experimental level extendedres.3 <- selectgroups(extendedres,                           group = \"path_class\",                          explev = \"molecular.level\",                          BMDmax = 1,                           BMDtype = \"zSD\",                           BMDsummary = \"first.quartile\",                          nitemsmin = 1,                          keepallexplev = TRUE) extendedres.2 #>           id  irow    adjpvalue            model nbpar             b         c #> 1   NAP47_51    46 7.158246e-04           linear     2 -0.0560055901        NA #> 2      NAP_2     2 6.232579e-05      exponential     3  0.4598124176        NA #> 5     NAP_30    28 1.028343e-05           linear     2 -0.0450783225        NA #> 6     NAP_30    28 1.028343e-05           linear     2 -0.0450783225        NA #> 7     NAP_30    28 1.028343e-05           linear     2 -0.0450783225        NA #> 8     NAP_38    34 1.885047e-03      exponential     3  0.6010677009        NA #> 9     NAP_42    38 4.160193e-03      exponential     3  0.6721022679        NA #> 10    NAP_52    47 3.920169e-02 log-Gauss-probit     5  0.4500858981  7.202003 #> 11    NAP_54    49 3.767103e-04      exponential     3  0.4520654041        NA #> 12    NAP_56    51 1.489919e-03      exponential     3  0.4392508278        NA #> 13    NAP_58    53 2.834198e-02           linear     2 -0.0193812708        NA #> 14    NAP_73    67 3.767103e-04           linear     2 -0.0578784221        NA #> 16    NP_121   197 9.889460e-03           linear     2  0.0614947494        NA #> 17    NP_121   197 9.889460e-03           linear     2  0.0614947494        NA #> 18    NP_129   204 7.286216e-03      exponential     3  0.0077860286        NA #> 19    NP_129   204 7.286216e-03      exponential     3  0.0077860286        NA #> 20    NP_129   204 7.286216e-03      exponential     3  0.0077860286        NA #> 22    NP_140   214 8.550044e-03     Gauss-probit     4  0.6955280524  4.835774 #> 23    NP_140   214 8.550044e-03     Gauss-probit     4  0.6955280524  4.835774 #> 25    NP_147   221 1.061967e-03      exponential     3 -0.0319538831        NA #> 26     NP_33   113 5.599308e-02 log-Gauss-probit     4  0.6150169995  4.917345 #> 27     NP_33   113 5.599308e-02 log-Gauss-probit     4  0.6150169995  4.917345 #> 28     NP_33   113 5.599308e-02 log-Gauss-probit     4  0.6150169995  4.917345 #> 29     NP_33   113 5.599308e-02 log-Gauss-probit     4  0.6150169995  4.917345 #> 30     NP_33   113 5.599308e-02 log-Gauss-probit     4  0.6150169995  4.917345 #> 31     NP_35   115 3.238559e-03     Gauss-probit     4  1.5075787740  5.975143 #> 32     NP_35   115 3.238559e-03     Gauss-probit     4  1.5075787740  5.975143 #> 33     NP_35   115 3.238559e-03     Gauss-probit     4  1.5075787740  5.975143 #> 34     NP_35   115 3.238559e-03     Gauss-probit     4  1.5075787740  5.975143 #> 35     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 36     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 37     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 39     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 40     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 41     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 42     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 43     NP_43   123 1.055895e-02      exponential     3 -0.3967359528        NA #> 44     NP_55   135 1.119380e-06     Gauss-probit     4  2.3252734893  4.469882 #> 46     NP_56   136 5.289310e-03      exponential     3 -0.0043605275        NA #> 47     NP_56   136 5.289310e-03      exponential     3 -0.0043605275        NA #> 48     NP_59   139 1.293440e-02      exponential     3 -0.3667815344        NA #> 49     NP_59   139 1.293440e-02      exponential     3 -0.3667815344        NA #> 50     NP_59   139 1.293440e-02      exponential     3 -0.3667815344        NA #> 51     NP_59   139 1.293440e-02      exponential     3 -0.3667815344        NA #> 52     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 53     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 54     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 55     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 56     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 57     NP_60   140 6.939560e-03      exponential     3 -0.5150005401        NA #> 58     NP_68   147 3.449660e-04     Gauss-probit     4  2.4449502970  5.055577 #> 59     NP_69   148 1.156302e-03           linear     2 -0.0507632397        NA #> 60     NP_69   148 1.156302e-03           linear     2 -0.0507632397        NA #> 61     NP_74   153 7.029527e-02 log-Gauss-probit     5  0.2715410382  4.847403 #> 62     NP_74   153 7.029527e-02 log-Gauss-probit     5  0.2715410382  4.847403 #> 63     NP_74   153 7.029527e-02 log-Gauss-probit     5  0.2715410382  4.847403 #> 64     NP_74   153 7.029527e-02 log-Gauss-probit     5  0.2715410382  4.847403 #> 65     NP_74   153 7.029527e-02 log-Gauss-probit     5  0.2715410382  4.847403 #> 67     NP_90   168 3.072572e-02      exponential     3 -0.2686241513        NA #> 68     NP_90   168 3.072572e-02      exponential     3 -0.2686241513        NA #> 69     NP_90   168 3.072572e-02      exponential     3 -0.2686241513        NA #> 70     NP_90   168 3.072572e-02      exponential     3 -0.2686241513        NA #> 71     NP_92   170 2.278810e-03      exponential     3 -0.0045956887        NA #> 72     NP_92   170 2.278810e-03      exponential     3 -0.0045956887        NA #> 73     NP_92   170 2.278810e-03      exponential     3 -0.0045956887        NA #> 75     NP_94   172 1.798752e-05     Gauss-probit     4  3.0165756601  4.862842 #> 76     NP_94   172 1.798752e-05     Gauss-probit     4  3.0165756601  4.862842 #> 77     NP_94   172 1.798752e-05     Gauss-probit     4  3.0165756601  4.862842 #> 79     NP_96   174 5.128859e-04     Gauss-probit     4  2.4099064659  5.216540 #> 80     NP_96   174 5.128859e-04     Gauss-probit     4  2.4099064659  5.216540 #> 81     NP_98   176 1.544866e-04     Gauss-probit     4  1.8803246284  5.908317 #> 82     NP_98   176 1.544866e-04     Gauss-probit     4  1.8803246284  5.908317 #> 83     NP_98   176 1.544866e-04     Gauss-probit     4  1.8803246284  5.908317 #> 84     NP_98   176 1.544866e-04     Gauss-probit     4  1.8803246284  5.908317 #> 86    c00276 39331 9.401685e-07      exponential     3  1.4994358863        NA #> 87    c00281 41217 2.894669e-06      exponential     3  1.4081722202        NA #> 103   c00973  8280 6.803372e-03      exponential     3 -0.7727846601        NA #> 116   c01318 18587 9.761656e-03      exponential     3 -0.0254133606        NA #> 121   c01442 22830 8.398538e-07      exponential     3 -0.4594973812        NA #> 123   c01449 23118 3.283441e-05     Gauss-probit     4  4.4613014130  3.681397 #> 125   c01613 28185 5.354723e-03           linear     2  0.0799120939        NA #> 131   c01645 29447 4.923790e-08     Gauss-probit     4  2.7016585216  3.159101 #> 134   c01924 38335 2.843216e-04     Gauss-probit     4  2.4465374667 11.894336 #> 150   c02837 53881 7.971049e-04           linear     2  0.1575210301        NA #> 157   c02964 54187 3.684145e-04      exponential     3 -1.6864714649        NA #> 161   c03088 54664 3.084821e-03     Gauss-probit     4  2.1488658006 11.596818 #> 169   c03232 55298 2.548714e-06           linear     2  0.2143540812        NA #> 172   c03284 55434 1.365366e-03           linear     2 -0.3672796068        NA #> 178   c03358 55610 1.361311e-03     Gauss-probit     4  2.7322361908 10.205586 #> 180   c03440 55810 2.679169e-03           linear     2 -0.1138782478        NA #> 181   c03440 55810 2.679169e-03           linear     2 -0.1138782478        NA #> 183   c03526 56019 2.223268e-04      exponential     3 -1.2492729382        NA #> 184   c03540 56053 3.430925e-03           linear     2  0.1965028128        NA #> 186   c03544 56063 6.386500e-03      exponential     3 -0.0014175944        NA #> 188   c03571 56127 9.413418e-03 log-Gauss-probit     4  0.5983299493  4.168006 #> 193   c03661 56344 7.587641e-03 log-Gauss-probit     4  0.6923539914  3.041593 #> 196   c03724 56499 4.297972e-05 log-Gauss-probit     4  0.5840913112 12.278610 #> 198   c03760 56585 9.777594e-03           linear     2 -0.1351427617        NA #> 202   c03784 56645 5.006652e-03 log-Gauss-probit     4  0.6898227977  9.654095 #> 228   c04342 58826 1.308910e-04     Gauss-probit     4  7.1974259415  7.723356 #> 233   c04434 59217 7.874407e-03     Gauss-probit     5  3.9082976255  2.896934 #> 235   c04513 59551 9.612303e-03 log-Gauss-probit     4  0.7506662658 11.849601 #> 238   c04553 59682 2.052935e-04      exponential     3 -0.0065668916        NA #> 243   c04613 59817 2.581335e-03     Gauss-probit     4  3.0320225840 11.908364 #> 245   c04619 59830 8.483282e-03      exponential     3  0.0232807480        NA #> 246   c04619 59830 8.483282e-03      exponential     3  0.0232807480        NA #> 252   c04647 59892 1.704160e-03           linear     2  0.0934490851        NA #> 253   c04655 59910 4.758216e-05 log-Gauss-probit     4  0.7297683681 11.552853 #> 256   c04683 59973 5.823021e-04      exponential     3  0.8026136129        NA #> 266   c04883 60416 7.479393e-03      exponential     3  1.7011616772        NA #> 275   c05081 60856 1.998628e-04      exponential     3  0.0440643594        NA #> 276   c05100 60898 4.685588e-05      exponential     3  1.6262517332        NA #> 291   c05326   247 4.812259e-03           linear     2 -0.1628213963        NA #> 293   c05358   382 7.443184e-03      exponential     3  0.0209061611        NA #> 301   c05581  1323 4.187799e-03           linear     2  0.1169616348        NA #> 305   c05641  1567 2.764636e-03      exponential     3 -0.0008701043        NA #> 306   c05645  1576 7.113588e-04           linear     2 -0.1348525089        NA #> 312   c05903  2148 4.374165e-03 log-Gauss-probit     4  0.7532079225 12.168583 #> 327   c06059  2495 1.623735e-03      exponential     3  0.9866188485        NA #> 338   c06208  2970 8.742721e-04           linear     2  0.1440100625        NA #> 341   c06313  3413 6.508671e-04     Gauss-probit     4  2.5239792304  6.359865 #> 344   c06518  3887 4.434225e-04      exponential     3  1.2826794141        NA #> 346   c06548  3976 1.118557e-04           linear     2  0.2267279513        NA #> 354   c06762  4630 1.129124e-03      exponential     3  0.0257922735        NA #> 361   c06881  4900 9.898720e-04      exponential     3  0.0003893310        NA #> 364   c06943  5037 4.856986e-04           linear     2  0.1205146652        NA #> 370   c07072  5328 9.285630e-04      exponential     3  1.7509076084        NA #> 372   c07118  5428 1.069214e-06     Gauss-probit     4  3.2010176397 13.816221 #> 375   c07206  5768 1.331320e-04      exponential     3  0.0115070482        NA #> 389   c07529  7138 7.515694e-04      exponential     3  0.0281112604        NA #> 399   c07859  8092 1.007072e-03     Gauss-probit     4  2.1459634733  7.693951 #> 405   c08131  8701 1.673911e-03           linear     2  0.1826551851        NA #> 408   c08241  8948 1.777483e-04     Gauss-probit     4  4.3060858426 12.750947 #> 419   c08466  9451 1.593456e-04      exponential     3  0.0008887870        NA #> 430   c08762 10368 1.641885e-03      exponential     3  0.0030933767        NA #> 445   c09125 11677 1.569172e-03      exponential     3  0.8284745591        NA #> 458   c09562 12942 4.373374e-03      exponential     3 -0.0021611489        NA #> 460   c09598 13030 2.362131e-03           linear     2 -0.2586441199        NA #> 475   c10057 14495 3.390469e-03      exponential     3  0.0241537891        NA #> 476   c10066 14533 1.347692e-03      exponential     3 -0.9389331704        NA #> 488   c10238 15302 1.228501e-03      exponential     3 -1.7937748737        NA #> 490   c10269 15440 7.296658e-05      exponential     3  1.5924749054        NA #> 492   c10302 15585 4.225116e-03      exponential     3  0.0066174702        NA #> 494   c10311 15626 1.016928e-03 log-Gauss-probit     4  0.7845650593  3.521660 #> 499   c10413 16075 3.498590e-04           linear     2  0.1135548342        NA #> 501   c10499 16461 1.256216e-07     Gauss-probit     4  2.0625479766 11.831280 #> 513   c10934 17597 5.753046e-03      exponential     3  0.0078914200        NA #> 519   c11233 18523 4.606893e-03      exponential     3  0.0193438159        NA #> 534   c11906 20969 9.654346e-04     Gauss-probit     4  2.2924767928 11.794843 #> 540   c12260 22081 8.245828e-06      exponential     3  0.1353700658        NA #> 549   c12576 23487 9.267247e-03 log-Gauss-probit     4  1.0213517059  4.443206 #> 551   c12705 23819 9.933717e-03      exponential     3 -1.7515673870        NA #> 552   c12781 24007 1.047802e-03           linear     2  0.4825734514        NA #> 553   c12927 24362 7.217499e-04           linear     2  0.3109087577        NA #> 554   c13186 25095 5.598806e-03      exponential     3 -0.0003355018        NA #> 567   c13542 26650 7.852988e-04      exponential     3  0.0026006455        NA #> 571   c13596 26891 2.014638e-03     Gauss-probit     4  2.0943452876  2.661827 #> 577   c13825 27530 7.036682e-03     Gauss-probit     4  2.3751722909  6.820887 #> 579   c14005 27954 6.155794e-03           linear     2  0.4216192438        NA #> 586   c14431 29501 2.619248e-03 log-Gauss-probit     4  0.7955319244  5.947486 #> 587   c14431 29501 2.619248e-03 log-Gauss-probit     4  0.7955319244  5.947486 #> 593   c15572 33143 7.075275e-03      exponential     3  0.0464367552        NA #> 597   c15942 34598 4.718990e-05      exponential     3 -0.0445067510        NA #> 604   c16973 37787 2.825599e-04     Gauss-probit     4  8.3191178064 -4.668448 #> 608   c17497 39284 3.028115e-04      exponential     3 -0.0023128307        NA #> 610   c17517 39327 2.461490e-03      exponential     3  0.0005997141        NA #> 611   c17694 39843 2.019227e-05      exponential     3 -1.8263643423        NA #> 614   c17823 40393 6.238172e-04      exponential     3  0.0006779690        NA #> 620   c18315 42046 3.162528e-03      exponential     3  0.0037074842        NA #> 630   c19738 46332 6.573236e-03      exponential     3 -0.0002344367        NA #> 641   c21327 51498 7.255831e-06      exponential     3  1.4896819388        NA #> 645   c21452 51752 7.810285e-07      exponential     3  1.4272338376        NA #>             d          e          f      SDres      typology trend        y0 #> 1    7.343571         NA         NA 0.12454183         L.dec   dec  7.343571 #> 2    5.941896 -1.6479584         NA 0.12604568  E.dec.convex   dec  5.941896 #> 5    7.859109         NA         NA 0.05203245         L.dec   dec  7.859109 #> 6    7.859109         NA         NA 0.05203245         L.dec   dec  7.859109 #> 7    7.859109         NA         NA 0.05203245         L.dec   dec  7.859109 #> 8    6.857909 -0.3213163         NA 0.23376392  E.dec.convex   dec  6.857909 #> 9    6.209286 -0.3230281         NA 0.28968463  E.dec.convex   dec  6.209286 #> 10   7.288883  1.3087220 -0.1436781 0.07085857         lGP.U     U  7.288883 #> 11   6.868523 -0.6254549         NA 0.15031166  E.dec.convex   dec  6.868523 #> 12   7.558481 -0.2649798         NA 0.15353807  E.dec.convex   dec  7.558481 #> 13   6.467466         NA         NA 0.05769085         L.dec   dec  6.467466 #> 14   5.738302         NA         NA 0.11726837         L.dec   dec  5.738302 #> 16   5.330171         NA         NA 0.18706049         L.inc   inc  5.330171 #> 17   5.330171         NA         NA 0.18706049         L.inc   inc  5.330171 #> 18   4.968475  2.0243885         NA 0.14303183  E.inc.convex   inc  4.968475 #> 19   4.968475  2.0243885         NA 0.14303183  E.inc.convex   inc  4.968475 #> 20   4.968475  2.0243885         NA 0.14303183  E.inc.convex   inc  4.968475 #> 22   4.835774  1.4069463  0.2455556 0.10615565       GP.bell  bell  4.867514 #> 23   4.835774  1.4069463  0.2455556 0.10615565       GP.bell  bell  4.867514 #> 25   5.402328  3.3895616         NA 0.06744390 E.dec.concave   dec  5.402328 #> 26   4.917345  3.2236437  0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 27   4.917345  3.2236437  0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 28   4.917345  3.2236437  0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 29   4.917345  3.2236437  0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 30   4.917345  3.2236437  0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 31   5.975143  0.5875851 -0.6980909 0.26535797          GP.U     U  5.328111 #> 32   5.975143  0.5875851 -0.6980909 0.26535797          GP.U     U  5.328111 #> 33   5.975143  0.5875851 -0.6980909 0.26535797          GP.U     U  5.328111 #> 34   5.975143  0.5875851 -0.6980909 0.26535797          GP.U     U  5.328111 #> 35   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 36   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 37   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 39   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 40   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 41   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 42   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 43   5.607846 -1.2203359         NA 0.20417365 E.inc.concave   inc  5.607846 #> 44   4.469882  1.8678530  0.8450245 0.12256991       GP.bell  bell  5.081883 #> 46   7.018764  1.9509846         NA 0.05587260 E.dec.concave   dec  7.018764 #> 47   7.018764  1.9509846         NA 0.05587260 E.dec.concave   dec  7.018764 #> 48   4.491695 -1.7031497         NA 0.18517809 E.inc.concave   inc  4.491695 #> 49   4.491695 -1.7031497         NA 0.18517809 E.inc.concave   inc  4.491695 #> 50   4.491695 -1.7031497         NA 0.18517809 E.inc.concave   inc  4.491695 #> 51   4.491695 -1.7031497         NA 0.18517809 E.inc.concave   inc  4.491695 #> 52   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 53   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 54   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 55   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 56   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 57   5.215709 -1.5647018         NA 0.23592637 E.inc.concave   inc  5.215709 #> 58   5.055577  2.6269663 -0.6208164 0.12476292          GP.U     U  4.707014 #> 59   5.513855         NA         NA 0.11224716         L.dec   dec  5.513855 #> 60   5.513855         NA         NA 0.11224716         L.dec   dec  5.513855 #> 61   4.689787  1.0923496 -0.4146272 0.17573194         lGP.U     U  4.689787 #> 62   4.689787  1.0923496 -0.4146272 0.17573194         lGP.U     U  4.689787 #> 63   4.689787  1.0923496 -0.4146272 0.17573194         lGP.U     U  4.689787 #> 64   4.689787  1.0923496 -0.4146272 0.17573194         lGP.U     U  4.689787 #> 65   4.689787  1.0923496 -0.4146272 0.17573194         lGP.U     U  4.689787 #> 67   6.070523 -1.1113399         NA 0.14811681 E.inc.concave   inc  6.070523 #> 68   6.070523 -1.1113399         NA 0.14811681 E.inc.concave   inc  6.070523 #> 69   6.070523 -1.1113399         NA 0.14811681 E.inc.concave   inc  6.070523 #> 70   6.070523 -1.1113399         NA 0.14811681 E.inc.concave   inc  6.070523 #> 71   6.489151  1.5921459         NA 0.17066885 E.dec.concave   dec  6.489151 #> 72   6.489151  1.5921459         NA 0.17066885 E.dec.concave   dec  6.489151 #> 73   6.489151  1.5921459         NA 0.17066885 E.dec.concave   dec  6.489151 #> 75   4.862842  1.3892912  0.7365937 0.14844069       GP.bell  bell  5.525316 #> 76   4.862842  1.3892912  0.7365937 0.14844069       GP.bell  bell  5.525316 #> 77   4.862842  1.3892912  0.7365937 0.14844069       GP.bell  bell  5.525316 #> 79   5.216540  1.9279453  0.8281597 0.22659347       GP.bell  bell  5.817903 #> 80   5.216540  1.9279453  0.8281597 0.22659347       GP.bell  bell  5.817903 #> 81   5.908317  1.3702809 -0.6148327 0.16888946          GP.U     U  5.436867 #> 82   5.908317  1.3702809 -0.6148327 0.16888946          GP.U     U  5.436867 #> 83   5.908317  1.3702809 -0.6148327 0.16888946          GP.U     U  5.436867 #> 84   5.908317  1.3702809 -0.6148327 0.16888946          GP.U     U  5.436867 #> 86  12.428212 -2.1982296         NA 0.28684892  E.dec.convex   dec 12.428212 #> 87  12.411870 -2.4052289         NA 0.28115971  E.dec.convex   dec 12.411870 #> 103  7.236270 -2.3752014         NA 0.30192346 E.inc.concave   inc  7.236270 #> 116  9.300591  1.9823323         NA 0.31949144 E.dec.concave   dec  9.300591 #> 121 13.082606  5.0536325         NA 0.21425367 E.dec.concave   dec 13.082606 #> 123  3.681397  2.5679456  7.7390108 0.55445078       GP.bell  bell 10.238924 #> 125 10.764018         NA         NA 0.23146795         L.inc   inc 10.764018 #> 131  3.159101  1.7419187  3.3237027 0.41149782       GP.bell  bell  5.859022 #> 134 11.894336  2.4191926 -1.3218368 0.24812481          GP.U     U 11.083641 #> 150  5.662624         NA         NA 0.32569343         L.inc   inc  5.662624 #> 157  8.068158 -1.5870424         NA 0.57855035 E.inc.concave   inc  8.068158 #> 161 11.596818  1.8275480 -0.8682280 0.29736729          GP.U     U 10.992074 #> 169  8.329304         NA         NA 0.31094519         L.inc   inc  8.329304 #> 172  9.111936         NA         NA 0.84138808         L.dec   dec  9.111936 #> 178 10.205586  2.8555099  2.3244195 0.41255116       GP.bell  bell 11.551851 #> 180 13.959092         NA         NA 0.26918435         L.dec   dec 13.959092 #> 181 13.959092         NA         NA 0.26918435         L.dec   dec 13.959092 #> 183  6.736177 -0.6498650         NA 0.38185313 E.inc.concave   inc  6.736177 #> 184  6.408554         NA         NA 0.52767310         L.inc   inc  6.408554 #> 186  8.901037  1.0237053         NA 0.37429011 E.dec.concave   dec  8.901037 #> 188  4.168006  2.3167014  1.3407136 0.64489184      lGP.bell  bell  4.168006 #> 193  3.041593  1.8809478  1.7942520 0.87754767      lGP.bell  bell  3.041593 #> 196 12.278610  1.7372724 -2.0216456 0.53171016         lGP.U     U 12.278610 #> 198 10.350443         NA         NA 0.39026969         L.dec   dec 10.350443 #> 202  9.654095  1.9560222 -2.1370159 1.14939830         lGP.U     U  9.654095 #> 228  7.723356  2.5397977  5.2069816 0.18596550       GP.bell  bell 12.616033 #> 233 -2.630433  0.0000000  3.7693124 0.45467691       GP.bell  bell  3.902563 #> 235 11.849601  1.9585039  0.8349853 0.42763624      lGP.bell  bell 11.849601 #> 238 15.751380  1.2089428         NA 0.43153316 E.dec.concave   dec 15.751380 #> 243 11.908364  2.7394740  1.2475547 0.17108221       GP.bell  bell 12.737821 #> 245  8.309831  1.7832021         NA 0.47444618  E.inc.convex   inc  8.309831 #> 246  8.309831  1.7832021         NA 0.47444618  E.inc.convex   inc  8.309831 #> 252 17.926717         NA         NA 0.19130163         L.inc   inc 17.926717 #> 253 11.552853  1.7586717  0.9857557 0.27811862      lGP.bell  bell 11.552853 #> 256 11.273898 -2.4815554         NA 0.24110024  E.dec.convex   dec 11.273898 #> 266  5.055152 -0.5889109         NA 0.72440497  E.dec.convex   dec  5.055152 #> 275 11.097343  2.0754574         NA 0.27234802  E.inc.convex   inc 11.097343 #> 276  6.963048 -2.0722462         NA 0.44005180  E.dec.convex   dec  6.963048 #> 291  4.628540         NA         NA 0.44374643         L.dec   dec  4.628540 #> 293  9.824353  1.9682607         NA 0.21543421  E.inc.convex   inc  9.824353 #> 301 12.582904         NA         NA 0.28459726         L.inc   inc 12.582904 #> 305 12.978673  0.9062525         NA 0.48389149 E.dec.concave   dec 12.978673 #> 306 12.920552         NA         NA 0.29030980         L.dec   dec 12.920552 #> 312 12.168583  2.0515078  0.7474307 0.31596860      lGP.bell  bell 12.168583 #> 327  4.946831 -0.7537935         NA 0.38646039  E.dec.convex   dec  4.946831 #> 338 10.397791         NA         NA 0.31334720         L.inc   inc 10.397791 #> 341  6.359865  2.1273579 -4.1079331 1.11545022          GP.U     U  3.480083 #> 344 10.429183 -2.6796044         NA 0.37877170  E.dec.convex   dec 10.429183 #> 346  9.672700         NA         NA 0.45436857         L.inc   inc  9.672700 #> 354  5.609934  1.8216559         NA 0.32521096  E.inc.convex   inc  5.609934 #> 361  9.377940  0.8420820         NA 0.38873834  E.inc.convex   inc  9.377940 #> 364 10.014326         NA         NA 0.27962037         L.inc   inc 10.014326 #> 370  6.118400 -2.3714972         NA 0.59801495  E.dec.convex   dec  6.118400 #> 372 13.816221  1.9596785 -3.2185534 0.39523662          GP.U     U 11.147673 #> 375 11.805578  1.3537714         NA 0.50658959  E.inc.convex   inc 11.805578 #> 389  5.114821  1.4084038         NA 1.09855421  E.inc.convex   inc  5.114821 #> 399  7.693951  1.5471002  0.6661478 0.19149575       GP.bell  bell  8.207650 #> 405  4.872178         NA         NA 0.43574679         L.inc   inc  4.872178 #> 408 12.750947  2.2781947 -2.6699053 0.24834756          GP.U     U 10.429737 #> 419  8.322289  0.8805994         NA 0.48194682  E.inc.convex   inc  8.322289 #> 430  7.540803  1.2173378         NA 0.27550558  E.inc.convex   inc  7.540803 #> 445 12.928749 -1.3776799         NA 0.29718879  E.dec.convex   dec 12.928749 #> 458  9.916022  1.0820381         NA 0.43570777 E.dec.concave   dec  9.916022 #> 460  6.195518         NA         NA 0.64907510         L.dec   dec  6.195518 #> 475 12.738419  1.6671166         NA 0.51466168  E.inc.convex   inc 12.738419 #> 476  7.627804 -2.0128076         NA 0.32054437 E.inc.concave   inc  7.627804 #> 488  4.475119 -1.3700499         NA 0.65855748 E.inc.concave   inc  4.475119 #> 490  8.307995 -2.3133165         NA 0.42499412  E.dec.convex   dec  8.307995 #> 492 10.373727  1.3213539         NA 0.46734668  E.inc.convex   inc 10.373727 #> 494  3.521660  1.5925756  1.6525193 0.71149572      lGP.bell  bell  3.521660 #> 499  8.667552         NA         NA 0.23785120         L.inc   inc  8.667552 #> 501 11.831280  2.0127634 -2.1716042 0.35429372          GP.U     U 10.482349 #> 513  2.856807  1.2403251         NA 0.72920067  E.inc.convex   inc  2.856807 #> 519 11.872955  1.6928649         NA 0.36955986  E.inc.convex   inc 11.872955 #> 534 11.794843  1.8803822 -1.7229567 0.53837776          GP.U     U 10.564068 #> 540  4.828430  2.0830008         NA 0.73289707  E.inc.convex   inc  4.828430 #> 549  4.443206  1.5956017 -2.0801672 1.01087060         lGP.U     U  4.443206 #> 551  3.922000 -1.4167347         NA 0.80658748 E.inc.concave   inc  3.922000 #> 552  2.983728         NA         NA 1.23243335         L.inc   inc  2.983728 #> 553  3.293896         NA         NA 0.78506590         L.inc   inc  3.293896 #> 554  4.782034  0.7862608         NA 0.62138156 E.dec.concave   dec  4.782034 #> 567  4.100345  0.9665863         NA 0.83033880  E.inc.convex   inc  4.100345 #> 571  2.661827  1.8081921  1.5558322 0.59126123       GP.bell  bell  3.733593 #> 577  6.820887  2.2045847 -1.9822962 0.65642859          GP.U     U  5.532363 #> 579  2.353068         NA         NA 1.29727813         L.inc   inc  2.353068 #> 586  5.947486  2.1464196 -1.2818324 0.48811443         lGP.U     U  5.947486 #> 587  5.947486  2.1464196 -1.2818324 0.48811443         lGP.U     U  5.947486 #> 593  2.709461  1.8595387         NA 0.73835019  E.inc.convex   inc  2.709461 #> 597  5.266716  1.7742492         NA 0.45397783 E.dec.concave   dec  5.266716 #> 604 -4.668448  2.7306565 14.1086676 0.29870979       GP.bell  bell  8.700290 #> 608  7.176469  1.0238480         NA 0.42350852 E.dec.concave   dec  7.176469 #> 610  2.783684  0.8429907         NA 0.60237813  E.inc.convex   inc  2.783684 #> 611  8.797682 -1.8935670         NA 0.47334309 E.inc.concave   inc  8.797682 #> 614  9.580443  0.9456406         NA 0.19945603  E.inc.convex   inc  9.580443 #> 620  2.604185  1.0531930         NA 0.75747748  E.inc.convex   inc  2.604185 #> 630  8.262534  0.7222172         NA 0.96123411 E.dec.concave   dec  8.262534 #> 641 13.349535 -1.8926198         NA 0.34219661  E.dec.convex   dec 13.349535 #> 645 12.344658 -2.4650317         NA 0.25729560  E.dec.convex   dec 12.344658 #>        yrange maxychange   xextrem   yextrem   BMD.zSD   BMR.zSD BMD.xfold #> 1   0.4346034  0.4346034        NA        NA 2.2237393  7.219029        NA #> 2   0.4556672  0.4556672        NA        NA 0.5279668  5.815850        NA #> 5   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 6   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 7   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 8   0.6010677  0.6010677        NA        NA 0.1582542  6.624146        NA #> 9   0.6721023  0.6721023        NA        NA 0.1821546  5.919602 0.8318574 #> 10  0.1912790  0.1912790 1.4588204  7.097604 0.7315304  7.218025        NA #> 11  0.4520636  0.4520636        NA        NA 0.2528186  6.718211        NA #> 12  0.4392508  0.4392508        NA        NA 0.1139635  7.404943        NA #> 13  0.1503987  0.1503987        NA        NA 2.9766289  6.409775        NA #> 14  0.4491366  0.4491366        NA        NA 2.0261156  5.621033        NA #> 16  0.4771993  0.4771993        NA        NA 3.0418937  5.517232        NA #> 17  0.4771993  0.4771993        NA        NA 3.0418937  5.517232        NA #> 18  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 19  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 20  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 22  0.2455556  0.2138158 1.4069463  5.081330 0.6597819  4.973670        NA #> 23  0.2455556  0.2138158 1.4069463  5.081330 0.6597819  4.973670        NA #> 25  0.2833937  0.2833937        NA        NA 3.8465968  5.334884        NA #> 26  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 27  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 28  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 29  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 30  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 31  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 32  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 33  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 34  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 35  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 36  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 37  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 39  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 40  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 41  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 42  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 43  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 44  0.8109383  0.5779147 1.8678530  5.314907 0.6370853  5.204453 6.6295891 #> 46  0.2284144  0.2284144        NA        NA 5.1225625  6.962891        NA #> 47  0.2284144  0.2284144        NA        NA 5.1225625  6.962891        NA #> 48  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 49  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 50  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 51  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 52  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 53  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 54  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 55  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 56  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 57  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 58  0.5522909  0.2800374 2.6269663  4.434761 0.8261462  4.582251        NA #> 59  0.3939227  0.3939227        NA        NA 2.2111898  5.401608        NA #> 60  0.3939227  0.3939227        NA        NA 2.2111898  5.401608        NA #> 61  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 62  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 63  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 64  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 65  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 67  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 68  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 69  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 70  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 71  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 72  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 73  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 75  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 76  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 77  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 79  0.7838623  0.5570660 1.9279453  6.044699 1.8746151  6.044497        NA #> 80  0.7838623  0.5570660 1.9279453  6.044699 1.8746151  6.044497        NA #> 81  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 82  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 83  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 84  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 86  1.4260064  1.4260064        NA        NA 0.4667565 12.141363 3.8804658 #> 87  1.3187707  1.3187707        NA        NA 0.5356979 12.130711 5.1282913 #> 103 0.7254029  0.7254029        NA        NA 1.1767628  7.538193 6.5436013 #> 116 0.6953599  0.6953599        NA        NA 5.1699097  8.981100        NA #> 121 1.2471032  1.2471032        NA        NA 1.9341638 12.868353        NA #> 123 2.6271853  1.4457016 2.5679456 11.420407 0.7339797 10.793374 1.6629870 #> 125 0.5298971  0.5298971        NA        NA 2.8965322 10.995486        NA #> 131 2.6773137  2.0535315 1.7419187  6.482804 0.7603447  6.270519 1.3328628 #> 134 1.0214920  0.5111417 2.4191926 10.572500 0.7894809 10.835516        NA #> 150 1.0445220  1.0445220        NA        NA 2.0676187  5.988317 3.5948366 #> 157 1.6606248  1.6606248        NA        NA 0.6668007  8.646709 1.0329475 #> 161 0.7968439  0.5333591 1.8275480 10.728590 4.9242758 11.289442        NA #> 169 1.4213819  1.4213819        NA        NA 1.4506148  8.640249 3.8857687 #> 172 2.4354311  2.4354311        NA        NA 2.2908652  8.270548 2.4809261 #> 178 1.4297124  0.9781543 2.8555099 12.530005 0.8151722 11.964402        NA #> 180 0.7551267  0.7551267        NA        NA 2.3637907 13.689907        NA #> 181 0.7551267  0.7551267        NA        NA 2.3637907 13.689907        NA #> 183 1.2492267  1.2492267        NA        NA 0.2370668  7.118030 0.5035207 #> 184 1.3030102  1.3030102        NA        NA 2.6853208  6.936227 3.2613039 #> 186 0.9204590  0.9204590        NA        NA 5.7121222  8.526747 6.5967242 #> 188 1.3407136  1.3407136 2.3167014  5.508719 1.1232833  4.812898 0.9282272 #> 193 1.7942520  1.7942520 1.8809478  4.835845 0.8218053  3.919141 0.5103535 #> 196 2.0216456  2.0216456 1.7372724 10.256965 0.6687799 11.746900 0.9695193 #> 198 0.8961317  0.8961317        NA        NA 2.8878327  9.960173        NA #> 202 2.1370159  2.1370159 1.9560222  7.517079 0.9072409  8.504697 0.8197933 #> 228 0.7767741  0.4624698 2.5397977 12.930338 0.9318105 12.801999        NA #> 233 0.9872534  0.6272225 2.2864089  4.529785 1.0599593  4.357240 0.8573274 #> 235 0.8349853  0.8349853 1.9585039 12.684587 0.8218319 12.277238        NA #> 238 1.5763081  1.5763081        NA        NA 5.0780515 15.319847 6.6301060 #> 243 0.7000964  0.4180970 2.7394740 13.155918 0.7253125 12.908904        NA #> 245 0.9360331  0.9360331        NA        NA 5.4609223  8.784277 6.4241875 #> 246 0.9360331  0.9360331        NA        NA 5.4609223  8.784277 6.4241875 #> 252 0.6196609  0.6196609        NA        NA 2.0471215 18.118018        NA #> 253 0.9857557  0.9857557 1.7586717 12.538608 0.5508093 11.830971        NA #> 256 0.7471482  0.7471482        NA        NA 0.8865055 11.032798        NA #> 266 1.7011398  1.7011398        NA        NA 0.3267449  4.330747 0.2076643 #> 275 1.0315095  1.0315095        NA        NA 4.0915465 11.369691        NA #> 276 1.5599561  1.5599561        NA        NA 0.6538412  6.522996 1.1581900 #> 291 1.0796687  1.0796687        NA        NA 2.7253570  4.184793 2.8427097 #> 293 0.5863849  0.5863849        NA        NA 4.7734831 10.039788        NA #> 301 0.7755726  0.7755726        NA        NA 2.4332531 12.867502        NA #> 305 1.3091568  1.3091568        NA        NA 5.7300529 12.494781 6.6231563 #> 306 0.8942070  0.8942070        NA        NA 2.1527950 12.630242        NA #> 312 0.7474307  0.7474307 2.0515078 12.916014 0.7635263 12.484552        NA #> 327 0.9864697  0.9864697        NA        NA 0.3747033  4.560371 0.5245918 #> 338 0.9549307  0.9549307        NA        NA 2.1758702 10.711139        NA #> 341 3.2718424  2.0436913 2.1273579  2.251932 1.5320368  2.364633 0.3746104 #> 344 1.1746841  1.1746841        NA        NA 0.9378058 10.050411 4.4938667 #> 346 1.5034330  1.5034330        NA        NA 2.0040254 10.127068 4.2662140 #> 354 0.9567759  0.9567759        NA        NA 4.7558343  5.935145 5.6919180 #> 361 1.0233370  1.0233370        NA        NA 5.8164566  9.766679 6.5575207 #> 364 0.7991327  0.7991327        NA        NA 2.3202186 10.293947        NA #> 370 1.6440213  1.6440213        NA        NA 0.9909542  5.520385 1.0195641 #> 372 2.1088211  1.5588160 1.9596785 10.597668 0.9547622 10.752436 5.8228192 #> 375 1.5309438  1.5309438        NA        NA 5.1540813 12.312167 6.2821526 #> 389 3.0879871  3.0879871        NA        NA 5.1982036  6.213375 4.1613342 #> 399 0.6258898  0.4734413 1.5471002  8.360099 4.1335653  8.016154        NA #> 405 1.2111865  1.2111865        NA        NA 2.3856251  5.307925 2.6674183 #> 408 1.0680948  0.7193997 2.2781947 10.081042 1.0862987 10.181390        NA #> 419 1.6551785  1.6551785        NA        NA 5.5456395  8.804236 6.0260053 #> 430 0.7148534  0.7148534        NA        NA 5.4786411  7.816309        NA #> 445 0.8217456  0.8217456        NA        NA 0.6120840 12.631560        NA #> 458 0.9890126  0.9890126        NA        NA 5.7470070  9.480314        NA #> 460 1.7150692  1.7150692        NA        NA 2.5095297  5.546443 2.3953832 #> 475 1.2652916  1.2652916        NA        NA 5.1762835 13.253081        NA #> 476 0.9041080  0.9041080        NA        NA 0.8406026  7.948348 3.3682176 #> 488 1.7795910  1.7795910        NA        NA 0.6267952  5.133676 0.3931901 #> 490 1.5018619  1.5018619        NA        NA 0.7181485  7.883001 1.7061269 #> 492 0.9936782  0.9936782        NA        NA 5.6440554 10.841074        NA #> 494 1.6525193  1.6525193 1.5925756  5.174180 0.5751369  4.233156 0.4008074 #> 499 0.7529821  0.7529821        NA        NA 2.0945933  8.905403        NA #> 501 1.9945506  1.1718772 2.0127634  9.659675 0.5750563 10.128055 6.1142017 #> 513 1.6477686  1.6477686        NA        NA 5.6272766  3.586008 4.4854464 #> 519 0.9527003  0.9527003        NA        NA 5.0802181 12.242515        NA #> 534 1.5216846  1.0295037 1.8803822 10.071887 4.9758852 11.102445        NA #> 540 3.1308885  3.1308885        NA        NA 3.8712302  5.561327 3.1637050 #> 549 2.0801672  2.0801672 1.5956017  2.363039 0.4677758  3.432336 0.2651867 #> 551 1.7353224  1.7353224        NA        NA 0.8742707  4.728587 0.3591303 #> 552 3.1999446  3.1999446        NA        NA 2.5538772  4.216161 0.6182950 #> 553 2.0616360  2.0616360        NA        NA 2.5250685  4.078962 1.0594414 #> 554 1.5426292  1.5426292        NA        NA 5.9163079  4.160652 5.7105061 #> 567 2.4773277  2.4773277        NA        NA 5.5764311  4.930684 4.8975036 #> 571 1.4460633  0.9619972 1.8081921  4.217660 5.0186649  3.142332 1.0034930 #> 577 1.6331559  0.9393843 2.2045847  4.838591 1.7413609  4.875934 1.2937236 #> 579 2.7957572  2.7957572        NA        NA 3.0768950  3.650346 0.5581026 #> 586 1.2818324  1.2818324 2.1464196  4.665653 0.7105856  5.459371 0.8008469 #> 587 1.2818324  1.2818324 2.1464196  4.665653 0.7105856  5.459371 0.8008469 #> 593 1.5961529  1.5961529        NA        NA 5.2575129  3.447811 3.5740658 #> 597 1.8241896  1.8241896        NA        NA 4.2864651  4.812738 4.5279917 #> 604 1.4684527  0.7399295 2.7306565  9.440219 0.6335929  8.998999        NA #> 608 1.5003885  1.5003885        NA        NA 5.3399279  6.752960 5.8776276 #> 610 1.5629901  1.5629901        NA        NA 5.8277486  3.386062 5.1779858 #> 611 1.7713152  1.7713152        NA        NA 0.5680459  9.271025 1.2444712 #> 614 0.7519149  0.7519149        NA        NA 5.3784638  9.779899        NA #> 620 2.0074095  2.0074095        NA        NA 5.6077502  3.361662 4.4929978 #> 630 2.2773688  2.2773688        NA        NA 6.0081475  7.301299 5.8988929 #> 641 1.4448595  1.4448595        NA        NA 0.4939544 13.007338 4.2861144 #> 645 1.3303544  1.3303544        NA        NA 0.4900168 12.087363 4.9350083 #>     BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper #> 1    6.609214    0.97850954     4.0686985             Inf             Inf #> 2    5.347706    0.20008806     1.1095586             Inf             Inf #> 5    7.073198    0.75185882     1.4649978             Inf             Inf #> 6    7.073198    0.75185882     1.4649978             Inf             Inf #> 7    7.073198    0.75185882     1.4649978             Inf             Inf #> 8    6.172119    0.05543773     0.6804425      0.56115437             Inf #> 9    5.588358    0.08095270     0.7936032      0.32929317             Inf #> 10   8.017772    0.42468408     1.0520363             Inf             Inf #> 11   6.181671    0.07579775     0.7005182             Inf             Inf #> 12   6.802633    0.03694799     0.4209217             Inf             Inf #> 13   5.820719    1.67433198     5.3037292             Inf             Inf #> 14   5.164472    1.25236329     2.8522870      7.56375893             Inf #> 16   5.863188    1.32631865     6.0595553      5.92523484             Inf #> 17   5.863188    1.32631865     6.0595553      5.92523484             Inf #> 18   5.465323    2.76071129     7.1933590      7.67906625             Inf #> 19   5.465323    2.76071129     7.1933590      7.67906625             Inf #> 20   5.465323    2.76071129     7.1933590      7.67906625             Inf #> 22   4.380763    0.36442365     2.2863213             Inf             Inf #> 23   4.380763    0.36442365     2.2863213             Inf             Inf #> 25   4.862095    1.87728956     5.7928776             Inf             Inf #> 26   4.425610    0.63687870     2.6421628      1.60732079             Inf #> 27   4.425610    0.63687870     2.6421628      1.60732079             Inf #> 28   4.425610    0.63687870     2.6421628      1.60732079             Inf #> 29   4.425610    0.63687870     2.6421628      1.60732079             Inf #> 30   4.425610    0.63687870     2.6421628      1.60732079             Inf #> 31   5.860923    0.37773418     3.4329037      2.12091124             Inf #> 32   5.860923    0.37773418     3.4329037      2.12091124             Inf #> 33   5.860923    0.37773418     3.4329037      2.12091124             Inf #> 34   5.860923    0.37773418     3.4329037      2.12091124             Inf #> 35   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 36   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 37   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 39   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 40   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 41   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 42   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 43   6.168631    0.24887531     4.0820798      2.79173759             Inf #> 44   4.573695    0.32686514     3.1332891      5.73891269             Inf #> 46   6.316887    2.43380228     6.3223929             Inf             Inf #> 47   6.316887    2.43380228     6.3223929             Inf             Inf #> 48   4.940865    0.35799216     4.2882933      2.32048362             Inf #> 49   4.940865    0.35799216     4.2882933      2.32048362             Inf #> 50   4.940865    0.35799216     4.2882933      2.32048362             Inf #> 51   4.940865    0.35799216     4.2882933      2.32048362             Inf #> 52   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 53   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 54   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 55   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 56   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 57   5.737279    0.30086446     3.1833272      1.30741047             Inf #> 58   5.177716    0.46124416     1.4873687             Inf             Inf #> 59   4.962470    1.03576992     3.6179409             Inf             Inf #> 60   4.962470    1.03576992     3.6179409             Inf             Inf #> 61   5.158766    0.48406738     1.2370211      0.80809797             Inf #> 62   5.158766    0.48406738     1.2370211      0.80809797             Inf #> 63   5.158766    0.48406738     1.2370211      0.80809797             Inf #> 64   5.158766    0.48406738     1.2370211      0.80809797             Inf #> 65   5.158766    0.48406738     1.2370211      0.80809797             Inf #> 67   6.677576    0.26644454     4.2871164             Inf             Inf #> 68   6.677576    0.26644454     4.2871164             Inf             Inf #> 69   6.677576    0.26644454     4.2871164             Inf             Inf #> 70   6.677576    0.26644454     4.2871164             Inf             Inf #> 71   5.840236    3.09334793     6.6162300      7.32335336             Inf #> 72   5.840236    3.09334793     6.6162300      7.32335336             Inf #> 73   5.840236    3.09334793     6.6162300      7.32335336             Inf #> 75   4.972785    0.63064808     4.7996149      5.94571062             Inf #> 76   4.972785    0.63064808     4.7996149      5.94571062             Inf #> 77   4.972785    0.63064808     4.7996149      5.94571062             Inf #> 79   5.236113    0.52106128     5.9739107      5.91975161             Inf #> 80   5.236113    0.52106128     5.9739107      5.91975161             Inf #> 81   5.980553    0.42901273     4.3080978      5.24829289             Inf #> 82   5.980553    0.42901273     4.3080978      5.24829289             Inf #> 83   5.980553    0.42901273     4.3080978      5.24829289             Inf #> 84   5.980553    0.42901273     4.3080978      5.24829289             Inf #> 86  11.185391    0.24296501     0.8254193      2.32365503             Inf #> 87  11.170683    0.28244583     0.9252443      2.78927718             Inf #> 103  7.959897    0.46760570     2.8942164      1.94401632             Inf #> 116  8.370532    2.62074447     6.1892385      6.39907958             Inf #> 121 11.774346    1.07799896     3.2324908      6.13410907             Inf #> 123 11.262816    0.39650460     1.0210325      0.93588481       6.2063487 #> 125 11.840420    1.64980574     4.7578654             Inf             Inf #> 131  6.444924    0.37828212     3.9147635      0.64172080       4.6921648 #> 134 12.192005    0.45119793     1.3369379             Inf             Inf #> 150  6.228886    1.30775683     3.0619063      2.63321348       5.1889529 #> 157  8.874974    0.27525816     1.6705374      0.44800424       2.7783783 #> 161 12.091282    0.60384236     5.6978525             Inf             Inf #> 169  9.162234    0.96799087     1.9783744      3.14745914       5.1690481 #> 172  8.200742    1.50525257     3.4011695      1.95515289       3.7737373 #> 178 10.396666    0.53046359     1.1464625      1.68379792             Inf #> 180 12.563182    1.54875481     3.5028687             Inf             Inf #> 181 12.563182    1.54875481     3.5028687             Inf             Inf #> 183  7.409795    0.08183997     0.5980861      0.19125061       1.6257035 #> 184  7.049409    1.75885065     4.3783442      2.22896204       5.6185328 #> 186  8.010933    2.93461899     6.0719877      5.69970451             Inf #> 188  4.584806    0.50278548     1.8172104      0.39883826       1.5901895 #> 193  3.345752    0.35654678     1.4592305      0.16656157       1.1565046 #> 196 11.050749    0.43301683     0.8971572      0.74039512       1.2380754 #> 198  9.315398    1.73688931     5.1197523      5.38884008             Inf #> 202  8.688686    0.35183367     1.7316828      0.36262819       1.4953577 #> 228 11.354430    0.48380870     1.5400128             Inf             Inf #> 233  4.292819    0.40044672     6.5720202      0.37251622       5.9756156 #> 235 10.664641    0.31820753     1.5828158      1.30158571             Inf #> 238 14.176242    2.74132244     5.6217506      6.05963970             Inf #> 243 11.464039    0.45259236     0.9852054             Inf             Inf #> 245  9.140814    2.60802191     6.3443547      4.77393169             Inf #> 246  9.140814    2.60802191     6.3443547      4.77393169             Inf #> 252 19.719388    1.32526215     3.0171899             Inf             Inf #> 253 10.397567    0.27487668     0.8684603      1.20202041             Inf #> 256 10.146508    0.34554032     1.8031346             Inf             Inf #> 266  4.549637    0.11229115     1.1562790      0.08920198       0.6082146 #> 275 12.207078    2.02820057     5.2593819      6.17057748             Inf #> 276  6.266743    0.27957255     1.4053942      0.62385724       2.4264491 #> 291  4.165686    1.61304816     4.7440724      2.05493380       4.8155223 #> 293 10.806789    2.28426943     5.7598313             Inf             Inf #> 301 13.841195    1.57349911     3.9836203             Inf             Inf #> 305 11.680806    2.74748436     5.9480926      5.95909053             Inf #> 306 11.628496    1.31584676     3.3142276             Inf             Inf #> 312 10.951725    0.32210163     1.4464539             Inf             Inf #> 327  4.452148    0.11967646     1.0401929      0.19534852       1.6577848 #> 338 11.437571    1.50483906     3.0487558      5.43599051             Inf #> 341  3.132075    0.55429742     5.7718558      0.24775913       0.9522847 #> 344  9.386265    0.41050756     2.0533236      2.06051125             Inf #> 346 10.639970    1.12797148     3.0911075      3.10061531       6.0301429 #> 354  6.170927    2.27138538     5.7358531      3.72920786       6.3344473 #> 361 10.315734    2.77164549     6.0800988      5.52360080             Inf #> 364 11.015759    1.35631407     3.9482498      6.11649532             Inf #> 370  5.506560    0.38959091     2.2272543      0.50373257       2.2560210 #> 372 12.262440    0.43168938     4.3245839      5.06418512             Inf #> 375 12.986136    2.72596759     5.7854763      5.14744071             Inf #> 389  5.626303    2.38471036     5.6950050      1.25212089       5.0100759 #> 399  7.386885    0.58678810     4.9024458             Inf             Inf #> 405  5.359396    1.48802589     3.7982782      1.85410611       4.4410965 #> 408 11.472711    0.49209232     4.7797975             Inf             Inf #> 419  9.154518    3.01643160     5.7582422      4.45466791       6.2076045 #> 430  8.294884    3.11003882     5.9115909      5.95974847             Inf #> 445 11.635874    0.24885181     1.7730190             Inf             Inf #> 458  8.924420    2.95397705     6.1224920      5.86209386             Inf #> 460  5.575966    1.51555559     4.1284671      1.76309457       3.8398589 #> 475 14.012261    2.57284026     6.0635216      5.59601377             Inf #> 476  8.390585    0.35181993     1.9120592      1.37283122             Inf #> 488  4.922630    0.20461711     1.6845815      0.13994566       1.2568975 #> 490  7.477196    0.32356830     1.4338426      0.97175675       3.0973018 #> 492 11.411100    2.93033518     6.1810802      5.55823991             Inf #> 494  3.873826    0.18220941     1.0969609      0.09169953       0.8486895 #> 499  9.534307    1.36558810     3.0277098      5.76250310             Inf #> 501 11.530584    0.33731937     0.9197975      1.50805897             Inf #> 513  3.142488    2.82669704     6.1106136      1.28010249       5.2509376 #> 519 13.060251    2.75999567     5.7929246      6.33809779             Inf #> 534 11.620474    0.57587075     5.6502320      1.73266615             Inf #> 540  5.311273    2.09802632     5.1109137      1.45839343       4.7290176 #> 549  3.998886    0.05399315     1.2442471      0.01432065       0.6768693 #> 551  4.314200    0.27996824     2.9680621      0.12373376       1.4896918 #> 552  3.282101    1.41586955     4.2784519      0.34784795       1.0906435 #> 553  3.623286    1.47301680     4.2390445      0.68741986       1.8230891 #> 554  4.303831    3.07905725     6.0763029      2.72472787       5.8528389 #> 567  4.510380    3.04662568     5.8599969      1.79850499       5.3875293 #> 571  4.106953    0.64467381     5.9696696      0.44860443       4.9243516 #> 577  4.979126    0.65520412     6.2161646      0.68872614       5.5777863 #> 579  2.588375    1.71979781     5.8334366      0.29269724       1.3384842 #> 586  5.352737    0.31331655     1.2981207      0.45448294       1.4204213 #> 587  5.352737    0.31331655     1.2981207      0.45448294       1.4204213 #> 593  2.980407    2.37205969     6.2112758      1.06163514       5.0651393 #> 597  4.740045    2.16859102     5.3652514      2.72959715       5.5368126 #> 604  7.830261    0.38533255     0.8633687      1.66508242             Inf #> 608  6.458822    2.75629900     5.7006541      4.24574070       6.1784483 #> 610  3.062052    3.04378438     6.0023852      1.53742008       5.4386620 #> 611  9.677450    0.25304437     1.2327338      0.63096978       2.7434432 #> 614 10.538488    3.21741886     5.6953260      6.60129169             Inf #> 620  2.864603    2.80741209     6.0552893      1.04401193       5.0611838 #> 630  7.436280    2.99251277     6.0940883      2.95949542       5.9721761 #> 641 12.014582    0.23273791     0.8898776      2.22713522             Inf #> 645 11.110192    0.27124408     0.8292255      2.91506706             Inf #>     nboot.successful                                  path_class #> 1               1000                            Lipid metabolism #> 2                957                            Lipid metabolism #> 5               1000 Biosynthesis of other secondary metabolites #> 6               1000                          Membrane transport #> 7               1000                         Signal transduction #> 8                648                            Lipid metabolism #> 9                620                            Lipid metabolism #> 10               872                            Lipid metabolism #> 11               909                            Lipid metabolism #> 12               565                            Lipid metabolism #> 13              1000                            Lipid metabolism #> 14              1000                            Lipid metabolism #> 16              1000                          Membrane transport #> 17              1000                         Signal transduction #> 18               718                       Amino acid metabolism #> 19               718 Biosynthesis of other secondary metabolites #> 20               718                                 Translation #> 22               975                          Membrane transport #> 23               975                         Signal transduction #> 25               938                          Membrane transport #> 26               962                       Amino acid metabolism #> 27               962             Metabolism of other amino acids #> 28               962 Biosynthesis of other secondary metabolites #> 29               962                                 Translation #> 30               962                          Membrane transport #> 31               979                       Amino acid metabolism #> 32               979 Biosynthesis of other secondary metabolites #> 33               979                                 Translation #> 34               979                          Membrane transport #> 35               851                       Amino acid metabolism #> 36               851             Metabolism of other amino acids #> 37               851                            Lipid metabolism #> 39               851                           Energy metabolism #> 40               851                                 Translation #> 41               851 Biosynthesis of other secondary metabolites #> 42               851                          Membrane transport #> 43               851                         Signal transduction #> 44              1000                       Amino acid metabolism #> 46               859                           Energy metabolism #> 47               859                         Signal transduction #> 48               833                       Amino acid metabolism #> 49               833             Metabolism of other amino acids #> 50               833 Biosynthesis of other secondary metabolites #> 51               833                          Membrane transport #> 52               890                       Amino acid metabolism #> 53               890             Metabolism of other amino acids #> 54               890                           Energy metabolism #> 55               890                                 Translation #> 56               890                          Membrane transport #> 57               890                         Signal transduction #> 58               940                       Amino acid metabolism #> 59              1000                            Lipid metabolism #> 60              1000                       Amino acid metabolism #> 61               635                       Amino acid metabolism #> 62               635             Metabolism of other amino acids #> 63               635 Biosynthesis of other secondary metabolites #> 64               635                                 Translation #> 65               635                          Membrane transport #> 67               820                       Amino acid metabolism #> 68               820             Metabolism of other amino acids #> 69               820 Biosynthesis of other secondary metabolites #> 70               820                          Membrane transport #> 71               722                           Energy metabolism #> 72               722                          Membrane transport #> 73               722                         Signal transduction #> 75               953                       Amino acid metabolism #> 76               953                            Lipid metabolism #> 77               953                           Energy metabolism #> 79               962                       Amino acid metabolism #> 80               962                         Signal transduction #> 81               998                       Amino acid metabolism #> 82               998             Metabolism of other amino acids #> 83               998                                 Translation #> 84               998                          Membrane transport #> 86               497                       Nucleotide metabolism #> 87               495                       Nucleotide metabolism #> 103              443             Metabolism of other amino acids #> 116              353                       Nucleotide metabolism #> 121              483                       Nucleotide metabolism #> 123              304                          Membrane transport #> 125              500                       Nucleotide metabolism #> 131              483             Metabolism of other amino acids #> 134              405             Metabolism of other amino acids #> 150              500             Metabolism of other amino acids #> 157              487                          Membrane transport #> 161              439    Metabolism of terpenoids and polyketides #> 169              500                       Nucleotide metabolism #> 172              500             Metabolism of other amino acids #> 178              336                       Nucleotide metabolism #> 180              500             Metabolism of other amino acids #> 181              500                       Nucleotide metabolism #> 183              478                       Nucleotide metabolism #> 184              500             Metabolism of other amino acids #> 186              295                       Nucleotide metabolism #> 188              482    Metabolism of terpenoids and polyketides #> 193              483                          Membrane transport #> 196              498                    Transport and catabolism #> 198              500    Metabolism of terpenoids and polyketides #> 202              476             Metabolism of other amino acids #> 228              261                       Nucleotide metabolism #> 233              415             Metabolism of other amino acids #> 235              480                       Nucleotide metabolism #> 238              336             Metabolism of other amino acids #> 243              333                    Transport and catabolism #> 245              315                       Nucleotide metabolism #> 246              315             Metabolism of other amino acids #> 252              500    Metabolism of terpenoids and polyketides #> 253              499                       Nucleotide metabolism #> 256              479                          Membrane transport #> 266              446    Metabolism of terpenoids and polyketides #> 275              454    Metabolism of terpenoids and polyketides #> 276              491    Metabolism of terpenoids and polyketides #> 291              500    Metabolism of terpenoids and polyketides #> 293              377    Metabolism of terpenoids and polyketides #> 301              500             Metabolism of other amino acids #> 305              275    Metabolism of terpenoids and polyketides #> 306              500             Metabolism of other amino acids #> 312              491                    Transport and catabolism #> 327              474                       Nucleotide metabolism #> 338              500    Metabolism of terpenoids and polyketides #> 341              403                    Transport and catabolism #> 344              469                       Nucleotide metabolism #> 346              500             Metabolism of other amino acids #> 354              385                       Nucleotide metabolism #> 361              291                       Nucleotide metabolism #> 364              500                       Nucleotide metabolism #> 370              465                    Transport and catabolism #> 372              406             Metabolism of other amino acids #> 375              330                    Transport and catabolism #> 389              345             Metabolism of other amino acids #> 399              466                    Transport and catabolism #> 405              500    Metabolism of terpenoids and polyketides #> 408              303             Metabolism of other amino acids #> 419              266                    Transport and catabolism #> 430              317                          Membrane transport #> 445              485             Metabolism of other amino acids #> 458              282                    Transport and catabolism #> 460              500                          Membrane transport #> 475              366                    Transport and catabolism #> 476              473             Metabolism of other amino acids #> 488              484             Metabolism of other amino acids #> 490              490                          Membrane transport #> 492              306                    Transport and catabolism #> 494              492                          Membrane transport #> 499              500             Metabolism of other amino acids #> 501              499             Metabolism of other amino acids #> 513              309                          Membrane transport #> 519              360                          Membrane transport #> 534              434             Metabolism of other amino acids #> 540              461             Metabolism of other amino acids #> 549              483    Metabolism of terpenoids and polyketides #> 551              464                          Membrane transport #> 552              500                    Transport and catabolism #> 553              500    Metabolism of terpenoids and polyketides #> 554              266                       Nucleotide metabolism #> 567              268                    Transport and catabolism #> 571              448                       Nucleotide metabolism #> 577              371                       Nucleotide metabolism #> 579              500                          Membrane transport #> 586              493                    Transport and catabolism #> 587              493                          Membrane transport #> 593              343             Metabolism of other amino acids #> 597              440                       Nucleotide metabolism #> 604              250                       Nucleotide metabolism #> 608              301                       Nucleotide metabolism #> 610              280                       Nucleotide metabolism #> 611              494    Metabolism of terpenoids and polyketides #> 614              283             Metabolism of other amino acids #> 620              312                       Nucleotide metabolism #> 630              264                       Nucleotide metabolism #> 641              496                       Nucleotide metabolism #> 645              497                       Nucleotide metabolism #>     molecular.level #> 1       metabolites #> 2       metabolites #> 5       metabolites #> 6       metabolites #> 7       metabolites #> 8       metabolites #> 9       metabolites #> 10      metabolites #> 11      metabolites #> 12      metabolites #> 13      metabolites #> 14      metabolites #> 16      metabolites #> 17      metabolites #> 18      metabolites #> 19      metabolites #> 20      metabolites #> 22      metabolites #> 23      metabolites #> 25      metabolites #> 26      metabolites #> 27      metabolites #> 28      metabolites #> 29      metabolites #> 30      metabolites #> 31      metabolites #> 32      metabolites #> 33      metabolites #> 34      metabolites #> 35      metabolites #> 36      metabolites #> 37      metabolites #> 39      metabolites #> 40      metabolites #> 41      metabolites #> 42      metabolites #> 43      metabolites #> 44      metabolites #> 46      metabolites #> 47      metabolites #> 48      metabolites #> 49      metabolites #> 50      metabolites #> 51      metabolites #> 52      metabolites #> 53      metabolites #> 54      metabolites #> 55      metabolites #> 56      metabolites #> 57      metabolites #> 58      metabolites #> 59      metabolites #> 60      metabolites #> 61      metabolites #> 62      metabolites #> 63      metabolites #> 64      metabolites #> 65      metabolites #> 67      metabolites #> 68      metabolites #> 69      metabolites #> 70      metabolites #> 71      metabolites #> 72      metabolites #> 73      metabolites #> 75      metabolites #> 76      metabolites #> 77      metabolites #> 79      metabolites #> 80      metabolites #> 81      metabolites #> 82      metabolites #> 83      metabolites #> 84      metabolites #> 86          contigs #> 87          contigs #> 103         contigs #> 116         contigs #> 121         contigs #> 123         contigs #> 125         contigs #> 131         contigs #> 134         contigs #> 150         contigs #> 157         contigs #> 161         contigs #> 169         contigs #> 172         contigs #> 178         contigs #> 180         contigs #> 181         contigs #> 183         contigs #> 184         contigs #> 186         contigs #> 188         contigs #> 193         contigs #> 196         contigs #> 198         contigs #> 202         contigs #> 228         contigs #> 233         contigs #> 235         contigs #> 238         contigs #> 243         contigs #> 245         contigs #> 246         contigs #> 252         contigs #> 253         contigs #> 256         contigs #> 266         contigs #> 275         contigs #> 276         contigs #> 291         contigs #> 293         contigs #> 301         contigs #> 305         contigs #> 306         contigs #> 312         contigs #> 327         contigs #> 338         contigs #> 341         contigs #> 344         contigs #> 346         contigs #> 354         contigs #> 361         contigs #> 364         contigs #> 370         contigs #> 372         contigs #> 375         contigs #> 389         contigs #> 399         contigs #> 405         contigs #> 408         contigs #> 419         contigs #> 430         contigs #> 445         contigs #> 458         contigs #> 460         contigs #> 475         contigs #> 476         contigs #> 488         contigs #> 490         contigs #> 492         contigs #> 494         contigs #> 499         contigs #> 501         contigs #> 513         contigs #> 519         contigs #> 534         contigs #> 540         contigs #> 549         contigs #> 551         contigs #> 552         contigs #> 553         contigs #> 554         contigs #> 567         contigs #> 571         contigs #> 577         contigs #> 579         contigs #> 586         contigs #> 587         contigs #> 593         contigs #> 597         contigs #> 604         contigs #> 608         contigs #> 610         contigs #> 611         contigs #> 614         contigs #> 620         contigs #> 630         contigs #> 641         contigs #> 645         contigs extendedres.3 #>           id  irow    adjpvalue            model nbpar             b          c #> 1   NAP47_51    46 7.158246e-04           linear     2 -5.600559e-02         NA #> 2      NAP_2     2 6.232579e-05      exponential     3  4.598124e-01         NA #> 5     NAP_30    28 1.028343e-05           linear     2 -4.507832e-02         NA #> 6     NAP_30    28 1.028343e-05           linear     2 -4.507832e-02         NA #> 7     NAP_30    28 1.028343e-05           linear     2 -4.507832e-02         NA #> 8     NAP_38    34 1.885047e-03      exponential     3  6.010677e-01         NA #> 9     NAP_42    38 4.160193e-03      exponential     3  6.721023e-01         NA #> 10    NAP_52    47 3.920169e-02 log-Gauss-probit     5  4.500859e-01  7.2020026 #> 11    NAP_54    49 3.767103e-04      exponential     3  4.520654e-01         NA #> 12    NAP_56    51 1.489919e-03      exponential     3  4.392508e-01         NA #> 13    NAP_58    53 2.834198e-02           linear     2 -1.938127e-02         NA #> 14    NAP_73    67 3.767103e-04           linear     2 -5.787842e-02         NA #> 16    NP_121   197 9.889460e-03           linear     2  6.149475e-02         NA #> 17    NP_121   197 9.889460e-03           linear     2  6.149475e-02         NA #> 18    NP_129   204 7.286216e-03      exponential     3  7.786029e-03         NA #> 19    NP_129   204 7.286216e-03      exponential     3  7.786029e-03         NA #> 20    NP_129   204 7.286216e-03      exponential     3  7.786029e-03         NA #> 22    NP_140   214 8.550044e-03     Gauss-probit     4  6.955281e-01  4.8357744 #> 23    NP_140   214 8.550044e-03     Gauss-probit     4  6.955281e-01  4.8357744 #> 25    NP_147   221 1.061967e-03      exponential     3 -3.195388e-02         NA #> 26     NP_33   113 5.599308e-02 log-Gauss-probit     4  6.150170e-01  4.9173448 #> 27     NP_33   113 5.599308e-02 log-Gauss-probit     4  6.150170e-01  4.9173448 #> 28     NP_33   113 5.599308e-02 log-Gauss-probit     4  6.150170e-01  4.9173448 #> 29     NP_33   113 5.599308e-02 log-Gauss-probit     4  6.150170e-01  4.9173448 #> 30     NP_33   113 5.599308e-02 log-Gauss-probit     4  6.150170e-01  4.9173448 #> 31     NP_35   115 3.238559e-03     Gauss-probit     4  1.507579e+00  5.9751431 #> 32     NP_35   115 3.238559e-03     Gauss-probit     4  1.507579e+00  5.9751431 #> 33     NP_35   115 3.238559e-03     Gauss-probit     4  1.507579e+00  5.9751431 #> 34     NP_35   115 3.238559e-03     Gauss-probit     4  1.507579e+00  5.9751431 #> 35     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 36     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 37     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 39     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 40     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 41     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 42     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 43     NP_43   123 1.055895e-02      exponential     3 -3.967360e-01         NA #> 44     NP_55   135 1.119380e-06     Gauss-probit     4  2.325273e+00  4.4698821 #> 46     NP_56   136 5.289310e-03      exponential     3 -4.360528e-03         NA #> 47     NP_56   136 5.289310e-03      exponential     3 -4.360528e-03         NA #> 48     NP_59   139 1.293440e-02      exponential     3 -3.667815e-01         NA #> 49     NP_59   139 1.293440e-02      exponential     3 -3.667815e-01         NA #> 50     NP_59   139 1.293440e-02      exponential     3 -3.667815e-01         NA #> 51     NP_59   139 1.293440e-02      exponential     3 -3.667815e-01         NA #> 52     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 53     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 54     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 55     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 56     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 57     NP_60   140 6.939560e-03      exponential     3 -5.150005e-01         NA #> 58     NP_68   147 3.449660e-04     Gauss-probit     4  2.444950e+00  5.0555770 #> 59     NP_69   148 1.156302e-03           linear     2 -5.076324e-02         NA #> 60     NP_69   148 1.156302e-03           linear     2 -5.076324e-02         NA #> 61     NP_74   153 7.029527e-02 log-Gauss-probit     5  2.715410e-01  4.8474027 #> 62     NP_74   153 7.029527e-02 log-Gauss-probit     5  2.715410e-01  4.8474027 #> 63     NP_74   153 7.029527e-02 log-Gauss-probit     5  2.715410e-01  4.8474027 #> 64     NP_74   153 7.029527e-02 log-Gauss-probit     5  2.715410e-01  4.8474027 #> 65     NP_74   153 7.029527e-02 log-Gauss-probit     5  2.715410e-01  4.8474027 #> 67     NP_90   168 3.072572e-02      exponential     3 -2.686242e-01         NA #> 68     NP_90   168 3.072572e-02      exponential     3 -2.686242e-01         NA #> 69     NP_90   168 3.072572e-02      exponential     3 -2.686242e-01         NA #> 70     NP_90   168 3.072572e-02      exponential     3 -2.686242e-01         NA #> 71     NP_92   170 2.278810e-03      exponential     3 -4.595689e-03         NA #> 72     NP_92   170 2.278810e-03      exponential     3 -4.595689e-03         NA #> 73     NP_92   170 2.278810e-03      exponential     3 -4.595689e-03         NA #> 75     NP_94   172 1.798752e-05     Gauss-probit     4  3.016576e+00  4.8628416 #> 76     NP_94   172 1.798752e-05     Gauss-probit     4  3.016576e+00  4.8628416 #> 77     NP_94   172 1.798752e-05     Gauss-probit     4  3.016576e+00  4.8628416 #> 79     NP_96   174 5.128859e-04     Gauss-probit     4  2.409906e+00  5.2165398 #> 80     NP_96   174 5.128859e-04     Gauss-probit     4  2.409906e+00  5.2165398 #> 81     NP_98   176 1.544866e-04     Gauss-probit     4  1.880325e+00  5.9083172 #> 82     NP_98   176 1.544866e-04     Gauss-probit     4  1.880325e+00  5.9083172 #> 83     NP_98   176 1.544866e-04     Gauss-probit     4  1.880325e+00  5.9083172 #> 84     NP_98   176 1.544866e-04     Gauss-probit     4  1.880325e+00  5.9083172 #> 85    c00134  2802 2.762369e-04           linear     2 -2.179358e-01         NA #> 86    c00276 39331 9.401685e-07      exponential     3  1.499436e+00         NA #> 87    c00281 41217 2.894669e-06      exponential     3  1.408172e+00         NA #> 88    c00322 52577 1.875371e-03      exponential     3  1.805394e-03         NA #> 91    c00398 54508 1.668205e-05           linear     2 -1.405762e-01         NA #> 95    c00628 61115 5.388575e-07      exponential     3  4.923794e-02         NA #> 99    c00847  5295 9.884514e-03           linear     2 -1.266449e-01         NA #> 102   c00941  7809 4.335219e-03           linear     2 -7.650138e-02         NA #> 103   c00973  8280 6.803372e-03      exponential     3 -7.727847e-01         NA #> 104   c00973  8280 6.803372e-03      exponential     3 -7.727847e-01         NA #> 106   c01041  9614 2.607961e-04      exponential     3  1.528981e+00         NA #> 109   c01117 12251 2.634664e-03           linear     2  1.543520e-01         NA #> 110   c01133 12630 4.922435e-03     Gauss-probit     4  2.075770e+00  9.8438541 #> 111   c01155 13129 6.385399e-03     Gauss-probit     4  1.840019e+00  6.1917399 #> 115   c01250 16689 1.585374e-05           linear     2  4.316514e-01         NA #> 116   c01318 18587 9.761656e-03      exponential     3 -2.541336e-02         NA #> 117   c01370 20546 2.292186e-03           linear     2  9.464515e-02         NA #> 120   c01438 22651 1.939187e-04     Gauss-probit     4  1.764551e+00 10.9277844 #> 121   c01442 22830 8.398538e-07      exponential     3 -4.594974e-01         NA #> 122   c01447 23029 4.281444e-10      exponential     3 -1.254855e+00         NA #> 123   c01449 23118 3.283441e-05     Gauss-probit     4  4.461301e+00  3.6813967 #> 125   c01613 28185 5.354723e-03           linear     2  7.991209e-02         NA #> 127   c01616 28258 1.619046e-06      exponential     3  3.240702e-02         NA #> 128   c01629 28787 2.064119e-03     Gauss-probit     5  4.505403e+00 14.4444824 #> 129   c01643 29361 6.042318e-05      exponential     3  1.083425e-03         NA #> 131   c01645 29447 4.923790e-08     Gauss-probit     4  2.701659e+00  3.1591011 #> 132   c01645 29447 4.923790e-08     Gauss-probit     4  2.701659e+00  3.1591011 #> 133   c01739 32213 2.428740e-04 log-Gauss-probit     4  7.597910e-01  8.6772914 #> 134   c01924 38335 2.843216e-04     Gauss-probit     4  2.446537e+00 11.8943363 #> 137   c01952 39007 6.650930e-03      exponential     3  1.162982e-04         NA #> 140   c02004 40603 1.872409e-03           linear     2  9.583803e-02         NA #> 141   c02010 40836 3.289575e-06     Gauss-probit     4  2.473829e+00 11.5666888 #> 142   c02083 42840 3.959555e-04           linear     2 -1.362122e-01         NA #> 143   c02160 45443 1.197938e-07      exponential     3  4.291368e-01         NA #> 147   c02486 52753 2.171026e-05      exponential     3 -6.980028e-03         NA #> 148   c02572 52958 4.595821e-03           linear     2  1.555437e-01         NA #> 149   c02651 53192 2.080403e-04      exponential     3  4.499442e-02         NA #> 150   c02837 53881 7.971049e-04           linear     2  1.575210e-01         NA #> 152   c02877 53976 2.432349e-03           linear     2 -1.413708e-01         NA #> 156   c02955 54166 8.455883e-03           linear     2  2.166378e-01         NA #> 157   c02964 54187 3.684145e-04      exponential     3 -1.686471e+00         NA #> 158   c03046 54476 2.875687e-05           linear     2 -2.051304e-01         NA #> 161   c03088 54664 3.084821e-03     Gauss-probit     4  2.148866e+00 11.5968176 #> 164   c03134 54867 5.690878e-04     Gauss-probit     4  2.175505e+00 15.6410941 #> 165   c03146 54920 1.245703e-05           linear     2 -4.288489e-01         NA #> 166   c03147 54922 4.186163e-03 log-Gauss-probit     5  7.895259e-01  8.1665963 #> 167   c03150 54936 3.566795e-04           linear     2  1.084285e-01         NA #> 169   c03232 55298 2.548714e-06           linear     2  2.143541e-01         NA #> 170   c03258 55367 4.473786e-04     Gauss-probit     4  1.798037e+00  8.9781782 #> 171   c03284 55434 1.365366e-03           linear     2 -3.672796e-01         NA #> 172   c03284 55434 1.365366e-03           linear     2 -3.672796e-01         NA #> 174   c03319 55519 1.104637e-04     Gauss-probit     4  2.837930e+00 10.6370079 #> 178   c03358 55610 1.361311e-03     Gauss-probit     4  2.732236e+00 10.2055856 #> 179   c03392 55694 7.499082e-05           linear     2 -1.334615e-01         NA #> 180   c03440 55810 2.679169e-03           linear     2 -1.138782e-01         NA #> 181   c03440 55810 2.679169e-03           linear     2 -1.138782e-01         NA #> 183   c03526 56019 2.223268e-04      exponential     3 -1.249273e+00         NA #> 184   c03540 56053 3.430925e-03           linear     2  1.965028e-01         NA #> 185   c03540 56053 3.430925e-03           linear     2  1.965028e-01         NA #> 186   c03544 56063 6.386500e-03      exponential     3 -1.417594e-03         NA #> 188   c03571 56127 9.413418e-03 log-Gauss-probit     4  5.983299e-01  4.1680058 #> 190   c03586 56164 3.854715e-03     Gauss-probit     4  2.552963e+00 11.4923353 #> 193   c03661 56344 7.587641e-03 log-Gauss-probit     4  6.923540e-01  3.0415932 #> 196   c03724 56499 4.297972e-05 log-Gauss-probit     4  5.840913e-01 12.2786104 #> 197   c03745 56548 9.243140e-03           linear     2 -1.172201e-01         NA #> 198   c03760 56585 9.777594e-03           linear     2 -1.351428e-01         NA #> 199   c03761 56586 4.702449e-03           linear     2  1.262182e-01         NA #> 200   c03761 56586 4.702449e-03           linear     2  1.262182e-01         NA #> 201   c03784 56645 5.006652e-03 log-Gauss-probit     4  6.898228e-01  9.6540953 #> 202   c03784 56645 5.006652e-03 log-Gauss-probit     4  6.898228e-01  9.6540953 #> 203   c03784 56645 5.006652e-03 log-Gauss-probit     4  6.898228e-01  9.6540953 #> 205   c03801 56685 2.570986e-03 log-Gauss-probit     4  9.764227e-01 13.7221921 #> 207   c03925 57063 5.381358e-04     Gauss-probit     5  3.210268e+00  2.3821872 #> 208   c03931 57089 2.851070e-03     Gauss-probit     4  6.126334e+00  0.7526332 #> 211   c03948 57165 6.052153e-03 log-Gauss-probit     4  7.690806e-01 11.6144651 #> 214   c03950 57172 5.750220e-03 log-Gauss-probit     4  8.114609e-01  7.7688166 #> 215   c03979 57294 3.113834e-03      exponential     3 -4.177525e-03         NA #> 217   c04048 57585 3.263192e-03           linear     2 -1.211670e-01         NA #> 218   c04049 57589 4.043602e-04 log-Gauss-probit     4  7.902587e-01 13.3308965 #> 220   c04113 57859 1.165972e-04           linear     2  3.130549e-01         NA #> 221   c04117 57876 3.652581e-04     Gauss-probit     5  6.914901e+00 15.3546350 #> 222   c04129 57927 2.456812e-03           linear     2 -1.106194e-01         NA #> 225   c04240 58395 2.561139e-03      exponential     3 -1.404086e-03         NA #> 228   c04342 58826 1.308910e-04     Gauss-probit     4  7.197426e+00  7.7233560 #> 229   c04391 59033 3.624150e-04           linear     2 -1.363145e-01         NA #> 232   c04434 59217 7.874407e-03     Gauss-probit     5  3.908298e+00  2.8969340 #> 233   c04434 59217 7.874407e-03     Gauss-probit     5  3.908298e+00  2.8969340 #> 235   c04513 59551 9.612303e-03 log-Gauss-probit     4  7.506663e-01 11.8496013 #> 236   c04527 59607 1.222252e-03      exponential     3  4.226728e-04         NA #> 237   c04553 59682 2.052935e-04      exponential     3 -6.566892e-03         NA #> 238   c04553 59682 2.052935e-04      exponential     3 -6.566892e-03         NA #> 240   c04553 59682 2.052935e-04      exponential     3 -6.566892e-03         NA #> 242   c04609 59807 6.407706e-03           linear     2  2.392413e-01         NA #> 243   c04613 59817 2.581335e-03     Gauss-probit     4  3.032023e+00 11.9083638 #> 245   c04619 59830 8.483282e-03      exponential     3  2.328075e-02         NA #> 246   c04619 59830 8.483282e-03      exponential     3  2.328075e-02         NA #> 248   c04625 59843 3.759793e-03           linear     2  1.791830e-01         NA #> 251   c04647 59892 1.704160e-03           linear     2  9.344909e-02         NA #> 252   c04647 59892 1.704160e-03           linear     2  9.344909e-02         NA #> 253   c04655 59910 4.758216e-05 log-Gauss-probit     4  7.297684e-01 11.5528527 #> 255   c04667 59936 7.175098e-04      exponential     3  3.727143e-03         NA #> 256   c04683 59973 5.823021e-04      exponential     3  8.026136e-01         NA #> 257   c04702 60014 1.150256e-05      exponential     3 -8.958404e-04         NA #> 259   c04721 60057 1.935071e-03           linear     2  8.621251e-02         NA #> 260   c04785 60199 2.947658e-03      exponential     3  1.554432e+00         NA #> 263   c04803 60240 8.645920e-03           linear     2  1.054475e-01         NA #> 265   c04841 60324 1.209154e-05           linear     2  1.327705e-01         NA #> 266   c04883 60416 7.479393e-03      exponential     3  1.701162e+00         NA #> 270   c04981 60634 1.604178e-03     Gauss-probit     5  6.073747e+00 15.5258805 #> 272   c04990 60654 1.290312e-03           linear     2  2.168492e-01         NA #> 274   c05067 60825 3.429820e-03      exponential     3  4.733132e-01         NA #> 275   c05081 60856 1.998628e-04      exponential     3  4.406436e-02         NA #> 276   c05100 60898 4.685588e-05      exponential     3  1.626252e+00         NA #> 277   c05122 60947 5.831294e-03           linear     2  1.017186e-01         NA #> 279   c05183 61177 7.470683e-05      exponential     3 -6.029337e-03         NA #> 280   c05186 61192 9.977277e-06      exponential     3 -7.710575e-03         NA #> 282   c05207 61277 4.276674e-03      exponential     3  1.045991e+00         NA #> 285   c05269    10 9.270577e-05     Gauss-probit     4  2.656350e+00  9.3830167 #> 286   c05284    73 3.841471e-03           linear     2  2.319088e-01         NA #> 287   c05305   159 1.899100e-03           linear     2 -1.337043e-01         NA #> 288   c05305   159 1.899100e-03           linear     2 -1.337043e-01         NA #> 291   c05326   247 4.812259e-03           linear     2 -1.628214e-01         NA #> 293   c05358   382 7.443184e-03      exponential     3  2.090616e-02         NA #> 295   c05377   463 9.290871e-03           linear     2 -9.062729e-02         NA #> 296   c05385   497 5.701646e-05      exponential     3 -1.697255e-01         NA #> 297   c05401   565 9.242438e-03           linear     2 -8.645475e-02         NA #> 298   c05401   565 9.242438e-03           linear     2 -8.645475e-02         NA #> 299   c05417   633 9.280962e-05      exponential     3 -3.112237e-03         NA #> 301   c05581  1323 4.187799e-03           linear     2  1.169616e-01         NA #> 303   c05589  1360 8.134238e-03           linear     2 -6.289437e-02         NA #> 305   c05641  1567 2.764636e-03      exponential     3 -8.701043e-04         NA #> 306   c05645  1576 7.113588e-04           linear     2 -1.348525e-01         NA #> 307   c05645  1576 7.113588e-04           linear     2 -1.348525e-01         NA #> 308   c05698  1694 3.957047e-04     Gauss-probit     4  1.079324e+00  7.5677415 #> 312   c05903  2148 4.374165e-03 log-Gauss-probit     4  7.532079e-01 12.1685832 #> 314   c05923  2195 1.058132e-05      exponential     3 -2.107493e+00         NA #> 317   c05946  2245 7.079721e-03     Gauss-probit     4  2.368354e+00 11.2206087 #> 320   c05970  2298 2.347871e-03     Gauss-probit     5  3.471728e+00  3.6603885 #> 321   c05970  2298 2.347871e-03     Gauss-probit     5  3.471728e+00  3.6603885 #> 322   c05996  2356 3.511114e-04      exponential     3  7.501887e-01         NA #> 327   c06059  2495 1.623735e-03      exponential     3  9.866188e-01         NA #> 328   c06077  2535 2.710065e-04      exponential     3  3.802400e-02         NA #> 330   c06085  2553 1.680296e-05      exponential     3 -2.430678e-03         NA #> 331   c06133  2659 8.340750e-07           linear     2  1.581037e-01         NA #> 332   c06133  2659 8.340750e-07           linear     2  1.581037e-01         NA #> 333   c06142  2694 3.174858e-04     Gauss-probit     4  1.565882e+00  7.7633888 #> 336   c06164  2784 2.112917e-04     Gauss-probit     5  3.551701e+00  6.6100833 #> 338   c06208  2970 8.742721e-04           linear     2  1.440101e-01         NA #> 339   c06258  3180 3.342031e-03 log-Gauss-probit     4  7.135024e-01  2.8818475 #> 340   c06303  3372 1.986352e-04     Gauss-probit     4  2.664174e+00  5.4338860 #> 341   c06313  3413 6.508671e-04     Gauss-probit     4  2.523979e+00  6.3598648 #> 342   c06429  3686 7.498489e-03           linear     2  2.843827e-01         NA #> 343   c06440  3711 4.047233e-03     Gauss-probit     4  1.930519e+00 11.5544508 #> 344   c06518  3887 4.434225e-04      exponential     3  1.282679e+00         NA #> 346   c06548  3976 1.118557e-04           linear     2  2.267280e-01         NA #> 350   c06637  4352 4.977792e-04      exponential     3  2.940553e-02         NA #> 354   c06762  4630 1.129124e-03      exponential     3  2.579227e-02         NA #> 357   c06876  4888 7.528161e-08      exponential     3  8.665206e-02         NA #> 358   c06880  4897 2.817783e-08      exponential     3 -1.170819e-01         NA #> 360   c06880  4897 2.817783e-08      exponential     3 -1.170819e-01         NA #> 361   c06881  4900 9.898720e-04      exponential     3  3.893310e-04         NA #> 362   c06884  4906 9.612303e-03 log-Gauss-probit     4  6.237164e-01 11.5919778 #> 364   c06943  5037 4.856986e-04           linear     2  1.205147e-01         NA #> 365   c06962  5080 9.268299e-03           linear     2 -7.266508e-02         NA #> 368   c07027  5226 4.204526e-05      exponential     3 -1.818945e-02         NA #> 370   c07072  5328 9.285630e-04      exponential     3  1.750908e+00         NA #> 372   c07118  5428 1.069214e-06     Gauss-probit     4  3.201018e+00 13.8162214 #> 375   c07206  5768 1.331320e-04      exponential     3  1.150705e-02         NA #> 376   c07232  5877 3.268967e-03           linear     2 -1.649789e-01         NA #> 378   c07259  5994 8.634188e-03      exponential     3 -2.238603e-03         NA #> 379   c07261  6000 9.973687e-03      exponential     3 -6.624269e-01         NA #> 380   c07263  6010 6.171276e-03      exponential     3 -3.039276e-04         NA #> 384   c07386  6531 6.587401e-09      exponential     3  1.261410e+00         NA #> 386   c07492  6981 1.040808e-03           linear     2  8.280517e-02         NA #> 387   c07492  6981 1.040808e-03           linear     2  8.280517e-02         NA #> 389   c07529  7138 7.515694e-04      exponential     3  2.811126e-02         NA #> 391   c07550  7226 3.659885e-03           linear     2 -1.065091e-01         NA #> 394   c07703  7740 5.335570e-05      exponential     3 -9.916504e-02         NA #> 395   c07715  7768 1.877882e-09      exponential     3  2.083659e-01         NA #> 397   c07797  7953 9.102023e-03     Gauss-probit     5  5.456328e+00 11.4303586 #> 399   c07859  8092 1.007072e-03     Gauss-probit     4  2.145963e+00  7.6939508 #> 401   c07957  8310 1.752806e-04     Gauss-probit     4  2.462513e+00  8.3205953 #> 404   c08065  8553 3.401488e-04      exponential     3 -1.628308e-02         NA #> 405   c08131  8701 1.673911e-03           linear     2  1.826552e-01         NA #> 408   c08241  8948 1.777483e-04     Gauss-probit     4  4.306086e+00 12.7509474 #> 409   c08251  8970 3.556009e-07      exponential     3  3.107220e-01         NA #> 410   c08284  9045 9.182573e-05      exponential     3 -6.347284e-03         NA #> 411   c08296  9071 6.435369e-04     Gauss-probit     4  1.769636e+00 14.5173033 #> 414   c08408  9323 1.435436e-03           linear     2 -1.328818e-01         NA #> 416   c08437  9388 2.774965e-03     Gauss-probit     4  2.500577e+00 15.2527459 #> 419   c08466  9451 1.593456e-04      exponential     3  8.887870e-04         NA #> 420   c08470  9462 9.083535e-04      exponential     3  2.790157e-03         NA #> 422   c08630  9820 1.427514e-05           linear     2  5.428566e-01         NA #> 427   c08733 10248 3.326616e-05     Gauss-probit     4  3.137538e+00  9.9736456 #> 428   c08733 10248 3.326616e-05     Gauss-probit     4  3.137538e+00  9.9736456 #> 430   c08762 10368 1.641885e-03      exponential     3  3.093377e-03         NA #> 433   c08806 10557 2.319865e-04      exponential     3 -1.396020e-03         NA #> 437   c08946 11149 1.361378e-03           linear     2 -1.268688e-01         NA #> 439   c08979 11300 3.707499e-03      exponential     3  1.744083e-03         NA #> 441   c08979 11300 3.707499e-03      exponential     3  1.744083e-03         NA #> 443   c09104 11625 8.299711e-04           linear     2  2.921985e-01         NA #> 445   c09125 11677 1.569172e-03      exponential     3  8.284746e-01         NA #> 447   c09171 11859 6.956216e-04      exponential     3  4.862071e-03         NA #> 450   c09314 12339 1.109864e-06           linear     2 -1.887393e-01         NA #> 453   c09437 12639 3.571289e-04     Gauss-probit     4  1.928769e+00 11.2188707 #> 454   c09437 12639 3.571289e-04     Gauss-probit     4  1.928769e+00 11.2188707 #> 457   c09562 12942 4.373374e-03      exponential     3 -2.161149e-03         NA #> 458   c09562 12942 4.373374e-03      exponential     3 -2.161149e-03         NA #> 460   c09598 13030 2.362131e-03           linear     2 -2.586441e-01         NA #> 461   c09599 13034 5.092176e-03           linear     2  9.794904e-02         NA #> 464   c09662 13187 7.680486e-03           linear     2 -1.015681e-01         NA #> 465   c09664 13193 4.054480e-04      exponential     3  3.206674e-02         NA #> 466   c09667 13199 4.349398e-03      exponential     3 -3.552147e-02         NA #> 467   c09730 13354 2.336694e-03      exponential     3 -7.259535e-04         NA #> 468   c09850 13648 2.372640e-05      exponential     3 -9.250649e-05         NA #> 469   c09874 13707 9.527637e-03 log-Gauss-probit     4  6.223239e-01  6.1391526 #> 470   c09918 13875 8.329706e-03           linear     2  7.343326e-02         NA #> 471   c09971 14113 5.839468e-03      exponential     3 -3.989293e-02         NA #> 473   c10039 14416 8.764282e-04           linear     2  2.073703e-01         NA #> 475   c10057 14495 3.390469e-03      exponential     3  2.415379e-02         NA #> 476   c10066 14533 1.347692e-03      exponential     3 -9.389332e-01         NA #> 479   c10088 14635 3.780459e-03           linear     2 -8.624646e-02         NA #> 480   c10088 14635 3.780459e-03           linear     2 -8.624646e-02         NA #> 481   c10125 14799 1.608679e-03     Gauss-probit     4  2.867974e+00 11.7480225 #> 482   c10155 14932 5.257232e-06      exponential     3  2.863366e-01         NA #> 483   c10163 14967 4.667371e-03           linear     2  1.195824e-01         NA #> 486   c10229 15259 6.113675e-04     Gauss-probit     4  2.711076e+00 12.5673623 #> 488   c10238 15302 1.228501e-03      exponential     3 -1.793775e+00         NA #> 490   c10269 15440 7.296658e-05      exponential     3  1.592475e+00         NA #> 491   c10269 15440 7.296658e-05      exponential     3  1.592475e+00         NA #> 492   c10302 15585 4.225116e-03      exponential     3  6.617470e-03         NA #> 493   c10304 15596 2.269389e-03           linear     2 -1.056212e-01         NA #> 494   c10311 15626 1.016928e-03 log-Gauss-probit     4  7.845651e-01  3.5216604 #> 495   c10345 15778 3.099644e-03 log-Gauss-probit     4  8.904332e-01 11.1141357 #> 496   c10386 15957 3.625125e-03           linear     2  2.199089e-01         NA #> 498   c10413 16075 3.498590e-04           linear     2  1.135548e-01         NA #> 499   c10413 16075 3.498590e-04           linear     2  1.135548e-01         NA #> 500   c10419 16107 4.121617e-03     Gauss-probit     4  5.137237e+00  8.8683481 #> 501   c10499 16461 1.256216e-07     Gauss-probit     4  2.062548e+00 11.8312797 #> 502   c10511 16512 7.145948e-03           linear     2  1.747655e-01         NA #> 504   c10532 16606 7.887575e-04      exponential     3  8.633562e-02         NA #> 505   c10607 16795 2.129357e-04     Gauss-probit     4  2.821383e+00 14.3133366 #> 509   c10754 17155 5.833637e-04      exponential     3 -2.995883e-04         NA #> 513   c10934 17597 5.753046e-03      exponential     3  7.891420e-03         NA #> 514   c10934 17597 5.753046e-03      exponential     3  7.891420e-03         NA #> 515   c10976 17699 8.637145e-03           linear     2  2.195307e-01         NA #> 517   c11168 18235 1.949306e-03      exponential     3  2.214326e-03         NA #> 518   c11210 18416 7.958846e-04 log-Gauss-probit     4  1.054030e+00  7.7051920 #> 519   c11233 18523 4.606893e-03      exponential     3  1.934382e-02         NA #> 520   c11334 18970 8.791723e-04      exponential     3  1.020052e-02         NA #> 521   c11382 19182 4.750777e-03     Gauss-probit     4  1.103583e+00  3.2368169 #> 522   c11397 19250 3.445348e-03      exponential     3  2.401132e-04         NA #> 523   c11456 19511 3.753562e-09      exponential     3 -1.853928e-01         NA #> 525   c11462 19537 9.770964e-03 log-Gauss-probit     4  7.191494e-01  3.3180250 #> 526   c11480 19620 5.163659e-03           linear     2  1.902326e-01         NA #> 527   c11530 19841 8.558466e-03 log-Gauss-probit     4  1.099263e+00  5.8568962 #> 528   c11558 19962 5.915481e-04           linear     2  1.224014e-01         NA #> 531   c11630 20284 5.955893e-06      exponential     3 -3.666783e-03         NA #> 534   c11906 20969 9.654346e-04     Gauss-probit     4  2.292477e+00 11.7948434 #> 535   c11942 21057 4.470344e-03      exponential     3  1.593425e-03         NA #> 540   c12260 22081 8.245828e-06      exponential     3  1.353701e-01         NA #> 542   c12281 22175 4.161221e-03 log-Gauss-probit     4  6.948815e-01  4.9989594 #> 543   c12403 22716 3.760750e-03     Gauss-probit     4  2.214023e+00 14.5772553 #> 544   c12506 23173 7.671714e-05      exponential     3 -2.509837e-03         NA #> 546   c12544 23346 1.722105e-03           linear     2  1.861575e-01         NA #> 547   c12572 23468 6.773752e-04      exponential     3  1.083771e-02         NA #> 549   c12576 23487 9.267247e-03 log-Gauss-probit     4  1.021352e+00  4.4432065 #> 551   c12705 23819 9.933717e-03      exponential     3 -1.751567e+00         NA #> 552   c12781 24007 1.047802e-03           linear     2  4.825735e-01         NA #> 553   c12927 24362 7.217499e-04           linear     2  3.109088e-01         NA #> 554   c13186 25095 5.598806e-03      exponential     3 -3.355018e-04         NA #> 556   c13243 25350 9.139692e-03      exponential     3 -6.088131e-01         NA #> 558   c13270 25470 5.267827e-03           linear     2  1.432054e-01         NA #> 559   c13277 25500 2.669356e-04     Gauss-probit     4  2.594431e+00 10.6317327 #> 561   c13297 25589 4.131109e-04      exponential     3 -6.832444e-03         NA #> 562   c13297 25589 4.131109e-04      exponential     3 -6.832444e-03         NA #> 565   c13517 26538 8.227406e-04      exponential     3  7.571071e-01         NA #> 566   c13525 26574 3.237246e-03      exponential     3 -1.128907e+00         NA #> 567   c13542 26650 7.852988e-04      exponential     3  2.600645e-03         NA #> 569   c13574 26794 1.921858e-03           linear     2  2.317066e-01         NA #> 571   c13596 26891 2.014638e-03     Gauss-probit     4  2.094345e+00  2.6618273 #> 572   c13598 26896 4.965270e-06           linear     2  2.958897e-01         NA #> 573   c13605 26931 1.210717e-03           linear     2  1.951699e-01         NA #> 574   c13674 27161 2.365368e-03      exponential     3 -6.072924e-01         NA #> 575   c13764 27378 4.475730e-03      exponential     3  5.093825e-03         NA #> 577   c13825 27530 7.036682e-03     Gauss-probit     4  2.375172e+00  6.8208872 #> 579   c14005 27954 6.155794e-03           linear     2  4.216192e-01         NA #> 580   c14005 27954 6.155794e-03           linear     2  4.216192e-01         NA #> 581   c14237 28676 1.538888e-04 log-Gauss-probit     4  7.541007e-01  7.8537519 #> 583   c14363 29213 1.557209e-05      exponential     3  2.253639e-02         NA #> 585   c14423 29467 4.543972e-03      exponential     3 -1.604455e-02         NA #> 586   c14431 29501 2.619248e-03 log-Gauss-probit     4  7.955319e-01  5.9474858 #> 587   c14431 29501 2.619248e-03 log-Gauss-probit     4  7.955319e-01  5.9474858 #> 588   c14618 30291 2.083712e-03     Gauss-probit     5  3.713824e+00 16.5075720 #> 590   c15068 31336 1.093408e-04           linear     2  5.374968e-01         NA #> 591   c15455 32647 2.235788e-06      exponential     3  9.915016e-03         NA #> 593   c15572 33143 7.075275e-03      exponential     3  4.643676e-02         NA #> 595   c15719 33766 3.883724e-04           linear     2 -1.905828e-01         NA #> 596   c15843 34290 1.405103e-05     Gauss-probit     4  3.067016e+00  2.6582772 #> 597   c15942 34598 4.718990e-05      exponential     3 -4.450675e-02         NA #> 598   c15975 34674 3.356863e-03      exponential     3 -8.170672e-01         NA #> 599   c15975 34674 3.356863e-03      exponential     3 -8.170672e-01         NA #> 603   c16742 36804 2.781433e-04           linear     2  3.848784e-01         NA #> 604   c16973 37787 2.825599e-04     Gauss-probit     4  8.319118e+00 -4.6684484 #> 606   c17138 38478 7.921107e-04           linear     2  1.967745e-01         NA #> 608   c17497 39284 3.028115e-04      exponential     3 -2.312831e-03         NA #> 610   c17517 39327 2.461490e-03      exponential     3  5.997141e-04         NA #> 611   c17694 39843 2.019227e-05      exponential     3 -1.826364e+00         NA #> 612   c17823 40393 6.238172e-04      exponential     3  6.779690e-04         NA #> 614   c17823 40393 6.238172e-04      exponential     3  6.779690e-04         NA #> 615   c17823 40393 6.238172e-04      exponential     3  6.779690e-04         NA #> 616   c18178 41738 1.357329e-03           linear     2  1.677462e-01         NA #> 617   c18301 42015 1.848281e-06      exponential     3  1.568251e-01         NA #> 618   c18306 42025 7.861070e-04     Gauss-probit     4  1.686325e+00  6.0977853 #> 619   c18306 42025 7.861070e-04     Gauss-probit     4  1.686325e+00  6.0977853 #> 620   c18315 42046 3.162528e-03      exponential     3  3.707484e-03         NA #> 623   c18540 42550 4.541751e-03 log-Gauss-probit     5  2.314017e-01  3.5945632 #> 624   c18686 42975 4.956775e-03           linear     2  3.126935e-01         NA #> 626   c18794 43434 3.967972e-04      exponential     3  1.595602e-01         NA #> 630   c19738 46332 6.573236e-03      exponential     3 -2.344367e-04         NA #> 631   c20526 48892 1.461304e-06      exponential     3 -3.976049e-02         NA #> 634   c20668 49255 2.423243e-04           linear     2  2.041387e-01         NA #> 641   c21327 51498 7.255831e-06      exponential     3  1.489682e+00         NA #> 642   c21366 51578 5.125046e-03      exponential     3 -6.140642e-01         NA #> 643   c21438 51724 9.104359e-03           linear     2  1.122721e-01         NA #> 644   c21442 51732 7.480590e-05      exponential     3  4.885340e-04         NA #> 645   c21452 51752 7.810285e-07      exponential     3  1.427234e+00         NA #> 646   c21521 51888 5.591900e-05      exponential     3  4.662577e-04         NA #>              d          e           f      SDres      typology trend        y0 #> 1    7.3435706         NA          NA 0.12454183         L.dec   dec  7.343571 #> 2    5.9418958 -1.6479584          NA 0.12604568  E.dec.convex   dec  5.941896 #> 5    7.8591094         NA          NA 0.05203245         L.dec   dec  7.859109 #> 6    7.8591094         NA          NA 0.05203245         L.dec   dec  7.859109 #> 7    7.8591094         NA          NA 0.05203245         L.dec   dec  7.859109 #> 8    6.8579095 -0.3213163          NA 0.23376392  E.dec.convex   dec  6.857909 #> 9    6.2092863 -0.3230281          NA 0.28968463  E.dec.convex   dec  6.209286 #> 10   7.2888833  1.3087220  -0.1436781 0.07085857         lGP.U     U  7.288883 #> 11   6.8685231 -0.6254549          NA 0.15031166  E.dec.convex   dec  6.868523 #> 12   7.5584812 -0.2649798          NA 0.15353807  E.dec.convex   dec  7.558481 #> 13   6.4674657         NA          NA 0.05769085         L.dec   dec  6.467466 #> 14   5.7383018         NA          NA 0.11726837         L.dec   dec  5.738302 #> 16   5.3301711         NA          NA 0.18706049         L.inc   inc  5.330171 #> 17   5.3301711         NA          NA 0.18706049         L.inc   inc  5.330171 #> 18   4.9684754  2.0243885          NA 0.14303183  E.inc.convex   inc  4.968475 #> 19   4.9684754  2.0243885          NA 0.14303183  E.inc.convex   inc  4.968475 #> 20   4.9684754  2.0243885          NA 0.14303183  E.inc.convex   inc  4.968475 #> 22   4.8357744  1.4069463   0.2455556 0.10615565       GP.bell  bell  4.867514 #> 23   4.8357744  1.4069463   0.2455556 0.10615565       GP.bell  bell  4.867514 #> 25   5.4023281  3.3895616          NA 0.06744390 E.dec.concave   dec  5.402328 #> 26   4.9173448  3.2236437   0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 27   4.9173448  3.2236437   0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 28   4.9173448  3.2236437   0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 29   4.9173448  3.2236437   0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 30   4.9173448  3.2236437   0.4530573 0.21991569      lGP.bell  bell  4.917345 #> 31   5.9751431  0.5875851  -0.6980909 0.26535797          GP.U     U  5.328111 #> 32   5.9751431  0.5875851  -0.6980909 0.26535797          GP.U     U  5.328111 #> 33   5.9751431  0.5875851  -0.6980909 0.26535797          GP.U     U  5.328111 #> 34   5.9751431  0.5875851  -0.6980909 0.26535797          GP.U     U  5.328111 #> 35   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 36   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 37   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 39   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 40   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 41   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 42   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 43   5.6078463 -1.2203359          NA 0.20417365 E.inc.concave   inc  5.607846 #> 44   4.4698821  1.8678530   0.8450245 0.12256991       GP.bell  bell  5.081883 #> 46   7.0187638  1.9509846          NA 0.05587260 E.dec.concave   dec  7.018764 #> 47   7.0187638  1.9509846          NA 0.05587260 E.dec.concave   dec  7.018764 #> 48   4.4916953 -1.7031497          NA 0.18517809 E.inc.concave   inc  4.491695 #> 49   4.4916953 -1.7031497          NA 0.18517809 E.inc.concave   inc  4.491695 #> 50   4.4916953 -1.7031497          NA 0.18517809 E.inc.concave   inc  4.491695 #> 51   4.4916953 -1.7031497          NA 0.18517809 E.inc.concave   inc  4.491695 #> 52   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 53   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 54   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 55   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 56   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 57   5.2157086 -1.5647018          NA 0.23592637 E.inc.concave   inc  5.215709 #> 58   5.0555770  2.6269663  -0.6208164 0.12476292          GP.U     U  4.707014 #> 59   5.5138551         NA          NA 0.11224716         L.dec   dec  5.513855 #> 60   5.5138551         NA          NA 0.11224716         L.dec   dec  5.513855 #> 61   4.6897871  1.0923496  -0.4146272 0.17573194         lGP.U     U  4.689787 #> 62   4.6897871  1.0923496  -0.4146272 0.17573194         lGP.U     U  4.689787 #> 63   4.6897871  1.0923496  -0.4146272 0.17573194         lGP.U     U  4.689787 #> 64   4.6897871  1.0923496  -0.4146272 0.17573194         lGP.U     U  4.689787 #> 65   4.6897871  1.0923496  -0.4146272 0.17573194         lGP.U     U  4.689787 #> 67   6.0705233 -1.1113399          NA 0.14811681 E.inc.concave   inc  6.070523 #> 68   6.0705233 -1.1113399          NA 0.14811681 E.inc.concave   inc  6.070523 #> 69   6.0705233 -1.1113399          NA 0.14811681 E.inc.concave   inc  6.070523 #> 70   6.0705233 -1.1113399          NA 0.14811681 E.inc.concave   inc  6.070523 #> 71   6.4891514  1.5921459          NA 0.17066885 E.dec.concave   dec  6.489151 #> 72   6.4891514  1.5921459          NA 0.17066885 E.dec.concave   dec  6.489151 #> 73   6.4891514  1.5921459          NA 0.17066885 E.dec.concave   dec  6.489151 #> 75   4.8628416  1.3892912   0.7365937 0.14844069       GP.bell  bell  5.525316 #> 76   4.8628416  1.3892912   0.7365937 0.14844069       GP.bell  bell  5.525316 #> 77   4.8628416  1.3892912   0.7365937 0.14844069       GP.bell  bell  5.525316 #> 79   5.2165398  1.9279453   0.8281597 0.22659347       GP.bell  bell  5.817903 #> 80   5.2165398  1.9279453   0.8281597 0.22659347       GP.bell  bell  5.817903 #> 81   5.9083172  1.3702809  -0.6148327 0.16888946          GP.U     U  5.436867 #> 82   5.9083172  1.3702809  -0.6148327 0.16888946          GP.U     U  5.436867 #> 83   5.9083172  1.3702809  -0.6148327 0.16888946          GP.U     U  5.436867 #> 84   5.9083172  1.3702809  -0.6148327 0.16888946          GP.U     U  5.436867 #> 85  10.8510453         NA          NA 0.41695413         L.dec   dec 10.851045 #> 86  12.4282123 -2.1982296          NA 0.28684892  E.dec.convex   dec 12.428212 #> 87  12.4118704 -2.4052289          NA 0.28115971  E.dec.convex   dec 12.411870 #> 88  16.4105357  1.1527615          NA 0.14530179  E.inc.convex   inc 16.410536 #> 91  12.9488316         NA          NA 0.20667778         L.dec   dec 12.948832 #> 95  15.7725900  1.8964701          NA 0.31543564  E.inc.convex   inc 15.772590 #> 99  14.6496706         NA          NA 0.37973174         L.dec   dec 14.649671 #> 102  9.3913476         NA          NA 0.18766848         L.dec   dec  9.391348 #> 103  7.2362696 -2.3752014          NA 0.30192346 E.inc.concave   inc  7.236270 #> 104  7.2362696 -2.3752014          NA 0.30192346 E.inc.concave   inc  7.236270 #> 106  7.3442837 -1.3800379          NA 0.50872456  E.dec.convex   dec  7.344284 #> 109 15.1021881         NA          NA 0.37952774         L.inc   inc 15.102188 #> 110  9.8438541  3.1688140   1.4586502 0.27599070       GP.bell  bell 10.298744 #> 111  6.1917399  2.6438900  -2.1169700 0.72076613          GP.U     U  5.437714 #> 115 12.3018744         NA          NA 0.78665664         L.inc   inc 12.301874 #> 116  9.3005915  1.9823323          NA 0.31949144 E.dec.concave   dec  9.300591 #> 117 17.3249844         NA          NA 0.20275495         L.inc   inc 17.324984 #> 120 10.9277844  1.5194196  -2.4264132 0.80589796          GP.U     U  9.253000 #> 121 13.0826064  5.0536325          NA 0.21425367 E.dec.concave   dec 13.082606 #> 122 14.4649621  6.7164464          NA 0.21109707 E.dec.concave   dec 14.464962 #> 123  3.6813967  2.5679456   7.7390108 0.55445078       GP.bell  bell 10.238924 #> 125 10.7640181         NA          NA 0.23146795         L.inc   inc 10.764018 #> 127 15.1467650  1.8613086          NA 0.20825290  E.inc.convex   inc 15.146765 #> 128 11.2906700  4.5827956  -3.3708994 0.30754041          GP.U     U  9.768606 #> 129 11.9235370  0.9067940          NA 0.44761261  E.inc.convex   inc 11.923537 #> 131  3.1591011  1.7419187   3.3237027 0.41149782       GP.bell  bell  5.859022 #> 132  3.1591011  1.7419187   3.3237027 0.41149782       GP.bell  bell  5.859022 #> 133  8.6772914  1.7108205  -1.8696263 0.67001839         lGP.U     U  8.677291 #> 134 11.8943363  2.4191926  -1.3218368 0.24812481          GP.U     U 11.083641 #> 137 12.4524972  0.7590944          NA 0.28188470  E.inc.convex   inc 12.452497 #> 140 11.2948498         NA          NA 0.20469339         L.inc   inc 11.294850 #> 141 11.5666888  1.5731637  -1.1211951 0.19687033          GP.U     U 10.650748 #> 142 10.6115156         NA          NA 0.27493541         L.dec   dec 10.611516 #> 143  7.5281155  3.3691745          NA 0.40223575  E.inc.convex   inc  7.528115 #> 147 17.8604532  1.2635774          NA 0.29022358 E.dec.concave   dec 17.860453 #> 148 14.7000111         NA          NA 0.44007932         L.inc   inc 14.700011 #> 149  7.8301186  1.8307946          NA 0.52494332  E.inc.convex   inc  7.830119 #> 150  5.6626237         NA          NA 0.32569343         L.inc   inc  5.662624 #> 152 12.5354341         NA          NA 0.38516458         L.dec   dec 12.535434 #> 156  4.2547569         NA          NA 0.61055166         L.inc   inc  4.254757 #> 157  8.0681583 -1.5870424          NA 0.57855035 E.inc.concave   inc  8.068158 #> 158 12.3485193         NA          NA 0.33573498         L.dec   dec 12.348519 #> 161 11.5968176  1.8275480  -0.8682280 0.29736729          GP.U     U 10.992074 #> 164 15.6410941  2.4622535  -1.0424723 0.22568934          GP.U     U 15.091678 #> 165 10.5084377         NA          NA 0.64924704         L.dec   dec 10.508438 #> 166 11.7426152  5.4773692   1.4580135 0.29410154      lGP.bell  bell 11.742615 #> 167 10.9445611         NA          NA 0.20700446         L.inc   inc 10.944561 #> 169  8.3293039         NA          NA 0.31094519         L.inc   inc  8.329304 #> 170  8.9781782  2.1869740   1.3093175 0.39364195       GP.bell  bell  9.603054 #> 171  9.1119357         NA          NA 0.84138808         L.dec   dec  9.111936 #> 172  9.1119357         NA          NA 0.84138808         L.dec   dec  9.111936 #> 174 10.6370079  2.4022793  -4.0922462 0.73206856          GP.U     U  7.777009 #> 178 10.2055856  2.8555099   2.3244195 0.41255116       GP.bell  bell 11.551851 #> 179 13.2867883         NA          NA 0.23525867         L.dec   dec 13.286788 #> 180 13.9590916         NA          NA 0.26918435         L.dec   dec 13.959092 #> 181 13.9590916         NA          NA 0.26918435         L.dec   dec 13.959092 #> 183  6.7361771 -0.6498650          NA 0.38185313 E.inc.concave   inc  6.736177 #> 184  6.4085538         NA          NA 0.52767310         L.inc   inc  6.408554 #> 185  6.4085538         NA          NA 0.52767310         L.inc   inc  6.408554 #> 186  8.9010369  1.0237053          NA 0.37429011 E.dec.concave   dec  8.901037 #> 188  4.1680058  2.3167014   1.3407136 0.64489184      lGP.bell  bell  4.168006 #> 190 11.4923353  2.5819255   1.4610375 0.34283417       GP.bell  bell 12.368447 #> 193  3.0415932  1.8809478   1.7942520 0.87754767      lGP.bell  bell  3.041593 #> 196 12.2786104  1.7372724  -2.0216456 0.53171016         lGP.U     U 12.278610 #> 197  8.8178134         NA          NA 0.36412409         L.dec   dec  8.817813 #> 198 10.3504426         NA          NA 0.39026969         L.dec   dec 10.350443 #> 199 10.2773638         NA          NA 0.38834605         L.inc   inc 10.277364 #> 200 10.2773638         NA          NA 0.38834605         L.inc   inc 10.277364 #> 201  9.6540953  1.9560222  -2.1370159 1.14939830         lGP.U     U  9.654095 #> 202  9.6540953  1.9560222  -2.1370159 1.14939830         lGP.U     U  9.654095 #> 203  9.6540953  1.9560222  -2.1370159 1.14939830         lGP.U     U  9.654095 #> 205 13.7221921  2.8275360  -0.5902918 0.20207860         lGP.U     U 13.722192 #> 207 -5.1882517  0.0000000   4.6027866 0.51206355       GP.bell  bell  3.199754 #> 208  0.7526332  2.5547012   8.4153150 0.55821268       GP.bell  bell  8.467177 #> 211 11.6144651  2.6085834  -0.6474606 0.24250502         lGP.U     U 11.614465 #> 214  7.7688166  2.5959623  -1.7181058 0.70975203         lGP.U     U  7.768817 #> 215 12.6184168  1.0550836          NA 0.85708282 E.dec.concave   dec 12.618417 #> 217 10.6857590         NA          NA 0.31873117         L.dec   dec 10.685759 #> 218 13.3308965  2.0807712  -2.0437685 0.67930675         lGP.U     U 13.330896 #> 220  4.3278401         NA          NA 0.64244947         L.inc   inc  4.327840 #> 221 23.8696589  0.0000000  -8.8575210 0.31200738          GP.U     U 10.754626 #> 222 11.3869012         NA          NA 0.25848359         L.dec   dec 11.386901 #> 225 11.7554052  1.1188963          NA 0.13641264 E.dec.concave   dec 11.755405 #> 228  7.7233560  2.5397977   5.2069816 0.18596550       GP.bell  bell 12.616033 #> 229 10.8961840         NA          NA 0.27093544         L.dec   dec 10.896184 #> 232 -2.6304333  0.0000000   3.7693124 0.45467691       GP.bell  bell  3.902563 #> 233 -2.6304333  0.0000000   3.7693124 0.45467691       GP.bell  bell  3.902563 #> 235 11.8496013  1.9585039   0.8349853 0.42763624      lGP.bell  bell 11.849601 #> 236 10.9187587  0.8633870          NA 0.30698381  E.inc.convex   inc 10.918759 #> 237 15.7513805  1.2089428          NA 0.43153316 E.dec.concave   dec 15.751380 #> 238 15.7513805  1.2089428          NA 0.43153316 E.dec.concave   dec 15.751380 #> 240 15.7513805  1.2089428          NA 0.43153316 E.dec.concave   dec 15.751380 #> 242  5.6176186         NA          NA 0.71745130         L.inc   inc  5.617619 #> 243 11.9083638  2.7394740   1.2475547 0.17108221       GP.bell  bell 12.737821 #> 245  8.3098306  1.7832021          NA 0.47444618  E.inc.convex   inc  8.309831 #> 246  8.3098306  1.7832021          NA 0.47444618  E.inc.convex   inc  8.309831 #> 248  6.9999200         NA          NA 0.48572253         L.inc   inc  6.999920 #> 251 17.9267166         NA          NA 0.19130163         L.inc   inc 17.926717 #> 252 17.9267166         NA          NA 0.19130163         L.inc   inc 17.926717 #> 253 11.5528527  1.7586717   0.9857557 0.27811862      lGP.bell  bell 11.552853 #> 255  4.1240469  0.9672252          NA 1.22904641  E.inc.convex   inc  4.124047 #> 256 11.2738979 -2.4815554          NA 0.24110024  E.dec.convex   dec 11.273898 #> 257 11.1766179  0.9162819          NA 0.22747339 E.dec.concave   dec 11.176618 #> 259 10.9147353         NA          NA 0.16490391         L.inc   inc 10.914735 #> 260  6.4933089 -1.5366759          NA 0.65031263  E.dec.convex   dec  6.493309 #> 263 10.5032644         NA          NA 0.29248928         L.inc   inc 10.503264 #> 265  9.5564865         NA          NA 0.18002511         L.inc   inc  9.556486 #> 266  5.0551521 -0.5889109          NA 0.72440497  E.dec.convex   dec  5.055152 #> 270 29.7823352  0.0000000 -13.8372731 0.77132816          GP.U     U  8.816835 #> 272  5.1502968         NA          NA 0.49677570         L.inc   inc  5.150297 #> 274 13.0468298 -2.5200214          NA 0.13144425  E.dec.convex   dec 13.046830 #> 275 11.0973433  2.0754574          NA 0.27234802  E.inc.convex   inc 11.097343 #> 276  6.9630481 -2.0722462          NA 0.44005180  E.dec.convex   dec  6.963048 #> 277  9.0129913         NA          NA 0.28336282         L.inc   inc  9.012991 #> 279  6.6904034  1.2899867          NA 0.25309746 E.dec.concave   dec  6.690403 #> 280  9.2723423  1.2974934          NA 0.27951792 E.dec.concave   dec  9.272342 #> 282 13.4155278 -2.2148393          NA 0.40243907  E.dec.convex   dec 13.415528 #> 285  9.3830167  1.9563733  -1.1542378 0.23896903          GP.U     U  8.502959 #> 286  3.6770965         NA          NA 0.64907732         L.inc   inc  3.677097 #> 287  8.2045728         NA          NA 0.33406887         L.dec   dec  8.204573 #> 288  8.2045728         NA          NA 0.33406887         L.dec   dec  8.204573 #> 291  4.6285396         NA          NA 0.44374643         L.dec   dec  4.628540 #> 293  9.8243533  1.9682607          NA 0.21543421  E.inc.convex   inc  9.824353 #> 295  8.0476185         NA          NA 0.25867705         L.dec   dec  8.047618 #> 296 12.4697768  3.3599518          NA 0.26868859 E.dec.concave   dec 12.469777 #> 297 11.1166216         NA          NA 0.24109408         L.dec   dec 11.116622 #> 298 11.1166216         NA          NA 0.24109408         L.dec   dec 11.116622 #> 299  8.8001787  1.0569847          NA 0.44895951 E.dec.concave   dec  8.800179 #> 301 12.5829044         NA          NA 0.28459726         L.inc   inc 12.582904 #> 303  9.8420421         NA          NA 0.14724997         L.dec   dec  9.842042 #> 305 12.9786729  0.9062525          NA 0.48389149 E.dec.concave   dec 12.978673 #> 306 12.9205516         NA          NA 0.29030980         L.dec   dec 12.920552 #> 307 12.9205516         NA          NA 0.29030980         L.dec   dec 12.920552 #> 308  7.5677415  0.9950738  -0.7564927 0.23626721          GP.U     U  7.073164 #> 312 12.1685832  2.0515078   0.7474307 0.31596860      lGP.bell  bell 12.168583 #> 314  8.8258814 -2.6181633          NA 0.49728328 E.inc.concave   inc  8.825881 #> 317 11.2206087  2.3761712  -1.7174779 0.56239213          GP.U     U 10.182344 #> 320  6.0844002  3.8714820   2.6450452 0.50826185       GP.bell  bell  7.183840 #> 321  6.0844002  3.8714820   2.6450452 0.50826185       GP.bell  bell  7.183840 #> 322  9.8322505 -1.0676294          NA 0.23732470  E.dec.convex   dec  9.832250 #> 327  4.9468313 -0.7537935          NA 0.38646039  E.dec.convex   dec  4.946831 #> 328  7.4334490  1.8152385          NA 0.44755458  E.inc.convex   inc  7.433449 #> 330 10.2727203  1.0777063          NA 0.24051502 E.dec.concave   dec 10.272720 #> 331  9.5975067         NA          NA 0.18071219         L.inc   inc  9.597507 #> 332  9.5975067         NA          NA 0.18071219         L.inc   inc  9.597507 #> 333  7.7633888  0.2414632   0.9158559 0.31711928       GP.bell  bell  8.668420 #> 336 25.8775428  0.0000000 -11.8133493 1.05863155          GP.U     U  4.430464 #> 338 10.3977914         NA          NA 0.31334720         L.inc   inc 10.397791 #> 339  2.8818475  1.4831086   0.9310508 0.41140105      lGP.bell  bell  2.881847 #> 340  5.4338860  2.2028885   1.3974511 0.27541245       GP.bell  bell  6.426716 #> 341  6.3598648  2.1273579  -4.1079331 1.11545022          GP.U     U  3.480083 #> 342  2.5445734         NA          NA 0.88166215         L.inc   inc  2.544573 #> 343 11.5544508  2.3238072  -0.7635036 0.23894341          GP.U     U 11.184472 #> 344 10.4291831 -2.6796044          NA 0.37877170  E.dec.convex   dec 10.429183 #> 346  9.6726997         NA          NA 0.45436857         L.inc   inc  9.672700 #> 350  5.5944775  1.7426689          NA 0.51295133  E.inc.convex   inc  5.594478 #> 354  5.6099340  1.8216559          NA 0.32521096  E.inc.convex   inc  5.609934 #> 357  7.4650252  1.7793179          NA 0.55020692  E.inc.convex   inc  7.465025 #> 358  7.1131979  2.2776491          NA 0.30554731 E.dec.concave   dec  7.113198 #> 360  7.1131979  2.2776491          NA 0.30554731 E.dec.concave   dec  7.113198 #> 361  9.3779405  0.8420820          NA 0.38873834  E.inc.convex   inc  9.377940 #> 362 11.5919778  2.1014401  -1.3549521 0.53260300         lGP.U     U 11.591978 #> 364 10.0143263         NA          NA 0.27962037         L.inc   inc 10.014326 #> 365 17.9024313         NA          NA 0.17878483         L.dec   dec 17.902431 #> 368 13.9040590  1.3987102          NA 0.44692567 E.dec.concave   dec 13.904059 #> 370  6.1183998 -2.3714972          NA 0.59801495  E.dec.convex   dec  6.118400 #> 372 13.8162214  1.9596785  -3.2185534 0.39523662          GP.U     U 11.147673 #> 375 11.8055777  1.3537714          NA 0.50658959  E.inc.convex   inc 11.805578 #> 376  7.3479036         NA          NA 0.43229217         L.dec   dec  7.347904 #> 378 13.3150381  1.2295545          NA 0.21279936 E.dec.concave   dec 13.315038 #> 379  9.1311118 -2.2535099          NA 0.26268812 E.inc.concave   inc  9.131112 #> 380 10.5378650  0.8143290          NA 0.45401830 E.dec.concave   dec 10.537865 #> 384  6.3162507  5.0891995          NA 0.46725727  E.inc.convex   inc  6.316251 #> 386 10.0567043         NA          NA 0.16441109         L.inc   inc 10.056704 #> 387 10.0567043         NA          NA 0.16441109         L.inc   inc 10.056704 #> 389  5.1148212  1.4084038          NA 1.09855421  E.inc.convex   inc  5.114821 #> 391  8.3714801         NA          NA 0.25820328         L.dec   dec  8.371480 #> 394  9.4154096  3.0079390          NA 0.20173024 E.dec.concave   dec  9.415410 #> 395 10.3811233  3.1733712          NA 0.13779241  E.inc.convex   inc 10.381123 #> 397 23.7778473  0.0000000 -10.9292695 0.88531156          GP.U     U  6.674833 #> 399  7.6939508  1.5471002   0.6661478 0.19149575       GP.bell  bell  8.207650 #> 401  8.3205953  2.3566612   1.6122935 0.35325412       GP.bell  bell  9.340510 #> 404 13.0053551  1.6480345          NA 0.24599239 E.dec.concave   dec 13.005355 #> 405  4.8721779         NA          NA 0.43574679         L.inc   inc  4.872178 #> 408 12.7509474  2.2781947  -2.6699053 0.24834756          GP.U     U 10.429737 #> 409  8.9310280  3.3853270          NA 0.34811954  E.inc.convex   inc  8.931028 #> 410 10.8334321  1.3088554          NA 0.28990436 E.dec.concave   dec 10.833432 #> 411 14.5173033  1.8299680  -2.9355534 1.00890423          GP.U     U 12.797480 #> 414  8.2742116         NA          NA 0.31619541         L.dec   dec  8.274212 #> 416 15.2527459  2.3845901  -1.0454945 0.25908843          GP.U     U 14.589230 #> 419  8.3222889  0.8805994          NA 0.48194682  E.inc.convex   inc  8.322289 #> 420  8.4387577  1.1156241          NA 0.37889392  E.inc.convex   inc  8.438758 #> 422  3.9580970         NA          NA 0.87902801         L.inc   inc  3.958097 #> 427  9.9736456  2.3940384  -4.7016243 0.59130862          GP.U     U  6.459487 #> 428  9.9736456  2.3940384  -4.7016243 0.59130862          GP.U     U  6.459487 #> 430  7.5408033  1.2173378          NA 0.27550558  E.inc.convex   inc  7.540803 #> 433 11.7688844  1.0415715          NA 0.21113446 E.dec.concave   dec 11.768884 #> 437  7.6097461         NA          NA 0.30468219         L.dec   dec  7.609746 #> 439  3.4938885  0.8961284          NA 0.99563693  E.inc.convex   inc  3.493888 #> 441  3.4938885  0.8961284          NA 0.99563693  E.inc.convex   inc  3.493888 #> 443  7.8034297         NA          NA 0.65170810         L.inc   inc  7.803430 #> 445 12.9287491 -1.3776799          NA 0.29718879  E.dec.convex   dec 12.928749 #> 447  9.8736895  1.1503631          NA 0.61355815  E.inc.convex   inc  9.873690 #> 450 11.4665408         NA          NA 0.24072663         L.dec   dec 11.466541 #> 453 11.2188707  1.9158332   0.6101410 0.15859610       GP.bell  bell 11.591422 #> 454 11.2188707  1.9158332   0.6101410 0.15859610       GP.bell  bell 11.591422 #> 457  9.9160221  1.0820381          NA 0.43570777 E.dec.concave   dec  9.916022 #> 458  9.9160221  1.0820381          NA 0.43570777 E.dec.concave   dec  9.916022 #> 460  6.1955178         NA          NA 0.64907510         L.dec   dec  6.195518 #> 461 11.5983183         NA          NA 0.24519679         L.inc   inc 11.598318 #> 464 11.5369318         NA          NA 0.28696334         L.dec   dec 11.536932 #> 465  7.6420694  1.9968840          NA 0.29198344  E.inc.convex   inc  7.642069 #> 466 13.6080352  2.3215767          NA 0.23573761 E.dec.concave   dec 13.608035 #> 467 11.5233287  0.8734262          NA 0.54421378 E.dec.concave   dec 11.523329 #> 468  8.8190315  0.7225067          NA 0.17256242 E.dec.concave   dec  8.819032 #> 469  6.1391526  3.1550982  -1.2353559 0.46567636         lGP.U     U  6.139153 #> 470 15.5969330         NA          NA 0.18311723         L.inc   inc 15.596933 #> 471  7.1664552  1.8676771          NA 0.53449306 E.dec.concave   dec  7.166455 #> 473 14.2054782         NA          NA 0.46399131         L.inc   inc 14.205478 #> 475 12.7384191  1.6671166          NA 0.51466168  E.inc.convex   inc 12.738419 #> 476  7.6278041 -2.0128076          NA 0.32054437 E.inc.concave   inc  7.627804 #> 479 18.4632294         NA          NA 0.20247498         L.dec   dec 18.463229 #> 480 18.4632294         NA          NA 0.20247498         L.dec   dec 18.463229 #> 481 11.7480225  2.3988301  -1.6451186 0.34020978          GP.U     U 10.588494 #> 482  5.8879508  3.3358199          NA 0.44022250  E.inc.convex   inc  5.887951 #> 483  9.3907657         NA          NA 0.35251384         L.inc   inc  9.390766 #> 486 12.5673623  2.0444975  -2.6933806 0.70145770          GP.U     U 10.540594 #> 488  4.4751185 -1.3700499          NA 0.65855748 E.inc.concave   inc  4.475119 #> 490  8.3079954 -2.3133165          NA 0.42499412  E.dec.convex   dec  8.307995 #> 491  8.3079954 -2.3133165          NA 0.42499412  E.dec.convex   dec  8.307995 #> 492 10.3737271  1.3213539          NA 0.46734668  E.inc.convex   inc 10.373727 #> 493 16.8203565         NA          NA 0.24465590         L.dec   dec 16.820356 #> 494  3.5216604  1.5925756   1.6525193 0.71149572      lGP.bell  bell  3.521660 #> 495 11.1141357  3.0740721  -0.5950246 0.20511033         lGP.U     U 11.114136 #> 496  6.9911665         NA          NA 0.68942828         L.inc   inc  6.991166 #> 498  8.6675517         NA          NA 0.23785120         L.inc   inc  8.667552 #> 499  8.6675517         NA          NA 0.23785120         L.inc   inc  8.667552 #> 500  8.8683481  2.2554363  -6.3717984 0.76503106          GP.U     U  3.081979 #> 501 11.8312797  2.0127634  -2.1716042 0.35429372          GP.U     U 10.482349 #> 502  6.9247347         NA          NA 0.53935448         L.inc   inc  6.924735 #> 504  5.1107369  2.3273524          NA 0.49190939  E.inc.convex   inc  5.110737 #> 505 14.3133366  2.0401909  -2.2874180 0.47711867          GP.U     U 12.552174 #> 509 11.6564745  0.8059689          NA 0.34163752 E.dec.concave   dec 11.656474 #> 513  2.8568072  1.2403251          NA 0.72920067  E.inc.convex   inc  2.856807 #> 514  2.8568072  1.2403251          NA 0.72920067  E.inc.convex   inc  2.856807 #> 515  3.7375623         NA          NA 0.66526211         L.inc   inc  3.737562 #> 517  4.4669724  0.9312615          NA 1.17808168  E.inc.convex   inc  4.466972 #> 518  7.7051920  2.7907400  -1.3259250 0.46062229         lGP.U     U  7.705192 #> 519 11.8729554  1.6928649          NA 0.36955986  E.inc.convex   inc 11.872955 #> 520  5.0903345  1.5288013          NA 0.24985468  E.inc.convex   inc  5.090334 #> 521  3.2368169  1.7099772   1.2535246 0.47283855       GP.bell  bell  3.614205 #> 522 11.2851985  0.7767753          NA 0.58488759  E.inc.convex   inc 11.285199 #> 523 11.1769600  2.5412298          NA 0.24873284 E.dec.concave   dec 11.176960 #> 525  3.3180250  1.2611850   0.8999648 0.48348498      lGP.bell  bell  3.318025 #> 526  2.9577864         NA          NA 0.54268515         L.inc   inc  2.957786 #> 527  5.8568962  1.4500622  -1.9460898 0.98274605         lGP.U     U  5.856896 #> 528 10.1316456         NA          NA 0.28742947         L.inc   inc 10.131646 #> 531  6.8771861  0.9719432          NA 0.65133666 E.dec.concave   dec  6.877186 #> 534 11.7948434  1.8803822  -1.7229567 0.53837776          GP.U     U 10.564068 #> 535  6.6915012  0.9153870          NA 0.99255522  E.inc.convex   inc  6.691501 #> 540  4.8284296  2.0830008          NA 0.73289707  E.inc.convex   inc  4.828430 #> 542  4.9989594  1.5821319  -1.2090070 0.51207828         lGP.U     U  4.998959 #> 543 14.5772553  2.2981412  -1.5915164 0.53119435          GP.U     U 13.648609 #> 544 12.2812084  1.0480454          NA 0.31467644 E.dec.concave   dec 12.281208 #> 546  2.4794339         NA          NA 0.52220615         L.inc   inc  2.479434 #> 547  2.6824742  1.2062259          NA 0.82653462  E.inc.convex   inc  2.682474 #> 549  4.4432065  1.5956017  -2.0801672 1.01087060         lGP.U     U  4.443206 #> 551  3.9219997 -1.4167347          NA 0.80658748 E.inc.concave   inc  3.922000 #> 552  2.9837278         NA          NA 1.23243335         L.inc   inc  2.983728 #> 553  3.2938960         NA          NA 0.78506590         L.inc   inc  3.293896 #> 554  4.7820339  0.7862608          NA 0.62138156 E.dec.concave   dec  4.782034 #> 556  8.9741606 -0.8263232          NA 0.28582133 E.inc.concave   inc  8.974161 #> 558  6.9317875         NA          NA 0.37680979         L.inc   inc  6.931787 #> 559 10.6317327  1.8611164  -1.6585672 0.40393199          GP.U     U  9.349429 #> 561  6.2030766  1.3022662          NA 0.31243642 E.dec.concave   dec  6.203077 #> 562  6.2030766  1.3022662          NA 0.31243642 E.dec.concave   dec  6.203077 #> 565  8.8032367 -2.4187724          NA 0.22248510  E.dec.convex   dec  8.803237 #> 566  6.2678143 -1.4799430          NA 0.46551188 E.inc.concave   inc  6.267814 #> 567  4.1003451  0.9665863          NA 0.83033880  E.inc.convex   inc  4.100345 #> 569  5.2877014         NA          NA 0.65093913         L.inc   inc  5.287701 #> 571  2.6618273  1.8081921   1.5558322 0.59126123       GP.bell  bell  3.733593 #> 572  4.9407625         NA          NA 0.47588238         L.inc   inc  4.940763 #> 573 11.7181620         NA          NA 0.49107177         L.inc   inc 11.718162 #> 574  6.8551980 -0.3848874          NA 0.24733881 E.inc.concave   inc  6.855198 #> 575  6.0290060  1.1910100          NA 0.60886000  E.inc.convex   inc  6.029006 #> 577  6.8208872  2.2045847  -1.9822962 0.65642859          GP.U     U  5.532363 #> 579  2.3530681         NA          NA 1.29727813         L.inc   inc  2.353068 #> 580  2.3530681         NA          NA 1.29727813         L.inc   inc  2.353068 #> 581  7.8537519  3.5301455  -1.0908882 0.28620983         lGP.U     U  7.853752 #> 583 16.1210861  1.6875592          NA 0.25581662  E.inc.convex   inc 16.121086 #> 585  6.9329387  1.5675702          NA 0.50617193 E.dec.concave   dec  6.932939 #> 586  5.9474858  2.1464196  -1.2818324 0.48811443         lGP.U     U  5.947486 #> 587  5.9474858  2.1464196  -1.2818324 0.48811443         lGP.U     U  5.947486 #> 588 12.9839302  5.0595658  -2.4186880 0.32894425          GP.U     U 12.332673 #> 590 11.8293086         NA          NA 1.20927918         L.inc   inc 11.829309 #> 591  8.0048304  1.2968103          NA 0.33827142  E.inc.convex   inc  8.004830 #> 593  2.7094606  1.8595387          NA 0.73835019  E.inc.convex   inc  2.709461 #> 595  7.5037249         NA          NA 0.40049288         L.dec   dec  7.503725 #> 596  2.6582772  2.6722696   4.3931116 0.45650946       GP.bell  bell  5.663831 #> 597  5.2667162  1.7742492          NA 0.45397783 E.dec.concave   dec  5.266716 #> 598  8.2084258 -2.0754915          NA 0.30806244 E.inc.concave   inc  8.208426 #> 599  8.2084258 -2.0754915          NA 0.30806244 E.inc.concave   inc  8.208426 #> 603  3.3517045         NA          NA 0.78185445         L.inc   inc  3.351704 #> 604 -4.6684484  2.7306565  14.1086676 0.29870979       GP.bell  bell  8.700290 #> 606 15.0002172         NA          NA 0.53837112         L.inc   inc 15.000217 #> 608  7.1764685  1.0238480          NA 0.42350852 E.dec.concave   dec  7.176469 #> 610  2.7836841  0.8429907          NA 0.60237813  E.inc.convex   inc  2.783684 #> 611  8.7976822 -1.8935670          NA 0.47334309 E.inc.concave   inc  8.797682 #> 612  9.5804433  0.9456406          NA 0.19945603  E.inc.convex   inc  9.580443 #> 614  9.5804433  0.9456406          NA 0.19945603  E.inc.convex   inc  9.580443 #> 615  9.5804433  0.9456406          NA 0.19945603  E.inc.convex   inc  9.580443 #> 616  5.1115295         NA          NA 0.40444003         L.inc   inc  5.111529 #> 617  8.3996060  3.2698204          NA 0.21379500  E.inc.convex   inc  8.399606 #> 618  6.0977853  2.1816572  -3.1142421 1.03760938          GP.U     U  4.749125 #> 619  6.0977853  2.1816572  -3.1142421 1.03760938          GP.U     U  4.749125 #> 620  2.6041848  1.0531930          NA 0.75747748  E.inc.convex   inc  2.604185 #> 623  2.7776193  1.5555118   1.7762050 0.50391975      lGP.bell  bell  2.777619 #> 624  5.3838933         NA          NA 0.89586768         L.inc   inc  5.383893 #> 626  5.0070495  2.6958540          NA 0.52415863  E.inc.convex   inc  5.007050 #> 630  8.2625336  0.7222172          NA 0.96123411 E.dec.concave   dec  8.262534 #> 631 11.8824074  1.7807252          NA 0.31764055 E.dec.concave   dec 11.882407 #> 634  6.5549589         NA          NA 0.44384894         L.inc   inc  6.554959 #> 641 13.3495350 -1.8926198          NA 0.34219661  E.dec.convex   dec 13.349535 #> 642 15.6634034 -2.0276704          NA 0.22497205 E.inc.concave   inc 15.663403 #> 643 17.0456861         NA          NA 0.30817653         L.inc   inc 17.045686 #> 644 15.5325419  0.9010627          NA 0.14782250  E.inc.convex   inc 15.532542 #> 645 12.3446582 -2.4650317          NA 0.25729560  E.dec.convex   dec 12.344658 #> 646 15.7385354  0.8902771          NA 0.15980885  E.inc.convex   inc 15.738535 #>        yrange maxychange   xextrem   yextrem   BMD.zSD   BMR.zSD BMD.xfold #> 1   0.4346034  0.4346034        NA        NA 2.2237393  7.219029        NA #> 2   0.4556672  0.4556672        NA        NA 0.5279668  5.815850        NA #> 5   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 6   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 7   0.3498078  0.3498078        NA        NA 1.1542677  7.807077        NA #> 8   0.6010677  0.6010677        NA        NA 0.1582542  6.624146        NA #> 9   0.6721023  0.6721023        NA        NA 0.1821546  5.919602 0.8318574 #> 10  0.1912790  0.1912790 1.4588204  7.097604 0.7315304  7.218025        NA #> 11  0.4520636  0.4520636        NA        NA 0.2528186  6.718211        NA #> 12  0.4392508  0.4392508        NA        NA 0.1139635  7.404943        NA #> 13  0.1503987  0.1503987        NA        NA 2.9766289  6.409775        NA #> 14  0.4491366  0.4491366        NA        NA 2.0261156  5.621033        NA #> 16  0.4771993  0.4771993        NA        NA 3.0418937  5.517232        NA #> 17  0.4771993  0.4771993        NA        NA 3.0418937  5.517232        NA #> 18  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 19  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 20  0.3520280  0.3520280        NA        NA 5.9997652  5.111507        NA #> 22  0.2455556  0.2138158 1.4069463  5.081330 0.6597819  4.973670        NA #> 23  0.2455556  0.2138158 1.4069463  5.081330 0.6597819  4.973670        NA #> 25  0.2833937  0.2833937        NA        NA 3.8465968  5.334884        NA #> 26  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 27  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 28  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 29  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 30  0.4530573  0.4530573 3.2236437  5.370402 1.5389057  5.137260        NA #> 31  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 32  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 33  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 34  0.6980825  0.6470232 0.5875851  5.277052 2.2442671  5.593469 3.4561250 #> 35  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 36  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 37  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 39  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 40  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 41  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 42  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 43  0.3960491  0.3960491        NA        NA 0.8821213  5.812020        NA #> 44  0.8109383  0.5779147 1.8678530  5.314907 0.6370853  5.204453 6.6295891 #> 46  0.2284144  0.2284144        NA        NA 5.1225625  6.962891        NA #> 47  0.2284144  0.2284144        NA        NA 5.1225625  6.962891        NA #> 48  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 49  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 50  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 51  0.3629299  0.3629299        NA        NA 1.1972137  4.676873        NA #> 52  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 53  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 54  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 55  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 56  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 57  0.5113868  0.5113868        NA        NA 0.9586777  5.451635        NA #> 58  0.5522909  0.2800374 2.6269663  4.434761 0.8261462  4.582251        NA #> 59  0.3939227  0.3939227        NA        NA 2.2111898  5.401608        NA #> 60  0.3939227  0.3939227        NA        NA 2.2111898  5.401608        NA #> 61  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 62  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 63  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 64  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 65  0.4981938  0.3405782 1.0482802  4.349209 0.7805309  4.514055        NA #> 67  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 68  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 69  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 70  0.2683749  0.2683749        NA        NA 0.8908528  6.218640        NA #> 71  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 72  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 73  0.5966741  0.5966741        NA        NA 5.7972864  6.318483        NA #> 75  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 76  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 77  0.6573939  0.5832748 1.3892912  5.599435 3.9480418  5.376875 7.2728900 #> 79  0.7838623  0.5570660 1.9279453  6.044699 1.8746151  6.044497        NA #> 80  0.7838623  0.5570660 1.9279453  6.044699 1.8746151  6.044497        NA #> 81  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 82  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 83  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 84  0.6129220  0.4695398 1.3702809  5.293484 3.6094654  5.605756        NA #> 85  1.4451322  1.4451322        NA        NA 1.9131972 10.434091 4.9790105 #> 86  1.4260064  1.4260064        NA        NA 0.4667565 12.141363 3.8804658 #> 87  1.3187707  1.3187707        NA        NA 0.5356979 12.130711 5.1282913 #> 88  0.5667240  0.5667240        NA        NA 5.0725915 16.555837        NA #> 91  0.9321607  0.9321607        NA        NA 1.4702189 12.742154        NA #> 95  1.5755952  1.5755952        NA        NA 3.7973745 16.088026        NA #> 99  0.8397821  0.8397821        NA        NA 2.9983980 14.269939        NA #> 102 0.5072807  0.5072807        NA        NA 2.4531384  9.203679        NA #> 103 0.7254029  0.7254029        NA        NA 1.1767628  7.538193 6.5436013 #> 104 0.7254029  0.7254029        NA        NA 1.1767628  7.538193 6.5436013 #> 106 1.5164596  1.5164596        NA        NA 0.5582910  6.835559 0.9033421 #> 109 1.0235083  1.0235083        NA        NA 2.4588452 15.481716        NA #> 110 1.0956824  1.0037607 3.1688140 11.302504 0.7285396 10.574734        NA #> 111 1.9146107  1.3629446 2.6438900  4.074770 1.0793925  4.716948 0.8236293 #> 115 2.8622806  2.8622806        NA        NA 1.8224349 13.088531 2.8499557 #> 116 0.6953599  0.6953599        NA        NA 5.1699097  8.981100        NA #> 117 0.6275920  0.6275920        NA        NA 2.1422646 17.527739        NA #> 120 2.3898736  1.6382451 1.5194196  8.501371 4.0482830 10.058898 4.2241830 #> 121 1.2471032  1.2471032        NA        NA 1.9341638 12.868353        NA #> 122 2.1130749  2.1130749        NA        NA 1.0443056 14.253865 5.1497136 #> 123 2.6271853  1.4457016 2.5679456 11.420407 0.7339797 10.793374 1.6629870 #> 125 0.5298971  0.5298971        NA        NA 2.8965322 10.995486        NA #> 127 1.1100339  1.1100339        NA        NA 3.7319420 15.355018        NA #> 128 1.1159414  0.6118908 2.9011529  9.264556 1.2030629  9.461066        NA #> 129 1.6230068  1.6230068        NA        NA 5.4645388 12.371150 6.3516074 #> 131 2.6773137  2.0535315 1.7419187  6.482804 0.7603447  6.270519 1.3328628 #> 132 2.6773137  2.0535315 1.7419187  6.482804 0.7603447  6.270519 1.3328628 #> 133 1.8696263  1.8696263 1.7108205  6.807665 0.5760685  8.007273 0.6673274 #> 134 1.0214920  0.5111417 2.4191926 10.572500 0.7894809 10.835516        NA #> 137 0.7231739  0.7231739        NA        NA 5.9160090 12.734382        NA #> 140 0.6355020  0.6355020        NA        NA 2.1358264 11.499543        NA #> 141 0.9825269  0.7772726 1.5731637 10.445494 1.2700689 10.453878        NA #> 142 0.9032233  0.9032233        NA        NA 2.0184340 10.336580        NA #> 143 2.6423399  2.6423399        NA        NA 2.2280425  7.930351 3.4134579 #> 147 1.3202534  1.3202534        NA        NA 4.7401393 17.570230        NA #> 148 1.0314101  1.0314101        NA        NA 2.8292974 15.140090        NA #> 149 1.6382243  1.6382243        NA        NA 4.6483666  8.355062 5.3321567 #> 150 1.0445220  1.0445220        NA        NA 2.0676187  5.988317 3.5948366 #> 152 0.9374300  0.9374300        NA        NA 2.7244982 12.150270        NA #> 156 1.4365255  1.4365255        NA        NA 2.8183056  4.865309 1.9639952 #> 157 1.6606248  1.6606248        NA        NA 0.6668007  8.646709 1.0329475 #> 158 1.3602197  1.3602197        NA        NA 1.6366905 12.012784 6.0198387 #> 161 0.7968439  0.5333591 1.8275480 10.728590 4.9242758 11.289442        NA #> 164 0.8762376  0.4930563 2.4622535 14.598622 0.7873949 14.865989        NA #> 165 2.8436971  2.8436971        NA        NA 1.5139296  9.859191 2.4503823 #> 166 1.0312987  0.7141166 2.5296882 12.059797 2.0821730 12.036717        NA #> 167 0.7189896  0.7189896        NA        NA 1.9091328 11.151566        NA #> 169 1.4213819  1.4213819        NA        NA 1.4506148  8.640249 3.8857687 #> 170 1.2475819  0.6844412 2.1869740 10.287496 0.9126300  9.996696        NA #> 171 2.4354311  2.4354311        NA        NA 2.2908652  8.270548 2.4809261 #> 172 2.4354311  2.4354311        NA        NA 2.2908652  8.270548 2.4809261 #> 174 2.7438223  1.5115754 2.4022793  6.544762 0.9531756  7.044940 1.0251183 #> 178 1.4297124  0.9781543 2.8555099 12.530005 0.8151722 11.964402        NA #> 179 0.8849830  0.8849830        NA        NA 1.7627459 13.051530        NA #> 180 0.7551267  0.7551267        NA        NA 2.3637907 13.689907        NA #> 181 0.7551267  0.7551267        NA        NA 2.3637907 13.689907        NA #> 183 1.2492267  1.2492267        NA        NA 0.2370668  7.118030 0.5035207 #> 184 1.3030102  1.3030102        NA        NA 2.6853208  6.936227 3.2613039 #> 185 1.3030102  1.3030102        NA        NA 2.6853208  6.936227 3.2613039 #> 186 0.9204590  0.9204590        NA        NA 5.7121222  8.526747 6.5967242 #> 188 1.3407136  1.3407136 2.3167014  5.508719 1.1232833  4.812898 0.9282272 #> 190 1.0456724  0.5849261 2.5819255 12.953373 1.0452152 12.711281        NA #> 193 1.7942520  1.7942520 1.8809478  4.835845 0.8218053  3.919141 0.5103535 #> 196 2.0216456  2.0216456 1.7372724 10.256965 0.6687799 11.746900 0.9695193 #> 197 0.7772864  0.7772864        NA        NA 3.1063283  8.453689        NA #> 198 0.8961317  0.8961317        NA        NA 2.8878327  9.960173        NA #> 199 0.8369527  0.8369527        NA        NA 3.0767840 10.665710        NA #> 200 0.8369527  0.8369527        NA        NA 3.0767840 10.665710        NA #> 201 2.1370159  2.1370159 1.9560222  7.517079 0.9072409  8.504697 0.8197933 #> 202 2.1370159  2.1370159 1.9560222  7.517079 0.9072409  8.504697 0.8197933 #> 203 2.1370159  2.1370159 1.9560222  7.517079 0.9072409  8.504697 0.8197933 #> 205 0.5902918  0.5902918 2.8275360 13.131900 0.6768404 13.520114        NA #> 207 1.3762816  0.9567808 2.1064523  4.156535 0.6470138  3.711818 0.3740702 #> 208 1.6710504  0.9702795 2.5547012  9.167948 1.4222300  9.025390 6.4602636 #> 211 0.6474606  0.6474606 2.6085834 10.967005 0.8877879 11.371960        NA #> 214 1.7181058  1.7181058 2.5959623  6.050711 0.8824251  7.059065 0.9338753 #> 215 2.2364894  2.2364894        NA        NA 5.6222008 11.761334 6.0286569 #> 217 0.8034587  0.8034587        NA        NA 2.6305103 10.367028        NA #> 218 2.0437685  2.0437685 2.0807712 11.287128 0.6438946 12.651590 1.0021942 #> 220 2.0758668  2.0758668        NA        NA 2.0521944  4.970290 1.3824542 #> 221 1.0880222  0.6435345 2.6519769 10.111091 0.7392714 10.442619        NA #> 222 0.7335175  0.7335175        NA        NA 2.3366923 11.128418        NA #> 225 0.5248384  0.5248384        NA        NA 5.1318609 11.618993        NA #> 228 0.7767741  0.4624698 2.5397977 12.930338 0.9318105 12.801999        NA #> 229 0.9039016  0.9039016        NA        NA 1.9875757 10.625249        NA #> 232 0.9872534  0.6272225 2.2864089  4.529785 1.0599593  4.357240 0.8573274 #> 233 0.9872534  0.6272225 2.2864089  4.529785 1.0599593  4.357240 0.8573274 #> 235 0.8349853  0.8349853 1.9585039 12.684587 0.8218319 12.277238        NA #> 236 0.9147026  0.9147026        NA        NA 5.6891398 11.225742        NA #> 237 1.5763081  1.5763081        NA        NA 5.0780515 15.319847 6.6301060 #> 238 1.5763081  1.5763081        NA        NA 5.0780515 15.319847 6.6301060 #> 240 1.5763081  1.5763081        NA        NA 5.0780515 15.319847 6.6301060 #> 242 1.5864088  1.5864088        NA        NA 2.9988610  6.335070 2.3480977 #> 243 0.7000964  0.4180970 2.7394740 13.155918 0.7253125 12.908904        NA #> 245 0.9360331  0.9360331        NA        NA 5.4609223  8.784277 6.4241875 #> 246 0.9360331  0.9360331        NA        NA 5.4609223  8.784277 6.4241875 #> 248 1.1881624  1.1881624        NA        NA 2.7107625  7.485642 3.9065761 #> 251 0.6196609  0.6196609        NA        NA 2.0471215 18.118018        NA #> 252 0.6196609  0.6196609        NA        NA 2.0471215 18.118018        NA #> 253 0.9857557  0.9857557 1.7586717 12.538608 0.5508093 11.830971        NA #> 255 3.5343401  3.5343401        NA        NA 5.6112409  5.353093 4.5608152 #> 256 0.7471482  0.7471482        NA        NA 0.8865055 11.032798        NA #> 257 1.2440698  1.2440698        NA        NA 5.0770781 10.949145 6.5328956 #> 259 0.5716752  0.5716752        NA        NA 1.9127607 11.079639        NA #> 260 1.5336580  1.5336580        NA        NA 0.8327309  5.842996 0.8310632 #> 263 0.6992226  0.6992226        NA        NA 2.7737899 10.795754        NA #> 265 0.8804012  0.8804012        NA        NA 1.3559120  9.736512        NA #> 266 1.7011398  1.7011398        NA        NA 0.3267449  4.330747 0.2076643 #> 270 2.1967634  1.1526784 2.4964781  7.664156 1.0466404  8.045507 1.2705901 #> 272 1.4379270  1.4379270        NA        NA 2.2908810  5.647073 2.3750592 #> 274 0.4392427  0.4392427        NA        NA 0.8198382 12.915386        NA #> 275 1.0315095  1.0315095        NA        NA 4.0915465 11.369691        NA #> 276 1.5599561  1.5599561        NA        NA 0.6538412  6.522996 1.1581900 #> 277 0.6744958  0.6744958        NA        NA 2.7857533  9.296354        NA #> 279 1.0236475  1.0236475        NA        NA 4.8512276  6.437306 6.0863878 #> 280 1.2704995  1.2704995        NA        NA 4.6939228  8.992824 6.2252369 #> 282 0.9935949  0.9935949        NA        NA 1.0757865 13.013089        NA #> 285 0.9088697  0.6346895 1.9563733  8.228779 1.2951527  8.263990        NA #> 286 1.5377875  1.5377875        NA        NA 2.7988468  4.326174 1.5855784 #> 287 0.8865933  0.8865933        NA        NA 2.4985646  7.870504 6.1363560 #> 288 0.8865933  0.8865933        NA        NA 2.4985646  7.870504 6.1363560 #> 291 1.0796687  1.0796687        NA        NA 2.7253570  4.184793 2.8427097 #> 293 0.5863849  0.5863849        NA        NA 4.7734831 10.039788        NA #> 295 0.6009495  0.6009495        NA        NA 2.8542954  7.788941        NA #> 296 1.0516373  1.0516373        NA        NA 3.1885322 12.201088        NA #> 297 0.5732814  0.5732814        NA        NA 2.7886737 10.875528        NA #> 298 0.5732814  0.5732814        NA        NA 2.7886737 10.875528        NA #> 299 1.6474111  1.6474111        NA        NA 5.2621976  8.351219 5.9699880 #> 301 0.7755726  0.7755726        NA        NA 2.4332531 12.867502        NA #> 303 0.4170526  0.4170526        NA        NA 2.3412265  9.694792        NA #> 305 1.3091568  1.3091568        NA        NA 5.7300529 12.494781 6.6231563 #> 306 0.8942070  0.8942070        NA        NA 2.1527950 12.630242        NA #> 307 0.8942070  0.8942070        NA        NA 2.1527950 12.630242        NA #> 308 0.7564918  0.4945771 0.9950738  6.811249 0.7116013  6.836896        NA #> 312 0.7474307  0.7474307 2.0515078 12.916014 0.7635263 12.484552        NA #> 314 1.9400638  1.9400638        NA        NA 0.7046383  9.323165 1.4207090 #> 317 1.3754663  0.6962531 2.3761712  9.503131 1.4872255  9.619952        NA #> 320 1.5861301  1.0776961 2.6022023  7.692274 2.5611897  7.692102 6.0661427 #> 321 1.5861301  1.0776961 2.6022023  7.692274 2.5611897  7.692102 6.0661427 #> 322 0.7486829  0.7486829        NA        NA 0.4060345  9.594926        NA #> 327 0.9864697  0.9864697        NA        NA 0.3747033  4.560371 0.5245918 #> 328 1.4292787  1.4292787        NA        NA 4.6236368  7.881004 5.4871571 #> 330 1.1401586  1.1401586        NA        NA 4.9624796 10.032205 6.5188896 #> 331 1.0483855  1.0483855        NA        NA 1.1429980  9.778219 6.0703879 #> 332 1.0483855  1.0483855        NA        NA 1.1429980  9.778219 6.0703879 #> 333 0.9156340  0.9048096 0.2414632  8.679245 1.7158581  8.351301 4.1888113 #> 336 3.1244464  2.4160958 2.3109888  2.014368 0.5585263  3.371832 0.2148246 #> 338 0.9549307  0.9549307        NA        NA 2.1758702 10.711139        NA #> 339 0.9310508  0.9310508 1.4831086  3.812898 0.5958514  3.293249 0.4972954 #> 340 1.0463324  0.6417115 2.2028885  6.831337 1.0293193  6.702129        NA #> 341 3.2718424  2.0436913 2.1273579  2.251932 1.5320368  2.364633 0.3746104 #> 342 1.8857419  1.8857419        NA        NA 3.1002661  3.426236 0.8947707 #> 343 0.7001329  0.3935249 2.3238072 10.790947 1.0252456 10.945529        NA #> 344 1.1746841  1.1746841        NA        NA 0.9378058 10.050411 4.4938667 #> 346 1.5034330  1.5034330        NA        NA 2.0040254 10.127068 4.2662140 #> 350 1.2917549  1.2917549        NA        NA 5.0794294  6.107429 5.2227689 #> 354 0.9567759  0.9567759        NA        NA 4.7558343  5.935145 5.6919180 #> 357 3.5130625  3.5130625        NA        NA 3.5491119  8.015232 4.0271629 #> 358 2.0350385  2.0350385        NA        NA 2.9236395  6.807651 4.4565040 #> 360 2.0350385  2.0350385        NA        NA 2.9236395  6.807651 4.4565040 #> 361 1.0233370  1.0233370        NA        NA 5.8164566  9.766679 6.5575207 #> 362 1.3549521  1.3549521 2.1014401 10.237026 0.8960631 11.059375 1.4831675 #> 364 0.7991327  0.7991327        NA        NA 2.3202186 10.293947        NA #> 365 0.4818421  0.4818421        NA        NA 2.4603955 17.723646        NA #> 368 2.0649632  2.0649632        NA        NA 4.5338399 13.457133 6.0836994 #> 370 1.6440213  1.6440213        NA        NA 0.9909542  5.520385 1.0195641 #> 372 2.1088211  1.5588160 1.9596785 10.597668 0.9547622 10.752436 5.8228192 #> 375 1.5309438  1.5309438        NA        NA 5.1540813 12.312167 6.2821526 #> 376 1.0939749  1.0939749        NA        NA 2.6202881  6.915611 4.4538453 #> 378 0.4899501  0.4899501        NA        NA 5.6128703 13.102239        NA #> 379 0.6274954  0.6274954        NA        NA 1.1382454  9.393800        NA #> 380 1.0448656  1.0448656        NA        NA 5.9525599 10.083847        NA #> 384 3.3807780  3.3807780        NA        NA 1.6037111  6.783508 2.0659663 #> 386 0.5490811  0.5490811        NA        NA 1.9855173 10.221115        NA #> 387 0.5490811  0.5490811        NA        NA 1.9855173 10.221115        NA #> 389 3.0879871  3.0879871        NA        NA 5.1982036  6.213375 4.1613342 #> 391 0.7062619  0.7062619        NA        NA 2.4242366  8.113277        NA #> 394 0.7998367  0.7998367        NA        NA 3.3387424  9.213679        NA #> 395 1.4755404  1.4755404        NA        NA 1.6108049 10.518916 5.6764686 #> 397 2.0091568  1.0916682 2.4592236  5.583165 1.3712891  5.789522 0.9112142 #> 399 0.6258898  0.4734413 1.5471002  8.360099 4.1335653  8.016154        NA #> 401 1.2548501  0.6624716 2.3566612  9.932889 0.9613178  9.693764        NA #> 404 0.8939560  0.8939560        NA        NA 4.5803310 12.759363        NA #> 405 1.2111865  1.2111865        NA        NA 2.3856251  5.307925 2.6674183 #> 408 1.0680948  0.7193997 2.2781947 10.081042 1.0862987 10.181390        NA #> 409 1.8924337  1.8924337        NA        NA 2.5443588  9.279148 4.5849528 #> 410 1.0002044  1.0002044        NA        NA 5.0301698 10.543528        NA #> 411 2.8615248  1.6457951 1.8299680 11.581750 1.1535189 11.788575 5.2775387 #> 414 0.8811392  0.8811392        NA        NA 2.3795238  7.958016 6.2267455 #> 416 0.7982567  0.4162785 2.3845901 14.207251 1.1340646 14.330141        NA #> 419 1.6551785  1.6551785        NA        NA 5.5456395  8.804236 6.0260053 #> 420 1.0612794  1.0612794        NA        NA 5.4871921  8.817652 6.3760243 #> 422 3.5996821  3.5996821        NA        NA 1.6192638  4.837125 0.7291239 #> 427 2.8125159  1.6250497 2.3940384  5.272021 0.7601546  5.868179 0.8418771 #> 428 2.8125159  1.6250497 2.3940384  5.272021 0.7601546  5.868179 0.8418771 #> 430 0.7148534  0.7148534        NA        NA 5.4786411  7.816309        NA #> 433 0.8109830  0.8109830        NA        NA 5.2343760 11.557750        NA #> 437 0.8412667  0.8412667        NA        NA 2.4015542  7.305064 5.9981247 #> 439 2.8504330  2.8504330        NA        NA 5.6894334  4.489525 4.7539040 #> 441 2.8504330  2.8504330        NA        NA 5.6894334  4.489525 4.7539040 #> 443 1.9375683  1.9375683        NA        NA 2.2303608  8.455138 2.6705919 #> 445 0.8217456  0.8217456        NA        NA 0.6120840 12.631560        NA #> 447 1.5447062  1.5447062        NA        NA 5.5743185 10.487248 6.1181961 #> 450 1.2515303  1.2515303        NA        NA 1.2754451 11.225814 6.0753329 #> 453 0.5794020  0.3418123 1.9158332 11.829012 0.9001452 11.750018        NA #> 454 0.5794020  0.3418123 1.9158332 11.829012 0.9001452 11.750018        NA #> 457 0.9890126  0.9890126        NA        NA 5.7470070  9.480314        NA #> 458 0.9890126  0.9890126        NA        NA 5.7470070  9.480314        NA #> 460 1.7150692  1.7150692        NA        NA 2.5095297  5.546443 2.3953832 #> 461 0.6495001  0.6495001        NA        NA 2.5033097 11.843515        NA #> 464 0.6734981  0.6734981        NA        NA 2.8253294 11.249968        NA #> 465 0.8555082  0.8555082        NA        NA 4.6189505  7.934053 6.4142382 #> 466 0.5824151  0.5824151        NA        NA 4.7196194 13.372298        NA #> 467 1.4382279  1.4382279        NA        NA 5.7829063 10.979115 6.4375378 #> 468 0.8953279  0.8953279        NA        NA 5.4417552  8.646469 6.6200856 #> 469 1.2353559  1.2353559 3.1550982  4.903797 1.3227556  5.673476 1.5114489 #> 470 0.4869360  0.4869360        NA        NA 2.4936551 15.780050        NA #> 471 1.3494676  1.3494676        NA        NA 4.9812861  6.631962 5.4957409 #> 473 1.3750723  1.3750723        NA        NA 2.2375015 14.669470        NA #> 475 1.2652916  1.2652916        NA        NA 5.1762835 13.253081        NA #> 476 0.9041080  0.9041080        NA        NA 0.8406026  7.948348 3.3682176 #> 479 0.5719003  0.5719003        NA        NA 2.3476324 18.260754        NA #> 480 0.5719003  0.5719003        NA        NA 2.3476324 18.260754        NA #> 481 1.0913351  0.6057451 2.3988301 10.102904 1.1650959 10.248284        NA #> 482 1.8038011  1.8038011        NA        NA 3.1061545  6.328173 3.7267989 #> 483 0.7929511  0.7929511        NA        NA 2.9478731  9.743279        NA #> 486 2.0494969  1.3828849 2.0444975  9.873982 5.2731825 11.242051 5.9137826 #> 488 1.7795910  1.7795910        NA        NA 0.6267952  5.133676 0.3931901 #> 490 1.5018619  1.5018619        NA        NA 0.7181485  7.883001 1.7061269 #> 491 1.5018619  1.5018619        NA        NA 0.7181485  7.883001 1.7061269 #> 492 0.9936782  0.9936782        NA        NA 5.6440554 10.841074        NA #> 493 0.7003740  0.7003740        NA        NA 2.3163527 16.575701        NA #> 494 1.6525193  1.6525193 1.5925756  5.174180 0.5751369  4.233156 0.4008074 #> 495 0.5950246  0.5950246 3.0740721 10.519111 0.8381449 10.909025        NA #> 496 1.4582159  1.4582159        NA        NA 3.1350631  7.680595 3.1791194 #> 498 0.7529821  0.7529821        NA        NA 2.0945933  8.905403        NA #> 499 0.7529821  0.7529821        NA        NA 2.0945933  8.905403        NA #> 500 1.9384481  1.3530192 2.2554363  2.496550 5.8011356  3.847010 0.7231269 #> 501 1.9945506  1.1718772 2.0127634  9.659675 0.5750563 10.128055 6.1142017 #> 502 1.1588701  1.1588701        NA        NA 3.0861609  7.464089 3.9623005 #> 504 1.4049630  1.4049630        NA        NA 4.4260549  5.602646 4.5019378 #> 505 1.6786893  1.1524342 2.0401909 12.025919 1.4522317 12.075055        NA #> 509 1.1207480  1.1207480        NA        NA 5.6739990 11.314837        NA #> 513 1.6477686  1.6477686        NA        NA 5.6272766  3.586008 4.4854464 #> 514 1.6477686  1.6477686        NA        NA 5.6272766  3.586008 4.4854464 #> 515 1.4557079  1.4557079        NA        NA 3.0303834  4.402824 1.7025240 #> 517 2.7369191  2.7369191        NA        NA 5.8469929  5.645054 4.9467474 #> 518 1.3259250  1.3259250 2.7907400  6.379267 0.6026376  7.244570 0.9306075 #> 519 0.9527003  0.9527003        NA        NA 5.0802181 12.242515        NA #> 520 0.7702132  0.7702132        NA        NA 4.9509541  5.340189 6.0080600 #> 521 1.2534643  0.8761367 1.7099772  4.490342 0.7375741  4.087043 0.5751990 #> 522 1.2238207  1.2238207        NA        NA 6.0576628 11.870086 6.5680391 #> 523 2.3341764  2.3341764        NA        NA 2.1622238 10.928227 4.9554389 #> 525 0.8999648  0.8999648 1.2611850  4.217990 0.5657408  3.801510 0.4566400 #> 526 1.2614322  1.2614322        NA        NA 2.8527457  3.500472 1.5548265 #> 527 1.9460898  1.9460898 1.4500622  3.910806 0.4011651  4.874150 0.2639840 #> 528 0.8116440  0.8116440        NA        NA 2.3482523 10.419075        NA #> 531 3.3631722  3.3631722        NA        NA 5.0398424  6.225849 5.0923826 #> 534 1.5216846  1.0295037 1.8803822 10.071887 4.9758852 11.102445        NA #> 535 2.2285391  2.2285391        NA        NA 5.8914318  7.684056 5.5312271 #> 540 3.1308885  3.1308885        NA        NA 3.8712302  5.561327 3.1637050 #> 542 1.2090070  1.2090070 1.5821319  3.789952 0.6363127  4.486881 0.6282973 #> 543 1.3570049  0.6941344 2.2981412 12.985739 1.3780037 13.117415        NA #> 544 1.4017054  1.4017054        NA        NA 5.0717760 11.966532 6.4927085 #> 546 1.2344106  1.2344106        NA        NA 2.8051842  3.001640 1.3319009 #> 547 2.6339438  2.6339438        NA        NA 5.2437498  3.509009 3.9184068 #> 549 2.0801672  2.0801672 1.5956017  2.363039 0.4677758  3.432336 0.2651867 #> 551 1.7353224  1.7353224        NA        NA 0.8742707  4.728587 0.3591303 #> 552 3.1999446  3.1999446        NA        NA 2.5538772  4.216161 0.6182950 #> 553 2.0616360  2.0616360        NA        NA 2.5250685  4.078962 1.0594414 #> 554 1.5426292  1.5426292        NA        NA 5.9163079  4.160652 5.7105061 #> 556 0.6086139  0.6086139        NA        NA 0.5237934  9.259982        NA #> 558 0.9495953  0.9495953        NA        NA 2.6312532  7.308597 4.8404495 #> 559 1.3525467  0.9762831 1.8611164  8.973165 4.7863633  9.753361 6.4487178 #> 561 1.1047895  1.1047895        NA        NA 5.0063684  5.890640 5.8855757 #> 562 1.1047895  1.1047895        NA        NA 5.0063684  5.890640 5.8855757 #> 565 0.7082924  0.7082924        NA        NA 0.8415993  8.580752        NA #> 566 1.1161200  1.1161200        NA        NA 0.7867886  6.733326 1.1989832 #> 567 2.4773277  2.4773277        NA        NA 5.5764311  4.930684 4.8975036 #> 569 1.5364463  1.5364463        NA        NA 2.8093253  5.938641 2.2820679 #> 571 1.4460633  0.9619972 1.8081921  4.217660 5.0186649  3.142332 1.0034930 #> 572 1.9620447  1.9620447        NA        NA 1.6083100  5.416645 1.6697987 #> 573 1.2941718  1.2941718        NA        NA 2.5161241 12.209234 6.0040817 #> 574 0.6072923  0.6072923        NA        NA 0.2013097  7.102537        NA #> 575 1.3284196  1.3284196        NA        NA 5.7071899  6.637866 5.6955727 #> 577 1.6331559  0.9393843 2.2045847  4.838591 1.7413609  4.875934 1.2937236 #> 579 2.7957572  2.7957572        NA        NA 3.0768950  3.650346 0.5581026 #> 580 2.7957572  2.7957572        NA        NA 3.0768950  3.650346 0.5581026 #> 581 1.0908882  1.0908882 3.5301455  6.762864 1.0281330  7.567542 1.9155915 #> 583 1.1239704  1.1239704        NA        NA 4.2421167 16.376903        NA #> 585 1.0866179  1.0866179        NA        NA 5.4593968  6.426767 5.9394660 #> 586 1.2818324  1.2818324 2.1464196  4.665653 0.7105856  5.459371 0.8008469 #> 587 1.2818324  1.2818324 2.1464196  4.665653 0.7105856  5.459371 0.8008469 #> 588 1.1820174  0.7790280 2.9011092 11.929683 1.8336510 12.003729        NA #> 590 3.5641413  3.5641413        NA        NA 2.2498351 13.038588 2.2008147 #> 591 1.6381642  1.6381642        NA        NA 4.6149428  8.343102 5.7104719 #> 593 1.5961529  1.5961529        NA        NA 5.2575129  3.447811 3.5740658 #> 595 1.2637546  1.2637546        NA        NA 2.1014113  7.103232 3.9372516 #> 596 2.4832543  1.3875575 2.6722696  7.051389 0.5554829  6.120341 0.6992043 #> 597 1.8241896  1.8241896        NA        NA 4.2864651  4.812738 4.5279917 #> 598 0.7835917  0.7835917        NA        NA 0.9822553  8.516488        NA #> 599 0.7835917  0.7835917        NA        NA 0.9822553  8.516488        NA #> 603 2.5521288  2.5521288        NA        NA 2.0314323  4.133559 0.8708476 #> 604 1.4684527  0.7399295 2.7306565  9.440219 0.6335929  8.998999        NA #> 606 1.3048116  1.3048116        NA        NA 2.7359803 15.538588        NA #> 608 1.5003885  1.5003885        NA        NA 5.3399279  6.752960 5.8776276 #> 610 1.5629901  1.5629901        NA        NA 5.8277486  3.386062 5.1779858 #> 611 1.7713152  1.7713152        NA        NA 0.5680459  9.271025 1.2444712 #> 612 0.7519149  0.7519149        NA        NA 5.3784638  9.779899        NA #> 614 0.7519149  0.7519149        NA        NA 5.3784638  9.779899        NA #> 615 0.7519149  0.7519149        NA        NA 5.3784638  9.779899        NA #> 616 1.1123253  1.1123253        NA        NA 2.4110229  5.515970 3.0471797 #> 617 1.0347975  1.0347975        NA        NA 2.8121975  8.613401 6.0472213 #> 618 3.0183770  1.7655821 2.1816572  2.983543 0.9510929  3.711516 0.4370000 #> 619 3.0183770  1.7655821 2.1816572  2.983543 0.9510929  3.711516 0.4370000 #> 620 2.0074095  2.0074095        NA        NA 5.6077502  3.361662 4.4929978 #> 623 2.2144941  2.2144941 1.6229804  4.992113 1.0642503  3.281539 0.9871425 #> 624 2.0734706  2.0734706        NA        NA 2.8650025  6.279761 1.7217797 #> 626 1.7075076  1.7075076        NA        NA 3.9228053  5.531208 3.8287058 #> 630 2.2773688  2.2773688        NA        NA 6.0081475  7.301299 5.8988929 #> 631 1.6071190  1.6071190        NA        NA 3.9104454 11.564767 6.1083670 #> 634 1.3536434  1.3536434        NA        NA 2.1742522  6.998808 3.2110326 #> 641 1.4448595  1.4448595        NA        NA 0.4939544 13.007338 4.2861144 #> 642 0.5907318  0.5907318        NA        NA 0.9251921 15.888375        NA #> 643 0.7444761  0.7444761        NA        NA 2.7449083 17.353863        NA #> 644 0.7667073  0.7667073        NA        NA 5.1501661 15.680364        NA #> 645 1.3303544  1.3303544        NA        NA 0.4900168 12.087363 4.9350083 #> 646 0.8000254  0.8000254        NA        NA 5.1991367 15.898344        NA #>     BMR.xfold BMD.zSD.lower BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper #> 1    6.609214    0.97850954     4.0686985             Inf             Inf #> 2    5.347706    0.20008806     1.1095586             Inf             Inf #> 5    7.073198    0.75185882     1.4649978             Inf             Inf #> 6    7.073198    0.75185882     1.4649978             Inf             Inf #> 7    7.073198    0.75185882     1.4649978             Inf             Inf #> 8    6.172119    0.05543773     0.6804425     0.561154372             Inf #> 9    5.588358    0.08095270     0.7936032     0.329293169             Inf #> 10   8.017772    0.42468408     1.0520363             Inf             Inf #> 11   6.181671    0.07579775     0.7005182             Inf             Inf #> 12   6.802633    0.03694799     0.4209217             Inf             Inf #> 13   5.820719    1.67433198     5.3037292             Inf             Inf #> 14   5.164472    1.25236329     2.8522870     7.563758934             Inf #> 16   5.863188    1.32631865     6.0595553     5.925234838             Inf #> 17   5.863188    1.32631865     6.0595553     5.925234838             Inf #> 18   5.465323    2.76071129     7.1933590     7.679066254             Inf #> 19   5.465323    2.76071129     7.1933590     7.679066254             Inf #> 20   5.465323    2.76071129     7.1933590     7.679066254             Inf #> 22   4.380763    0.36442365     2.2863213             Inf             Inf #> 23   4.380763    0.36442365     2.2863213             Inf             Inf #> 25   4.862095    1.87728956     5.7928776             Inf             Inf #> 26   4.425610    0.63687870     2.6421628     1.607320792             Inf #> 27   4.425610    0.63687870     2.6421628     1.607320792             Inf #> 28   4.425610    0.63687870     2.6421628     1.607320792             Inf #> 29   4.425610    0.63687870     2.6421628     1.607320792             Inf #> 30   4.425610    0.63687870     2.6421628     1.607320792             Inf #> 31   5.860923    0.37773418     3.4329037     2.120911243             Inf #> 32   5.860923    0.37773418     3.4329037     2.120911243             Inf #> 33   5.860923    0.37773418     3.4329037     2.120911243             Inf #> 34   5.860923    0.37773418     3.4329037     2.120911243             Inf #> 35   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 36   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 37   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 39   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 40   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 41   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 42   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 43   6.168631    0.24887531     4.0820798     2.791737594             Inf #> 44   4.573695    0.32686514     3.1332891     5.738912687             Inf #> 46   6.316887    2.43380228     6.3223929             Inf             Inf #> 47   6.316887    2.43380228     6.3223929             Inf             Inf #> 48   4.940865    0.35799216     4.2882933     2.320483615             Inf #> 49   4.940865    0.35799216     4.2882933     2.320483615             Inf #> 50   4.940865    0.35799216     4.2882933     2.320483615             Inf #> 51   4.940865    0.35799216     4.2882933     2.320483615             Inf #> 52   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 53   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 54   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 55   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 56   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 57   5.737279    0.30086446     3.1833272     1.307410467             Inf #> 58   5.177716    0.46124416     1.4873687             Inf             Inf #> 59   4.962470    1.03576992     3.6179409             Inf             Inf #> 60   4.962470    1.03576992     3.6179409             Inf             Inf #> 61   5.158766    0.48406738     1.2370211     0.808097974             Inf #> 62   5.158766    0.48406738     1.2370211     0.808097974             Inf #> 63   5.158766    0.48406738     1.2370211     0.808097974             Inf #> 64   5.158766    0.48406738     1.2370211     0.808097974             Inf #> 65   5.158766    0.48406738     1.2370211     0.808097974             Inf #> 67   6.677576    0.26644454     4.2871164             Inf             Inf #> 68   6.677576    0.26644454     4.2871164             Inf             Inf #> 69   6.677576    0.26644454     4.2871164             Inf             Inf #> 70   6.677576    0.26644454     4.2871164             Inf             Inf #> 71   5.840236    3.09334793     6.6162300     7.323353364             Inf #> 72   5.840236    3.09334793     6.6162300     7.323353364             Inf #> 73   5.840236    3.09334793     6.6162300     7.323353364             Inf #> 75   4.972785    0.63064808     4.7996149     5.945710618             Inf #> 76   4.972785    0.63064808     4.7996149     5.945710618             Inf #> 77   4.972785    0.63064808     4.7996149     5.945710618             Inf #> 79   5.236113    0.52106128     5.9739107     5.919751612             Inf #> 80   5.236113    0.52106128     5.9739107     5.919751612             Inf #> 81   5.980553    0.42901273     4.3080978     5.248292886             Inf #> 82   5.980553    0.42901273     4.3080978     5.248292886             Inf #> 83   5.980553    0.42901273     4.3080978     5.248292886             Inf #> 84   5.980553    0.42901273     4.3080978     5.248292886             Inf #> 85   9.765941    1.25476148     2.7589141     3.944767854             Inf #> 86  11.185391    0.24296501     0.8254193     2.323655028             Inf #> 87  11.170683    0.28244583     0.9252443     2.789277177             Inf #> 88  18.051589    2.64963205     5.5727686             Inf             Inf #> 91  11.653948    1.04939875     1.9503267             Inf             Inf #> 95  17.349849    1.99350628     5.0456881     6.137589248             Inf #> 99  13.184704    1.71972684     5.2546852             Inf             Inf #> 102  8.452213    1.52079518     3.8197300             Inf             Inf #> 103  7.959897    0.46760570     2.8942164     1.944016318             Inf #> 104  7.959897    0.46760570     2.8942164     1.944016318             Inf #> 106  6.609855    0.21744945     1.5471627     0.428071765       2.5957963 #> 109 16.612407    1.54015368     3.7311047             Inf             Inf #> 110  9.268869    0.37327629     1.2105842     1.951273142             Inf #> 111  4.893943    0.66647676     1.8535634     0.596011289       1.4002372 #> 115 13.532062    1.25523264     2.4785285     2.184471756       4.1050629 #> 116  8.370532    2.62074447     6.1892385     6.399079578             Inf #> 117 19.057483    1.33538267     3.2723752             Inf             Inf #> 120 10.178300    0.49685136     4.8689356     0.720186659       5.3855908 #> 121 11.774346    1.07799896     3.2324908     6.134109074             Inf #> 122 13.018466    0.65089363     1.4477020     4.613686534       5.6633468 #> 123 11.262816    0.39650460     1.0210325     0.935884812       6.2063487 #> 125 11.840420    1.64980574     4.7578654             Inf             Inf #> 127 16.661441    2.10623596     4.9747503             Inf             Inf #> 128 10.745467    0.45072040     4.9073419     5.535135720             Inf #> 129 13.115891    2.95611239     5.6794781     5.141147897       6.5072131 #> 131  6.444924    0.37828212     3.9147635     0.641720795       4.6921648 #> 132  6.444924    0.37828212     3.9147635     0.641720795       4.6921648 #> 133  7.809562    0.28329273     0.9217664     0.371304357       1.0567280 #> 134 12.192005    0.45119793     1.3369379             Inf             Inf #> 137 13.697747    2.88540036     6.0230168             Inf             Inf #> 140 12.424335    1.39985045     3.1165736             Inf             Inf #> 141 11.715823    0.46705147     4.3039298             Inf             Inf #> 142  9.550364    1.05386556     3.3648968     5.999140808             Inf #> 143  8.280927    1.21655973     3.4294082     2.333290039       4.5329127 #> 147 16.074408    2.74155251     5.3503657             Inf             Inf #> 148 16.170012    1.72942685     4.9473537     6.574719043             Inf #> 149  8.613130    2.33640966     5.5962017     3.329265202       6.0213409 #> 150  6.228886    1.30775683     3.0619063     2.633213483       5.1889529 #> 152 11.281891    1.68457955     4.6751632     6.392129679             Inf #> 156  4.680233    1.62293691     5.9759268     1.316830682       3.9749306 #> 157  8.874974    0.27525816     1.6705374     0.448004236       2.7783783 #> 158 11.113667    1.07953096     2.3571861     4.876575034             Inf #> 161 12.091282    0.60384236     5.6978525             Inf             Inf #> 164 16.600846    0.48326750     1.0560307             Inf             Inf #> 165  9.457594    1.02570209     1.9393894     2.006597935       3.1213521 #> 166 10.568354    0.76647179     5.2718059             Inf             Inf #> 167 12.039017    1.17918063     2.7286462             Inf             Inf #> 169  9.162234    0.96799087     1.9783744     3.147459144       5.1690481 #> 170  8.642749    0.50907354     5.1415268     1.604331864             Inf #> 171  8.200742    1.50525257     3.4011695     1.955152886       3.7737373 #> 172  8.200742    1.50525257     3.4011695     1.955152886       3.7737373 #> 174  6.999308    0.53075189     4.6854038     0.666553386       5.0930986 #> 178 10.396666    0.53046359     1.1464625     1.683797922             Inf #> 179 11.958109    1.14853940     2.4913773             Inf             Inf #> 180 12.563182    1.54875481     3.5028687             Inf             Inf #> 181 12.563182    1.54875481     3.5028687             Inf             Inf #> 183  7.409795    0.08183997     0.5980861     0.191250605       1.6257035 #> 184  7.049409    1.75885065     4.3783442     2.228962042       5.6185328 #> 185  7.049409    1.75885065     4.3783442     2.228962042       5.6185328 #> 186  8.010933    2.93461899     6.0719877     5.699704509             Inf #> 188  4.584806    0.50278548     1.8172104     0.398838259       1.5901895 #> 190 11.131602    0.58190671     1.6479060             Inf             Inf #> 193  3.345752    0.35654678     1.4592305     0.166561570       1.1565046 #> 196 11.050749    0.43301683     0.8971572     0.740395116       1.2380754 #> 197  7.936032    1.74049030     5.8493362     5.058661772             Inf #> 198  9.315398    1.73688931     5.1197523     5.388840084             Inf #> 199 11.305100    1.60498652     5.3246257     5.203053760             Inf #> 200 11.305100    1.60498652     5.3246257     5.203053760             Inf #> 201  8.688686    0.35183367     1.7316828     0.362628186       1.4953577 #> 202  8.688686    0.35183367     1.7316828     0.362628186       1.4953577 #> 203  8.688686    0.35183367     1.7316828     0.362628186       1.4953577 #> 205 15.094411    0.22352954     1.1815352             Inf             Inf #> 207  3.519730    0.29910845     1.8306631     0.199774284       1.4325785 #> 208  7.620460    0.57763293     5.4940389     1.085545152             Inf #> 211 12.775912    0.41079211     1.5942930             Inf             Inf #> 214  6.991935    0.36258894     1.5883451     0.452166289       1.6600473 #> 215 11.356575    2.93270043     5.9633443     4.127378018       6.3349736 #> 217  9.617183    1.66564175     4.0856814     6.348263101             Inf #> 218 11.997807    0.32329297     1.0469995     0.647250519       1.6091792 #> 220  4.760624    1.37853596     3.1602333     1.011869465       2.2765836 #> 221 11.830089    0.31337952     1.3891586             Inf             Inf #> 222 10.248211    1.43903732     3.7180841             Inf             Inf #> 225 10.579865    2.77040545     5.6067950             Inf             Inf #> 228 11.354430    0.48380870     1.5400128             Inf             Inf #> 229  9.806566    1.26495795     3.0819744     6.038177033             Inf #> 232  4.292819    0.40044672     6.5720202     0.372516223       5.9756156 #> 233  4.292819    0.40044672     6.5720202     0.372516223       5.9756156 #> 235 10.664641    0.31820753     1.5828158     1.301585711             Inf #> 236 12.010635    2.82937876     5.8296064     6.441719601             Inf #> 237 14.176242    2.74132244     5.6217506     6.059639702             Inf #> 238 14.176242    2.74132244     5.6217506     6.059639702             Inf #> 240 14.176242    2.74132244     5.6217506     6.059639702             Inf #> 242  6.179380    1.79369036     5.2099565     1.536556109       4.4694075 #> 243 11.464039    0.45259236     0.9852054             Inf             Inf #> 245  9.140814    2.60802191     6.3443547     4.773931693             Inf #> 246  9.140814    2.60802191     6.3443547     4.773931693             Inf #> 248  7.699912    1.67808514     5.1396151     2.700837923             Inf #> 251 19.719388    1.32526215     3.0171899             Inf             Inf #> 252 19.719388    1.32526215     3.0171899             Inf             Inf #> 253 10.397567    0.27487668     0.8684603     1.202020409             Inf #> 255  4.536452    3.02720467     5.8125246     1.185965587       4.9408312 #> 256 10.146508    0.34554032     1.8031346             Inf             Inf #> 257 10.058956    3.07025121     5.3715482     6.218567131             Inf #> 259 12.006209    1.26617938     2.6694875             Inf             Inf #> 260  5.843978    0.30500837     2.5122396     0.378730892       2.5190324 #> 263 11.553591    1.79186086     4.7606571             Inf             Inf #> 265 10.512135    1.00581659     1.7217125     5.981752578             Inf #> 266  4.549637    0.11229115     1.1562790     0.089201977       0.6082146 #> 270  7.935151    0.36344217     4.8271636     0.571262850       6.0547691 #> 272  5.665327    1.54004500     3.3695645     1.714682866       3.6378978 #> 274 11.742147    0.33666389     1.6530558             Inf             Inf #> 275 12.207078    2.02820057     5.2593819     6.170577485             Inf #> 276  6.266743    0.27957255     1.4053942     0.623857241       2.4264491 #> 277  9.914290    1.67314034     4.8813673     6.260515221             Inf #> 279  6.021363    2.57101943     5.4991451     5.108155638       6.3704832 #> 280  8.345108    2.69574649     5.3067808     5.531666056       6.4733040 #> 282 12.073975    0.40904089     2.6783910     5.386193008             Inf #> 285  9.353255    0.52323314     5.1004381     6.448319399             Inf #> 286  4.044806    1.57343097     4.8340198     1.004095616       2.8864003 #> 287  7.384116    1.60569926     3.5771123     4.539553747             Inf #> 288  7.384116    1.60569926     3.5771123     4.539553747             Inf #> 291  4.165686    1.61304816     4.7440724     2.054933805       4.8155223 #> 293 10.806789    2.28426943     5.7598313             Inf             Inf #> 295  7.242857    1.83136398     4.8498220     6.283356411             Inf #> 296 11.222799    1.61923981     4.8209580     6.446861410             Inf #> 297 10.004959    1.75515628     4.9422872             Inf             Inf #> 298 10.004959    1.75515628     4.9422872             Inf             Inf #> 299  7.920161    2.73919695     5.6174409     4.537291440       6.2201378 #> 301 13.841195    1.57349911     3.9836203             Inf             Inf #> 303  8.857838    1.45426811     3.6196180             Inf             Inf #> 305 11.680806    2.74748436     5.9480926     5.959090533             Inf #> 306 11.628496    1.31584676     3.3142276             Inf             Inf #> 307 11.628496    1.31584676     3.3142276             Inf             Inf #> 308  7.780480    0.29506317     3.0199956     4.254602701             Inf #> 312 10.951725    0.32210163     1.4464539             Inf             Inf #> 314  9.708470    0.31620212     1.3244315     0.720852189       2.8039243 #> 317 11.200578    0.68145620     6.3611319     1.486068665             Inf #> 320  6.465456    0.51980328     5.7343561     0.917012370       6.5546099 #> 321  6.465456    0.51980328     5.7343561     0.917012370       6.5546099 #> 322  8.849025    0.14938717     1.0207350             Inf             Inf #> 327  4.452148    0.11967646     1.0401929     0.195348516       1.6577848 #> 328  8.176794    2.15278536     5.5732310     3.537939516       6.1536307 #> 330  9.245448    2.89498554     5.3843413     6.133839112             Inf #> 331 10.557257    0.77715707     1.4762641     5.166992021             Inf #> 332 10.557257    0.77715707     1.4762641     5.166992021             Inf #> 333  7.801578    0.93447304     2.7014552     2.315744699             Inf #> 336  3.987417    0.29731794     1.3828385     0.151027996       0.7370402 #> 338 11.437571    1.50483906     3.0487558     5.435990512             Inf #> 339  3.170032    0.18131969     1.0088612     0.144550692       0.9361412 #> 340  5.784045    0.52312717     5.1958248     1.581893139             Inf #> 341  3.132075    0.55429742     5.7718558     0.247759130       0.9522847 #> 342  2.799031    1.79473176     5.9520232     0.518304035       1.9018699 #> 343 12.302919    0.55519755     5.6084166             Inf             Inf #> 344  9.386265    0.41050756     2.0533236     2.060511247             Inf #> 346 10.639970    1.12797148     3.0911075     3.100615311       6.0301429 #> 350  6.153925    2.53621646     5.9795879     2.919533786       6.0579747 #> 354  6.170927    2.27138538     5.7358531     3.729207860       6.3344473 #> 357  8.211528    2.17027304     4.7299005     2.748717002       5.1089096 #> 358  6.401878    1.70642374     4.3812001     3.592866018       5.4785532 #> 360  6.401878    1.70642374     4.3812001     3.592866018       5.4785532 #> 361 10.315734    2.77164549     6.0800988     5.523600805             Inf #> 362 10.432780    0.42488885     1.3612369     0.950713483             Inf #> 364 11.015759    1.35631407     3.9482498     6.116495321             Inf #> 365 16.112188    1.51507954     3.7087226             Inf             Inf #> 368 12.513653    2.68685892     5.2631287     5.372229614       6.3760247 #> 370  5.506560    0.38959091     2.2272543     0.503732566       2.2560210 #> 372 12.262440    0.43168938     4.3245839     5.064185119             Inf #> 375 12.986136    2.72596759     5.7854763     5.147440713             Inf #> 376  6.613113    1.67497503     4.2608419     3.230241717             Inf #> 378 11.983534    2.80885642     6.0493796             Inf             Inf #> 379 10.044223    0.39958196     2.7913521             Inf             Inf #> 380  9.484078    3.19121913     6.0330978     5.757855434             Inf #> 384  6.947876    0.83900191     2.4495022     1.324503954       3.0764073 #> 386 11.062375    1.39139459     2.7623036             Inf             Inf #> 387 11.062375    1.39139459     2.7623036             Inf             Inf #> 389  5.626303    2.38471036     5.6950050     1.252120890       5.0100759 #> 391  7.534332    1.43162683     3.9766076     5.881437620             Inf #> 394  8.473869    1.59053072     4.8455224     6.493876912             Inf #> 395 11.419236    0.91299791     2.4019524     5.236758636       6.0300079 #> 397  6.007350    0.47269962     6.1399990     0.441645392       1.9386531 #> 399  7.386885    0.58678810     4.9024458             Inf             Inf #> 401  8.406459    0.41247948     1.9597416     1.808817338             Inf #> 404 11.704820    2.30323194     5.5256078             Inf             Inf #> 405  5.359396    1.48802589     3.7982782     1.854106107       4.4410965 #> 408 11.472711    0.49209232     4.7797975             Inf             Inf #> 409  9.824131    1.37232930     4.1176062     3.397031389       5.6597211 #> 410  9.750089    2.67782583     5.6571666     6.277773208             Inf #> 411 14.077228    0.55214614     5.2737085     0.835070682             Inf #> 414  7.446790    1.54644313     3.7563391     4.675890098             Inf #> 416 16.048153    0.57103992     5.7120187             Inf             Inf #> 419  9.154518    3.01643160     5.7582422     4.454667912       6.2076045 #> 420  9.282633    2.59941851     5.8239482     4.994810496             Inf #> 422  4.353907    1.08136166     2.2450742     0.537628909       1.0784105 #> 427  5.813539    0.44049003     1.2312424     0.600531494       1.3655704 #> 428  5.813539    0.44049003     1.2312424     0.600531494       1.3655704 #> 430  8.294884    3.11003882     5.9115909     5.959748471             Inf #> 433 10.591996    2.95429136     5.5813685             Inf             Inf #> 437  6.848772    1.53954471     3.7611556     4.431727423             Inf #> 439  3.843277    2.73897612     5.8700482     1.077465424       5.0228002 #> 441  3.843277    2.73897612     5.8700482     1.077465424       5.0228002 #> 443  8.583773    1.55012771     3.4384422     2.006763926       4.3319657 #> 445 11.635874    0.24885181     1.7730190             Inf             Inf #> 447 10.861058    2.67167471     6.0475253     4.118430525       6.5466679 #> 450 10.319887    0.89713656     1.6364676     5.143636334             Inf #> 453 10.432280    0.49291097     4.8114751             Inf             Inf #> 454 10.432280    0.49291097     4.8114751             Inf             Inf #> 457  8.924420    2.95397705     6.1224920     5.862093858             Inf #> 458  8.924420    2.95397705     6.1224920     5.862093858             Inf #> 460  5.575966    1.51555559     4.1284671     1.763094570       3.8398589 #> 461 12.758150    1.49781631     4.2006366             Inf             Inf #> 464 10.383239    1.67750256     5.1249891             Inf             Inf #> 465  8.406276    2.26344376     5.5834726     5.190863194             Inf #> 466 12.247232    2.47216394     5.8384901             Inf             Inf #> 467 10.370996    2.98412616     5.8970326     5.436215750             Inf #> 468  7.937128    3.14646412     5.5666368     6.350040973             Inf #> 469  5.525237    0.67558337     2.1715428     0.883026937       2.2991852 #> 470 17.156626    1.53615953     4.1273934             Inf             Inf #> 471  6.449810    2.44381942     5.9263373     3.362335705       6.2025526 #> 473 15.626026    1.37851705     3.3887887     4.957730063             Inf #> 475 14.012261    2.57284026     6.0635216     5.596013765             Inf #> 476  8.390585    0.35181993     1.9120592     1.372831217             Inf #> 479 16.616906    1.55051252     3.5295052             Inf             Inf #> 480 16.616906    1.55051252     3.5295052             Inf             Inf #> 481 11.647343    0.59290513     5.3000812             Inf             Inf #> 482  6.476746    1.49174316     4.6941363     2.091069038       5.2154405 #> 483 10.329842    1.75332519     5.0613449     5.435643045             Inf #> 486 11.594653    0.62508123     5.7068993     1.327086711             Inf #> 488  4.922630    0.20461711     1.6845815     0.139945658       1.2568975 #> 490  7.477196    0.32356830     1.4338426     0.971756751       3.0973018 #> 491  7.477196    0.32356830     1.4338426     0.971756751       3.0973018 #> 492 11.411100    2.93033518     6.1810802     5.558239912             Inf #> 493 15.138321    1.51510806     3.7392715             Inf             Inf #> 494  3.873826    0.18220941     1.0969609     0.091699534       0.8486895 #> 495 12.225549    0.37518670     1.5715812             Inf             Inf #> 496  7.690283    1.92555525     5.6517887     2.146849617       6.0728723 #> 498  9.534307    1.36558810     3.0277098     5.762503096             Inf #> 499  9.534307    1.36558810     3.0277098     5.762503096             Inf #> 500  2.773781    0.65667378     6.2902176     0.373623234       3.3879709 #> 501 11.530584    0.33731937     0.9197975     1.508058972             Inf #> 502  7.617208    1.89109990     5.3403262     2.591205923             Inf #> 504  5.621811    2.21981342     5.6568219     2.434121632       5.6965397 #> 505 13.807391    0.56359317     5.2624212     5.795155090             Inf #> 509 10.490827    3.02457964     5.8110892     6.145402448             Inf #> 513  3.142488    2.82669704     6.1106136     1.280102495       5.2509376 #> 514  3.142488    2.82669704     6.1106136     1.280102495       5.2509376 #> 515  4.111318    1.69251190     5.7986233     1.068040105       3.3844872 #> 517  4.913670    2.50987504     6.1097889     1.020668794       5.2178549 #> 518  6.934673    0.18681863     1.2570076     0.472633948       1.7840523 #> 519 13.060251    2.75999567     5.7929246     6.338097788             Inf #> 520  5.599368    2.23211655     5.7085379     4.411957201       6.4752810 #> 521  3.975625    0.46888113     3.5368956     0.412540372       2.2564088 #> 522 12.413718    3.13307067     6.1573656     5.357729276             Inf #> 523 10.059264    1.30750373     3.0842068     4.408059421       5.4651710 #> 525  3.649828    0.07147828     1.0011930     0.048498052       0.8778772 #> 526  3.253565    1.66602930     4.7801024     1.004363597       2.7209529 #> 527  5.271207    0.01267481     1.1158721     0.007461455       0.7837629 #> 528 11.144810    1.49647165     3.5311407     6.064214526             Inf #> 531  6.189467    3.29076592     5.3622969     3.470973856       5.4352797 #> 534 11.620474    0.57587075     5.6502320     1.732666151             Inf #> 535  7.360651    3.25243304     6.1717262     2.147243007       5.7371913 #> 540  5.311273    2.09802632     5.1109137     1.458393435       4.7290176 #> 542  4.499063    0.23982321     0.9989047     0.284675115       1.0044222 #> 543 15.013470    0.65235594     6.4260092     6.453090944             Inf #> 544 11.053088    2.83893468     5.4797507     6.000722553             Inf #> 546  2.727377    1.63856489     5.0203541     0.849091855       2.7034316 #> 547  2.950722    2.72792323     5.7943095     0.996722114       4.8068402 #> 549  3.998886    0.05399315     1.2442471     0.014320654       0.6768693 #> 551  4.314200    0.27996824     2.9680621     0.123733758       1.4896918 #> 552  3.282101    1.41586955     4.2784519     0.347847946       1.0906435 #> 553  3.623286    1.47301680     4.2390445     0.687419859       1.8230891 #> 554  4.303831    3.07905725     6.0763029     2.724727869       5.8528389 #> 556  9.871577    0.16711640     2.2687004     3.193289198             Inf #> 558  7.624966    1.63151673     4.5223468     3.363446161             Inf #> 559 10.284372    0.59329962     5.2313257     5.176477559             Inf #> 561  5.582769    2.66774103     5.5482430     4.568013933       6.2629489 #> 562  5.582769    2.66774103     5.5482430     4.568013933       6.2629489 #> 565  7.922913    0.35369329     1.9728850     5.976877847             Inf #> 566  6.894596    0.27440127     2.3879979     0.444798465       4.1009270 #> 567  4.510380    3.04662568     5.8599969     1.798504986       5.3875293 #> 569  5.816472    1.52421746     4.8285511     1.473564631       3.9997281 #> 571  4.106953    0.64467381     5.9696696     0.448604431       4.9243516 #> 572  5.434839    1.14264286     2.0822884     1.309733690       2.2514858 #> 573 12.889978    1.48412235     4.3165892     4.269357714             Inf #> 574  7.540718    0.07897595     0.5722466     0.563141265             Inf #> 575  6.631907    2.89367417     6.1680412     3.315818503       6.2557758 #> 577  4.979126    0.65520412     6.2161646     0.688726137       5.5777863 #> 579  2.588375    1.71979781     5.8334366     0.292697242       1.3384842 #> 580  2.588375    1.71979781     5.8334366     0.292697242       1.3384842 #> 581  7.068377    0.58618031     1.5088144     1.409797613       2.6648659 #> 583 17.733195    2.39865845     5.2992829             Inf             Inf #> 585  6.239645    2.80289650     6.1722055     3.950276091             Inf #> 586  5.352737    0.31331655     1.2981207     0.454482941       1.4204213 #> 587  5.352737    0.31331655     1.2981207     0.454482941       1.4204213 #> 588 13.565940    0.45906313     4.8255941             Inf             Inf #> 590 13.012239    1.42463855     3.5561543     1.534388758       3.5978054 #> 591  8.805313    2.83479706     5.2682879     4.675475928       6.0753703 #> 593  2.980407    2.37205969     6.2112758     1.061635135       5.0651393 #> 595  6.753352    1.23459866     3.1105371     3.053248092       5.6494469 #> 596  6.230214    0.34643538     0.7061183     0.537200768       1.0041140 #> 597  4.740045    2.16859102     5.3652514     2.729597152       5.5368126 #> 598  9.029268    0.38133494     2.3607272     1.910081924             Inf #> 599  9.029268    0.38133494     2.3607272     1.910081924             Inf #> 603  3.686875    1.29618555     3.0446474     0.632688925       1.4249475 #> 604  7.830261    0.38533255     0.8633687     1.665082423             Inf #> 606 16.500239    1.43708766     4.9137897     5.328617842             Inf #> 608  6.458822    2.75629900     5.7006541     4.245740698       6.1784483 #> 610  3.062052    3.04378438     6.0023852     1.537420079       5.4386620 #> 611  9.677450    0.25304437     1.2327338     0.630969777       2.7434432 #> 612 10.538488    3.21741886     5.6953260     6.601291694             Inf #> 614 10.538488    3.21741886     5.6953260     6.601291694             Inf #> 615 10.538488    3.21741886     5.6953260     6.601291694             Inf #> 616  5.622682    1.54405416     3.9836789     2.208028998       5.2513390 #> 617  9.239567    1.42731619     4.4521191     5.208723101             Inf #> 618  4.274213    0.56990952     5.7413732     0.323578135       0.7493740 #> 619  4.274213    0.56990952     5.7413732     0.323578135       0.7493740 #> 620  2.864603    2.80741209     6.0552893     1.044011927       5.0611838 #> 623  3.055381    0.60165852     1.1093746     0.524417704       1.0267987 #> 624  5.922283    1.71616519     5.0135594     1.113832033       3.2169318 #> 626  5.507754    1.98395938     5.4333538     1.954210759       5.5281589 #> 630  7.436280    2.99251277     6.0940883     2.959495418       5.9721761 #> 631 10.694167    2.10569740     5.1906991     5.449552006       6.5326155 #> 634  7.210455    1.25345804     3.2662254     2.404386300       4.8405299 #> 641 12.014582    0.23273791     0.8898776     2.227135223             Inf #> 642 17.229744    0.36546453     2.4410258             Inf             Inf #> 643 18.750255    1.63965480     4.8149657             Inf             Inf #> 644 17.085796    3.03104811     5.4289920             Inf             Inf #> 645 11.110192    0.27124408     0.8292255     2.915067056             Inf #> 646 17.312389    2.97458678     5.4604316             Inf             Inf #>     nboot.successful                                  path_class #> 1               1000                            Lipid metabolism #> 2                957                            Lipid metabolism #> 5               1000 Biosynthesis of other secondary metabolites #> 6               1000                          Membrane transport #> 7               1000                         Signal transduction #> 8                648                            Lipid metabolism #> 9                620                            Lipid metabolism #> 10               872                            Lipid metabolism #> 11               909                            Lipid metabolism #> 12               565                            Lipid metabolism #> 13              1000                            Lipid metabolism #> 14              1000                            Lipid metabolism #> 16              1000                          Membrane transport #> 17              1000                         Signal transduction #> 18               718                       Amino acid metabolism #> 19               718 Biosynthesis of other secondary metabolites #> 20               718                                 Translation #> 22               975                          Membrane transport #> 23               975                         Signal transduction #> 25               938                          Membrane transport #> 26               962                       Amino acid metabolism #> 27               962             Metabolism of other amino acids #> 28               962 Biosynthesis of other secondary metabolites #> 29               962                                 Translation #> 30               962                          Membrane transport #> 31               979                       Amino acid metabolism #> 32               979 Biosynthesis of other secondary metabolites #> 33               979                                 Translation #> 34               979                          Membrane transport #> 35               851                       Amino acid metabolism #> 36               851             Metabolism of other amino acids #> 37               851                            Lipid metabolism #> 39               851                           Energy metabolism #> 40               851                                 Translation #> 41               851 Biosynthesis of other secondary metabolites #> 42               851                          Membrane transport #> 43               851                         Signal transduction #> 44              1000                       Amino acid metabolism #> 46               859                           Energy metabolism #> 47               859                         Signal transduction #> 48               833                       Amino acid metabolism #> 49               833             Metabolism of other amino acids #> 50               833 Biosynthesis of other secondary metabolites #> 51               833                          Membrane transport #> 52               890                       Amino acid metabolism #> 53               890             Metabolism of other amino acids #> 54               890                           Energy metabolism #> 55               890                                 Translation #> 56               890                          Membrane transport #> 57               890                         Signal transduction #> 58               940                       Amino acid metabolism #> 59              1000                            Lipid metabolism #> 60              1000                       Amino acid metabolism #> 61               635                       Amino acid metabolism #> 62               635             Metabolism of other amino acids #> 63               635 Biosynthesis of other secondary metabolites #> 64               635                                 Translation #> 65               635                          Membrane transport #> 67               820                       Amino acid metabolism #> 68               820             Metabolism of other amino acids #> 69               820 Biosynthesis of other secondary metabolites #> 70               820                          Membrane transport #> 71               722                           Energy metabolism #> 72               722                          Membrane transport #> 73               722                         Signal transduction #> 75               953                       Amino acid metabolism #> 76               953                            Lipid metabolism #> 77               953                           Energy metabolism #> 79               962                       Amino acid metabolism #> 80               962                         Signal transduction #> 81               998                       Amino acid metabolism #> 82               998             Metabolism of other amino acids #> 83               998                                 Translation #> 84               998                          Membrane transport #> 85               500                           Energy metabolism #> 86               497                       Nucleotide metabolism #> 87               495                       Nucleotide metabolism #> 88               332                                 Translation #> 91               500                           Energy metabolism #> 95               469                                 Translation #> 99               500                       Amino acid metabolism #> 102              500                            Lipid metabolism #> 103              443             Metabolism of other amino acids #> 104              443                       Amino acid metabolism #> 106              491                                 Translation #> 109              500                           Energy metabolism #> 110              417                            Lipid metabolism #> 111              395                            Lipid metabolism #> 115              500                           Energy metabolism #> 116              353                       Nucleotide metabolism #> 117              500                                 Translation #> 120              492                                 Translation #> 121              483                       Nucleotide metabolism #> 122              498                           Energy metabolism #> 123              304                          Membrane transport #> 125              500                       Nucleotide metabolism #> 127              481                                 Translation #> 128              291                       Amino acid metabolism #> 129              279                         Signal transduction #> 131              483             Metabolism of other amino acids #> 132              483                       Amino acid metabolism #> 133              497                                 Translation #> 134              405             Metabolism of other amino acids #> 137              253                       Amino acid metabolism #> 140              500                                 Translation #> 141              481                            Lipid metabolism #> 142              500                       Amino acid metabolism #> 143              499                                 Translation #> 147              363                       Amino acid metabolism #> 148              500                                 Translation #> 149              393                       Amino acid metabolism #> 150              500             Metabolism of other amino acids #> 152              500                                 Translation #> 156              500                            Lipid metabolism #> 157              487                          Membrane transport #> 158              500                       Amino acid metabolism #> 161              439    Metabolism of terpenoids and polyketides #> 164              423                           Energy metabolism #> 165              500                           Energy metabolism #> 166              261                         Signal transduction #> 167              500                                 Translation #> 169              500                       Nucleotide metabolism #> 170              466                         Signal transduction #> 171              500                       Amino acid metabolism #> 172              500             Metabolism of other amino acids #> 174              359                                 Translation #> 178              336                       Nucleotide metabolism #> 179              500                                 Translation #> 180              500             Metabolism of other amino acids #> 181              500                       Nucleotide metabolism #> 183              478                       Nucleotide metabolism #> 184              500             Metabolism of other amino acids #> 185              500                       Amino acid metabolism #> 186              295                       Nucleotide metabolism #> 188              482    Metabolism of terpenoids and polyketides #> 190              344                                 Translation #> 193              483                          Membrane transport #> 196              498                    Transport and catabolism #> 197              500                           Energy metabolism #> 198              500    Metabolism of terpenoids and polyketides #> 199              500                       Amino acid metabolism #> 200              500                           Energy metabolism #> 201              476                           Energy metabolism #> 202              476             Metabolism of other amino acids #> 203              476                       Amino acid metabolism #> 205              496                            Lipid metabolism #> 207              479                           Energy metabolism #> 208              260                       Amino acid metabolism #> 211              493                                 Translation #> 214              494                                 Translation #> 215              305                           Energy metabolism #> 217              500                           Energy metabolism #> 218              497                            Lipid metabolism #> 220              500                           Energy metabolism #> 221              279                                 Translation #> 222              500                            Lipid metabolism #> 225              317                                 Translation #> 228              261                       Nucleotide metabolism #> 229              500                       Amino acid metabolism #> 232              415                       Amino acid metabolism #> 233              415             Metabolism of other amino acids #> 235              480                       Nucleotide metabolism #> 236              251                            Lipid metabolism #> 237              336                       Amino acid metabolism #> 238              336             Metabolism of other amino acids #> 240              336                           Energy metabolism #> 242              500                         Signal transduction #> 243              333                    Transport and catabolism #> 245              315                       Nucleotide metabolism #> 246              315             Metabolism of other amino acids #> 248              500                                 Translation #> 251              500                           Energy metabolism #> 252              500    Metabolism of terpenoids and polyketides #> 253              499                       Nucleotide metabolism #> 255              275                            Lipid metabolism #> 256              479                          Membrane transport #> 257              293                            Lipid metabolism #> 259              500                            Lipid metabolism #> 260              473                                 Translation #> 263              500                       Amino acid metabolism #> 265              500                            Lipid metabolism #> 266              446    Metabolism of terpenoids and polyketides #> 270              303                                 Translation #> 272              500                           Energy metabolism #> 274              468                           Energy metabolism #> 275              454    Metabolism of terpenoids and polyketides #> 276              491    Metabolism of terpenoids and polyketides #> 277              500                           Energy metabolism #> 279              370                       Amino acid metabolism #> 280              376                       Amino acid metabolism #> 282              441                            Lipid metabolism #> 285              415                                 Translation #> 286              500                                 Translation #> 287              500                           Energy metabolism #> 288              500                       Amino acid metabolism #> 291              500    Metabolism of terpenoids and polyketides #> 293              377    Metabolism of terpenoids and polyketides #> 295              500                                 Translation #> 296              483                            Lipid metabolism #> 297              500                         Signal transduction #> 298              500                            Lipid metabolism #> 299              326                       Amino acid metabolism #> 301              500             Metabolism of other amino acids #> 303              500                                 Translation #> 305              275    Metabolism of terpenoids and polyketides #> 306              500             Metabolism of other amino acids #> 307              500                       Amino acid metabolism #> 308              498                       Amino acid metabolism #> 312              491                    Transport and catabolism #> 314              497                       Amino acid metabolism #> 317              360                            Lipid metabolism #> 320              297                           Energy metabolism #> 321              297                       Amino acid metabolism #> 322              483                           Energy metabolism #> 327              474                       Nucleotide metabolism #> 328              414                       Amino acid metabolism #> 330              335                       Amino acid metabolism #> 331              500                            Lipid metabolism #> 332              500                         Signal transduction #> 333              494                            Lipid metabolism #> 336              464                                 Translation #> 338              500    Metabolism of terpenoids and polyketides #> 339              488                                 Translation #> 340              388                                 Translation #> 341              403                    Transport and catabolism #> 342              500                         Signal transduction #> 343              439                       Amino acid metabolism #> 344              469                       Nucleotide metabolism #> 346              500             Metabolism of other amino acids #> 350              371                       Amino acid metabolism #> 354              385                       Nucleotide metabolism #> 357              476                            Lipid metabolism #> 358              499                            Lipid metabolism #> 360              499                       Amino acid metabolism #> 361              291                       Nucleotide metabolism #> 362              487                            Lipid metabolism #> 364              500                       Nucleotide metabolism #> 365              500                           Energy metabolism #> 368              399                           Energy metabolism #> 370              465                    Transport and catabolism #> 372              406             Metabolism of other amino acids #> 375              330                    Transport and catabolism #> 376              500                                 Translation #> 378              318                            Lipid metabolism #> 379              436                       Amino acid metabolism #> 380              252                           Energy metabolism #> 384              490                                 Translation #> 386              500                       Amino acid metabolism #> 387              500                           Energy metabolism #> 389              345             Metabolism of other amino acids #> 391              500                            Lipid metabolism #> 394              475                                 Translation #> 395              500                       Amino acid metabolism #> 397              300                                 Translation #> 399              466                    Transport and catabolism #> 401              413                           Energy metabolism #> 404              396                            Lipid metabolism #> 405              500    Metabolism of terpenoids and polyketides #> 408              303             Metabolism of other amino acids #> 409              497                       Amino acid metabolism #> 410              352                                 Translation #> 411              480                           Energy metabolism #> 414              500                           Energy metabolism #> 416              385                            Lipid metabolism #> 419              266                    Transport and catabolism #> 420              303                                 Translation #> 422              500                           Energy metabolism #> 427              336                            Lipid metabolism #> 428              336                       Amino acid metabolism #> 430              317                          Membrane transport #> 433              311                           Energy metabolism #> 437              500                                 Translation #> 439              261                       Amino acid metabolism #> 441              261                            Lipid metabolism #> 443              500                            Lipid metabolism #> 445              485             Metabolism of other amino acids #> 447              291                                 Translation #> 450              500                           Energy metabolism #> 453              486                                 Translation #> 454              486                         Signal transduction #> 457              282                         Signal transduction #> 458              282                    Transport and catabolism #> 460              500                          Membrane transport #> 461              500                                 Translation #> 464              500                            Lipid metabolism #> 465              420                       Amino acid metabolism #> 466              375                           Energy metabolism #> 467              298                           Energy metabolism #> 468              265                                 Translation #> 469              489                                 Translation #> 470              500                                 Translation #> 471              377                           Energy metabolism #> 473              500                                 Translation #> 475              366                    Transport and catabolism #> 476              473             Metabolism of other amino acids #> 479              500                           Energy metabolism #> 480              500                         Signal transduction #> 481              336                            Lipid metabolism #> 482              488                                 Translation #> 483              500                                 Translation #> 486              384                                 Translation #> 488              484             Metabolism of other amino acids #> 490              490                          Membrane transport #> 491              490                           Energy metabolism #> 492              306                    Transport and catabolism #> 493              500                           Energy metabolism #> 494              492                          Membrane transport #> 495              493                            Lipid metabolism #> 496              500                                 Translation #> 498              500                       Amino acid metabolism #> 499              500             Metabolism of other amino acids #> 500              271                                 Translation #> 501              499             Metabolism of other amino acids #> 502              500                                 Translation #> 504              431                           Energy metabolism #> 505              385                                 Translation #> 509              276                       Amino acid metabolism #> 513              309                          Membrane transport #> 514              309                         Signal transduction #> 515              500                                 Translation #> 517              289                       Amino acid metabolism #> 518              498                                 Translation #> 519              360                          Membrane transport #> 520              366                           Energy metabolism #> 521              497                                 Translation #> 522              256                           Energy metabolism #> 523              500                           Energy metabolism #> 525              472                                 Translation #> 526              500                                 Translation #> 527              461                                 Translation #> 528              500                                 Translation #> 531              334                            Lipid metabolism #> 534              434             Metabolism of other amino acids #> 535              293                       Amino acid metabolism #> 540              461             Metabolism of other amino acids #> 542              490                                 Translation #> 543              405                           Energy metabolism #> 544              332                           Energy metabolism #> 546              500                            Lipid metabolism #> 547              351                            Lipid metabolism #> 549              483    Metabolism of terpenoids and polyketides #> 551              464                          Membrane transport #> 552              500                    Transport and catabolism #> 553              500    Metabolism of terpenoids and polyketides #> 554              266                       Nucleotide metabolism #> 556              456                           Energy metabolism #> 558              500                       Amino acid metabolism #> 559              423                                 Translation #> 561              357                            Lipid metabolism #> 562              357                       Amino acid metabolism #> 565              481                                 Translation #> 566              470                       Amino acid metabolism #> 567              268                    Transport and catabolism #> 569              500                            Lipid metabolism #> 571              448                       Nucleotide metabolism #> 572              500                                 Translation #> 573              500                            Lipid metabolism #> 574              391                            Lipid metabolism #> 575              301                       Amino acid metabolism #> 577              371                       Nucleotide metabolism #> 579              500                          Membrane transport #> 580              500                         Signal transduction #> 581              500                                 Translation #> 583              433                                 Translation #> 585              324                       Amino acid metabolism #> 586              493                    Transport and catabolism #> 587              493                          Membrane transport #> 588              275                                 Translation #> 590              500                           Energy metabolism #> 591              368                       Amino acid metabolism #> 593              343             Metabolism of other amino acids #> 595              500                       Amino acid metabolism #> 596              332                           Energy metabolism #> 597              440                       Nucleotide metabolism #> 598              452                         Signal transduction #> 599              452                            Lipid metabolism #> 603              500                            Lipid metabolism #> 604              250                       Nucleotide metabolism #> 606              500                           Energy metabolism #> 608              301                       Nucleotide metabolism #> 610              280                       Nucleotide metabolism #> 611              494    Metabolism of terpenoids and polyketides #> 612              283                            Lipid metabolism #> 614              283             Metabolism of other amino acids #> 615              283                       Amino acid metabolism #> 616              500                       Amino acid metabolism #> 617              491                            Lipid metabolism #> 618              461                            Lipid metabolism #> 619              461                       Amino acid metabolism #> 620              312                       Nucleotide metabolism #> 623              251                            Lipid metabolism #> 624              500                           Energy metabolism #> 626              462                            Lipid metabolism #> 630              264                       Nucleotide metabolism #> 631              460                       Amino acid metabolism #> 634              500                       Amino acid metabolism #> 641              496                       Nucleotide metabolism #> 642              450                                 Translation #> 643              500                                 Translation #> 644              296                                 Translation #> 645              497                       Nucleotide metabolism #> 646              305                                 Translation #>     molecular.level #> 1       metabolites #> 2       metabolites #> 5       metabolites #> 6       metabolites #> 7       metabolites #> 8       metabolites #> 9       metabolites #> 10      metabolites #> 11      metabolites #> 12      metabolites #> 13      metabolites #> 14      metabolites #> 16      metabolites #> 17      metabolites #> 18      metabolites #> 19      metabolites #> 20      metabolites #> 22      metabolites #> 23      metabolites #> 25      metabolites #> 26      metabolites #> 27      metabolites #> 28      metabolites #> 29      metabolites #> 30      metabolites #> 31      metabolites #> 32      metabolites #> 33      metabolites #> 34      metabolites #> 35      metabolites #> 36      metabolites #> 37      metabolites #> 39      metabolites #> 40      metabolites #> 41      metabolites #> 42      metabolites #> 43      metabolites #> 44      metabolites #> 46      metabolites #> 47      metabolites #> 48      metabolites #> 49      metabolites #> 50      metabolites #> 51      metabolites #> 52      metabolites #> 53      metabolites #> 54      metabolites #> 55      metabolites #> 56      metabolites #> 57      metabolites #> 58      metabolites #> 59      metabolites #> 60      metabolites #> 61      metabolites #> 62      metabolites #> 63      metabolites #> 64      metabolites #> 65      metabolites #> 67      metabolites #> 68      metabolites #> 69      metabolites #> 70      metabolites #> 71      metabolites #> 72      metabolites #> 73      metabolites #> 75      metabolites #> 76      metabolites #> 77      metabolites #> 79      metabolites #> 80      metabolites #> 81      metabolites #> 82      metabolites #> 83      metabolites #> 84      metabolites #> 85          contigs #> 86          contigs #> 87          contigs #> 88          contigs #> 91          contigs #> 95          contigs #> 99          contigs #> 102         contigs #> 103         contigs #> 104         contigs #> 106         contigs #> 109         contigs #> 110         contigs #> 111         contigs #> 115         contigs #> 116         contigs #> 117         contigs #> 120         contigs #> 121         contigs #> 122         contigs #> 123         contigs #> 125         contigs #> 127         contigs #> 128         contigs #> 129         contigs #> 131         contigs #> 132         contigs #> 133         contigs #> 134         contigs #> 137         contigs #> 140         contigs #> 141         contigs #> 142         contigs #> 143         contigs #> 147         contigs #> 148         contigs #> 149         contigs #> 150         contigs #> 152         contigs #> 156         contigs #> 157         contigs #> 158         contigs #> 161         contigs #> 164         contigs #> 165         contigs #> 166         contigs #> 167         contigs #> 169         contigs #> 170         contigs #> 171         contigs #> 172         contigs #> 174         contigs #> 178         contigs #> 179         contigs #> 180         contigs #> 181         contigs #> 183         contigs #> 184         contigs #> 185         contigs #> 186         contigs #> 188         contigs #> 190         contigs #> 193         contigs #> 196         contigs #> 197         contigs #> 198         contigs #> 199         contigs #> 200         contigs #> 201         contigs #> 202         contigs #> 203         contigs #> 205         contigs #> 207         contigs #> 208         contigs #> 211         contigs #> 214         contigs #> 215         contigs #> 217         contigs #> 218         contigs #> 220         contigs #> 221         contigs #> 222         contigs #> 225         contigs #> 228         contigs #> 229         contigs #> 232         contigs #> 233         contigs #> 235         contigs #> 236         contigs #> 237         contigs #> 238         contigs #> 240         contigs #> 242         contigs #> 243         contigs #> 245         contigs #> 246         contigs #> 248         contigs #> 251         contigs #> 252         contigs #> 253         contigs #> 255         contigs #> 256         contigs #> 257         contigs #> 259         contigs #> 260         contigs #> 263         contigs #> 265         contigs #> 266         contigs #> 270         contigs #> 272         contigs #> 274         contigs #> 275         contigs #> 276         contigs #> 277         contigs #> 279         contigs #> 280         contigs #> 282         contigs #> 285         contigs #> 286         contigs #> 287         contigs #> 288         contigs #> 291         contigs #> 293         contigs #> 295         contigs #> 296         contigs #> 297         contigs #> 298         contigs #> 299         contigs #> 301         contigs #> 303         contigs #> 305         contigs #> 306         contigs #> 307         contigs #> 308         contigs #> 312         contigs #> 314         contigs #> 317         contigs #> 320         contigs #> 321         contigs #> 322         contigs #> 327         contigs #> 328         contigs #> 330         contigs #> 331         contigs #> 332         contigs #> 333         contigs #> 336         contigs #> 338         contigs #> 339         contigs #> 340         contigs #> 341         contigs #> 342         contigs #> 343         contigs #> 344         contigs #> 346         contigs #> 350         contigs #> 354         contigs #> 357         contigs #> 358         contigs #> 360         contigs #> 361         contigs #> 362         contigs #> 364         contigs #> 365         contigs #> 368         contigs #> 370         contigs #> 372         contigs #> 375         contigs #> 376         contigs #> 378         contigs #> 379         contigs #> 380         contigs #> 384         contigs #> 386         contigs #> 387         contigs #> 389         contigs #> 391         contigs #> 394         contigs #> 395         contigs #> 397         contigs #> 399         contigs #> 401         contigs #> 404         contigs #> 405         contigs #> 408         contigs #> 409         contigs #> 410         contigs #> 411         contigs #> 414         contigs #> 416         contigs #> 419         contigs #> 420         contigs #> 422         contigs #> 427         contigs #> 428         contigs #> 430         contigs #> 433         contigs #> 437         contigs #> 439         contigs #> 441         contigs #> 443         contigs #> 445         contigs #> 447         contigs #> 450         contigs #> 453         contigs #> 454         contigs #> 457         contigs #> 458         contigs #> 460         contigs #> 461         contigs #> 464         contigs #> 465         contigs #> 466         contigs #> 467         contigs #> 468         contigs #> 469         contigs #> 470         contigs #> 471         contigs #> 473         contigs #> 475         contigs #> 476         contigs #> 479         contigs #> 480         contigs #> 481         contigs #> 482         contigs #> 483         contigs #> 486         contigs #> 488         contigs #> 490         contigs #> 491         contigs #> 492         contigs #> 493         contigs #> 494         contigs #> 495         contigs #> 496         contigs #> 498         contigs #> 499         contigs #> 500         contigs #> 501         contigs #> 502         contigs #> 504         contigs #> 505         contigs #> 509         contigs #> 513         contigs #> 514         contigs #> 515         contigs #> 517         contigs #> 518         contigs #> 519         contigs #> 520         contigs #> 521         contigs #> 522         contigs #> 523         contigs #> 525         contigs #> 526         contigs #> 527         contigs #> 528         contigs #> 531         contigs #> 534         contigs #> 535         contigs #> 540         contigs #> 542         contigs #> 543         contigs #> 544         contigs #> 546         contigs #> 547         contigs #> 549         contigs #> 551         contigs #> 552         contigs #> 553         contigs #> 554         contigs #> 556         contigs #> 558         contigs #> 559         contigs #> 561         contigs #> 562         contigs #> 565         contigs #> 566         contigs #> 567         contigs #> 569         contigs #> 571         contigs #> 572         contigs #> 573         contigs #> 574         contigs #> 575         contigs #> 577         contigs #> 579         contigs #> 580         contigs #> 581         contigs #> 583         contigs #> 585         contigs #> 586         contigs #> 587         contigs #> 588         contigs #> 590         contigs #> 591         contigs #> 593         contigs #> 595         contigs #> 596         contigs #> 597         contigs #> 598         contigs #> 599         contigs #> 603         contigs #> 604         contigs #> 606         contigs #> 608         contigs #> 610         contigs #> 611         contigs #> 612         contigs #> 614         contigs #> 615         contigs #> 616         contigs #> 617         contigs #> 618         contigs #> 619         contigs #> 620         contigs #> 623         contigs #> 624         contigs #> 626         contigs #> 630         contigs #> 631         contigs #> 634         contigs #> 641         contigs #> 642         contigs #> 643         contigs #> 644         contigs #> 645         contigs #> 646         contigs sensitivityplot(extendedres.3, BMDtype = \"zSD\",                 group = \"path_class\", colorby = \"molecular.level\",                 BMDsummary = \"first.quartile\")    # }"},{"path":"/reference/sensitivityplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of a summary of BMD values per group of items — sensitivityplot","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"Plot summary BMD values per group items (groups defined example biological annotation), groups ordered values chosen summary (ECDF plot) ordered definition factor coding , points sized numbers items per group.","code":""},{"path":"/reference/sensitivityplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"","code":"sensitivityplot(extendedres, BMDtype = c(\"zSD\", \"xfold\"),                 group, ECDF_plot = TRUE, colorby,                 BMDsummary = c(\"first.quartile\", \"median\" , \"median.and.IQR\"),                 BMD_log_transfo = TRUE,                 line.size = 0.5, line.alpha = 0.5, point.alpha = 0.5)"},{"path":"/reference/sensitivityplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"extendedres dataframe results provided bmdcalc (res)  subset data frame (selected lines). dataframe can extended  additional columns coming example annotation items, lines  can replicated corresponding item one annotation.  extended dataframe  must least contain column giving chosen BMD values  compute sensitivity (column BMD.zSD BMD.xfold). BMDtype type BMD used, \"zSD\" (default choice) \"xfold\". group name column extendedres coding groups want estimate global sensitivity. ECDF_plot FALSE, column factor ordered want groups appear plot bottom . ECDF_plot TRUE (default choice) groups appear ordered values BMD summary value bottom , else ordered corresponding levels factor given group. colorby given, ECDF_plot fixed FALSE. colorby optional argument naming column extendedres coding additional level grouping materialized color. missing,  ECDF_plot fixed FALSE. BMDsummary type summary used sensitivity plot, \"first.quartile\" (default choice) plot first quartiles BMD values per group, \"median\" plot medians BMD values per group \"median..IQR\" plot medians interval corresponding inter-quartile range (IQR). BMD_log_transfo TRUE, default choice, log transformation BMD used plot. line.size Width lines. line.alpha Transparency lines. point.alpha Transparency points.","code":""},{"path":"/reference/sensitivityplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"chosen summary calculated BMD values group (groups can example defined pathways biological annotation items) plotted ECDF plot (ordered BMD summary) order levels factor defining groups bottom . plot point sized according number items corresponding group. Optionally different levels (e.g. different molecular levels multi-omics approach) can coded different colors.","code":""},{"path":"/reference/sensitivityplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/sensitivityplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/sensitivityplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of a summary of BMD values per group of items — sensitivityplot","text":"","code":"# (1) An example from data published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # a dataframe with metabolomic results (output $res of bmdcalc() or bmdboot() functions) resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # a dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe # bootstrap results and annotation annotres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(annotres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport  ### an ECDFplot of 25th quantiles of BMD-zSD calculated by pathway sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\",                              BMDsummary = \"first.quartile\")   # \\donttest{  # same plot in raw BMD scale (so not in log scale)  sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\",                               BMDsummary = \"first.quartile\",                             BMD_log_transfo = FALSE)   ### Plot of 25th quantiles of BMD-zSD calculated by pathway ### in the order of the levels as defined in the group input levels(annotres$path_class) #> [1] \"Amino acid metabolism\"                       #> [2] \"Biosynthesis of other secondary metabolites\" #> [3] \"Carbohydrate metabolism\"                     #> [4] \"Energy metabolism\"                           #> [5] \"Lipid metabolism\"                            #> [6] \"Membrane transport\"                          #> [7] \"Metabolism of other amino acids\"             #> [8] \"Signal transduction\"                         #> [9] \"Translation\"                                 sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\", ECDF_plot = FALSE,                              BMDsummary = \"first.quartile\")   ### an ECDFplot of medians of BMD-zSD calculated by pathway sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\",                               BMDsummary = \"median\")   ### an ECDFplot of medians of BMD-zSD calculated by pathway ### with addition of interquartile ranges (IQRs)  sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\",                               BMDsummary = \"median.and.IQR\")    ### The same plot playing with graphical parameters  sensitivityplot(annotres, BMDtype = \"zSD\",                             group = \"path_class\",                               BMDsummary = \"median.and.IQR\",                             line.size = 1.5, line.alpha = 0.4, point.alpha = 1)                                # (2)  # An example with two molecular levels # ### Rename metabolomic results metabextendedres <- annotres  # Import the dataframe with transcriptomic results  contigresfilename <- system.file(\"extdata\", \"triclosanSVcontigres.txt\", package = \"DRomics\") contigres <- read.table(contigresfilename, header = TRUE, stringsAsFactors = TRUE) str(contigres) #> 'data.frame':\t447 obs. of  27 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ...  # Import the dataframe with functional annotation (or any other descriptor/category  # you want to use, here KEGG pathway classes)  contigannotfilename <- system.file(\"extdata\", \"triclosanSVcontigannot.txt\", package = \"DRomics\") contigannot <- read.table(contigannotfilename, header = TRUE, stringsAsFactors = TRUE) str(contigannot) #> 'data.frame':\t562 obs. of  2 variables: #>  $ contig    : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ path_class: Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  # Merging of both previous dataframes    contigextendedres <- merge(x = contigres, y = contigannot, by.x = \"id\", by.y = \"contig\") # to see the structure of this dataframe str(contigextendedres) #> 'data.frame':\t562 obs. of  28 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ... #>  $ path_class      : Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  ### Merge metabolomic and transcriptomic results extendedres <- rbind(metabextendedres, contigextendedres) extendedres$molecular.level <- factor(c(rep(\"metabolites\", nrow(metabextendedres)),                               rep(\"contigs\", nrow(contigextendedres)))) str(extendedres) #> 'data.frame':\t646 obs. of  29 variables: #>  $ id              : Factor w/ 478 levels \"NAP47_51\",\"NAP_2\",..: 1 2 3 4 4 4 4 5 6 7 ... #>  $ irow            : int  46 2 21 28 28 28 28 34 38 47 ... #>  $ adjpvalue       : num  7.16e-04 6.23e-05 1.11e-05 1.03e-05 1.03e-05 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 3 3 3 3 3 2 2 4 ... #>  $ nbpar           : int  2 3 2 2 2 2 2 3 3 5 ... #>  $ b               : num  -0.056 0.4598 -0.0595 -0.0451 -0.0451 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ e               : num  NA -1.65 NA NA NA ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.1245 0.126 0.0793 0.052 0.052 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 7 7 7 7 7 2 2 9 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 3 3 3 3 1 ... #>  $ y0              : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ yrange          : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ maxychange      : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  2.224 0.528 1.333 1.154 1.154 ... #>  $ BMR.zSD         : num  7.22 5.82 5.31 7.81 7.81 ... #>  $ BMD.xfold       : num  NA NA NA NA NA ... #>  $ BMR.xfold       : num  6.61 5.35 4.85 7.07 7.07 ... #>  $ BMD.zSD.lower   : num  0.979 0.2 0.853 0.752 0.752 ... #>  $ BMD.zSD.upper   : num  4.07 1.11 1.75 1.46 1.46 ... #>  $ BMD.xfold.lower : num  Inf Inf 7.61 Inf Inf ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  1000 957 1000 1000 1000 1000 1000 648 620 872 ... #>  $ path_class      : Factor w/ 18 levels \"Amino acid metabolism\",..: 5 5 3 3 2 6 8 5 5 5 ... #>  $ molecular.level : Factor w/ 2 levels \"contigs\",\"metabolites\": 2 2 2 2 2 2 2 2 2 2 ...  ### Plot of 25th quantiles of BMD-zSD calculated by pathway ### and colored by molecular level # optional inverse alphabetic ordering of groups for the plot extendedres$path_class <- factor(extendedres$path_class,                  levels = sort(levels(extendedres$path_class),                  decreasing = TRUE)) sensitivityplot(extendedres, BMDtype = \"zSD\",                             group = \"path_class\", colorby = \"molecular.level\",                              BMDsummary = \"first.quartile\")   ### Plot of medians and IQRs of BMD-zSD calculated by pathway ### and colored by molecular level sensitivityplot(extendedres, BMDtype = \"zSD\",                             group = \"path_class\", colorby = \"molecular.level\",                              BMDsummary = \"median.and.IQR\",                             line.size = 1.2, line.alpha = 0.4,                              point.alpha = 0.8)    # }"},{"path":"/reference/targetplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose-reponse plot for target items — targetplot","title":"Dose-reponse plot for target items — targetplot","text":"Plots dose-response raw data target items (whether response considered significant) fitted curves available.","code":""},{"path":"/reference/targetplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose-reponse plot for target items — targetplot","text":"","code":"targetplot(items, f, add.fit = TRUE, dose_log_transfo = TRUE)"},{"path":"/reference/targetplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dose-reponse plot for target items — targetplot","text":"items character vector   specifying identifiers items plot. f object class \"drcfit\". add.fit TRUE fitted curve added items selected responsive items best fit model obtained. dose_log_transfo TRUE, default choice, log transformation used dose axis.","code":""},{"path":"/reference/targetplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dose-reponse plot for target items — targetplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/targetplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dose-reponse plot for target items — targetplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/targetplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dose-reponse plot for target items — targetplot","text":"","code":"# A toy example on a very small subsample of a microarray data set)  # datafilename <- system.file(\"extdata\", \"transcripto_very_small_sample.txt\",  package=\"DRomics\")  o <- microarraydata(datafilename, check = TRUE, norm.method = \"cyclicloess\") #> Just wait, the normalization using cyclicloess may take a few minutes. s_quad <- itemselect(o, select.method = \"quadratic\", FDR = 0.01) #> Removing intercept from test coefficients f <- drcfit(s_quad, progressbar = TRUE) #> The fitting may be long if the number of selected items is high. #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100%  # Plot of chosen items with fitted curves when available  # targetitems <- c(\"88.1\", \"1\", \"3\", \"15\") targetplot(targetitems, f = f) #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # \\donttest{  # The same plot in raw scale instead of default log scale # targetplot(targetitems, f = f, dose_log_transfo = FALSE)   # The same plot in x log scale choosing x limits for plot # to enlarge the space between the control and the non null doses # if (require(ggplot2)) targetplot(targetitems, f = f, dose_log_transfo = TRUE) +          scale_x_log10(limits = c(0.1, 10)) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values. #> Warning: log-10 transformation introduced infinite values.   # The same plot without fitted curves  # targetplot(targetitems, f = f, add.fit = FALSE)   # }"},{"path":"/reference/trendplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of the repartition of trends per group — trendplot","title":"Plot of the repartition of trends per group — trendplot","text":"Provides plot repartition dose-response trends per group items.","code":""},{"path":"/reference/trendplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of the repartition of trends per group — trendplot","text":"","code":"trendplot(extendedres, group, facetby, ncol4faceting, add.color = TRUE)"},{"path":"/reference/trendplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of the repartition of trends per group — trendplot","text":"extendedres dataframe results provided drcfit (fitres) bmdcalc (res)  subset data frame (selected lines). dataframe extended  additional columns coming group (example functional  annotation items) /another level (example molecular level),  lines  can replicated corresponding item one annotation.  extended dataframe  must least contain results dose-response modelling  column giving trend (trend). group name column extendedres coding groups want see repartition dose-response trends. column factor ordered want groups appear plot bottom . facetby optional argument naming column extendedres chosen   split plot facets using ggplot2::facet_wrap (split omitted). ncol4faceting number columns faceting. add.color TRUE color added coding trend.","code":""},{"path":"/reference/trendplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of the repartition of trends per group — trendplot","text":"ggplot object.","code":""},{"path":[]},{"path":"/reference/trendplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of the repartition of trends per group — trendplot","text":"Marie-Laure Delignette-Muller","code":""},{"path":"/reference/trendplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of the repartition of trends per group — trendplot","text":"","code":"# (1)  # An example from the paper published by Larras et al. 2020 # in Journal of Hazardous Materials # https://doi.org/10.1016/j.jhazmat.2020.122727  # the dataframe with metabolomic results  resfilename <- system.file(\"extdata\", \"triclosanSVmetabres.txt\", package=\"DRomics\") res <- read.table(resfilename, header = TRUE, stringsAsFactors = TRUE) str(res) #> 'data.frame':\t31 obs. of  27 variables: #>  $ id              : Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 5 6 7 8 9 10 11 ... #>  $ irow            : int  2 21 28 34 38 47 49 51 53 67 ... #>  $ adjpvalue       : num  6.23e-05 1.11e-05 1.03e-05 1.89e-03 4.16e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 2 3 3 2 2 4 2 2 3 3 ... #>  $ nbpar           : int  3 2 2 3 3 5 3 3 2 2 ... #>  $ b               : num  0.4598 -0.0595 -0.0451 0.6011 0.6721 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ e               : num  -1.648 NA NA -0.321 -0.323 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.126 0.0793 0.052 0.2338 0.2897 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 2 7 7 2 2 9 2 2 7 7 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 1 3 3 3 3 ... #>  $ y0              : num  5.94 5.39 7.86 6.86 6.21 ... #>  $ yrange          : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ maxychange      : num  0.456 0.461 0.35 0.601 0.672 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  0.528 1.333 1.154 0.158 0.182 ... #>  $ BMR.zSD         : num  5.82 5.31 7.81 6.62 5.92 ... #>  $ BMD.xfold       : num  NA NA NA NA 0.832 ... #>  $ BMR.xfold       : num  5.35 4.85 7.07 6.17 5.59 ... #>  $ BMD.zSD.lower   : num  0.2001 0.8534 0.7519 0.0554 0.081 ... #>  $ BMD.zSD.upper   : num  1.11 1.746 1.465 0.68 0.794 ... #>  $ BMD.xfold.lower : num  Inf 7.611 Inf 0.561 0.329 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  957 1000 1000 648 620 872 909 565 1000 1000 ...  # the dataframe with annotation of each item identified in the previous file # each item may have more than one annotation (-> more than one line) annotfilename <- system.file(\"extdata\", \"triclosanSVmetabannot.txt\", package=\"DRomics\") annot <- read.table(annotfilename, header = TRUE, stringsAsFactors = TRUE) str(annot) #> 'data.frame':\t84 obs. of  2 variables: #>  $ metab.code: Factor w/ 31 levels \"NAP47_51\",\"NAP_2\",..: 2 3 4 4 4 4 5 6 7 8 ... #>  $ path_class: Factor w/ 9 levels \"Amino acid metabolism\",..: 5 3 3 2 6 8 5 5 5 5 ...  # Merging of both previous dataframes # in order to obtain an extenderes dataframe extendedres <- merge(x = res, y = annot, by.x = \"id\", by.y = \"metab.code\") head(extendedres) #>         id irow    adjpvalue       model nbpar           b  c        d #> 1 NAP47_51   46 7.158246e-04      linear     2 -0.05600559 NA 7.343571 #> 2    NAP_2    2 6.232579e-05 exponential     3  0.45981242 NA 5.941896 #> 3   NAP_23   21 1.106958e-05      linear     2 -0.05946618 NA 5.387252 #> 4   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 5   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #> 6   NAP_30   28 1.028343e-05      linear     2 -0.04507832 NA 7.859109 #>           e  f      SDres     typology trend       y0    yrange maxychange #> 1        NA NA 0.12454183        L.dec   dec 7.343571 0.4346034  0.4346034 #> 2 -1.647958 NA 0.12604568 E.dec.convex   dec 5.941896 0.4556672  0.4556672 #> 3        NA NA 0.07929266        L.dec   dec 5.387252 0.4614576  0.4614576 #> 4        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 5        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #> 6        NA NA 0.05203245        L.dec   dec 7.859109 0.3498078  0.3498078 #>   xextrem yextrem   BMD.zSD  BMR.zSD BMD.xfold BMR.xfold BMD.zSD.lower #> 1      NA      NA 2.2237393 7.219029        NA  6.609214     0.9785095 #> 2      NA      NA 0.5279668 5.815850        NA  5.347706     0.2000881 #> 3      NA      NA 1.3334076 5.307960        NA  4.848527     0.8533711 #> 4      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 5      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #> 6      NA      NA 1.1542677 7.807077        NA  7.073198     0.7518588 #>   BMD.zSD.upper BMD.xfold.lower BMD.xfold.upper nboot.successful #> 1      4.068699             Inf             Inf             1000 #> 2      1.109559             Inf             Inf              957 #> 3      1.746010        7.610936             Inf             1000 #> 4      1.464998             Inf             Inf             1000 #> 5      1.464998             Inf             Inf             1000 #> 6      1.464998             Inf             Inf             1000 #>                                    path_class #> 1                            Lipid metabolism #> 2                            Lipid metabolism #> 3                     Carbohydrate metabolism #> 4                     Carbohydrate metabolism #> 5 Biosynthesis of other secondary metabolites #> 6                          Membrane transport   # (1.a) Trendplot by pathway trendplot(extendedres, group = \"path_class\")    # \\donttest{  # (1.b) Trendplot by pathway without color trendplot(extendedres, group = \"path_class\", add.color = FALSE)    # (1.c) Reordering of the groups before plotting extendedres$path_class <- factor(extendedres$path_class,                  levels = sort(levels(extendedres$path_class), decreasing = TRUE)) trendplot(extendedres, group = \"path_class\", add.color = FALSE)    # (2)  # An example with two molecular levels # ### Rename metabolomic results metabextendedres <- extendedres  # Import the dataframe with transcriptomic results  contigresfilename <- system.file(\"extdata\", \"triclosanSVcontigres.txt\", package = \"DRomics\") contigres <- read.table(contigresfilename, header = TRUE, stringsAsFactors = TRUE) str(contigres) #> 'data.frame':\t447 obs. of  27 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ...  # Import the dataframe with functional annotation (or any other descriptor/category  # you want to use, here KEGG pathway classes)  contigannotfilename <- system.file(\"extdata\", \"triclosanSVcontigannot.txt\", package = \"DRomics\") contigannot <- read.table(contigannotfilename, header = TRUE, stringsAsFactors = TRUE) str(contigannot) #> 'data.frame':\t562 obs. of  2 variables: #>  $ contig    : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ path_class: Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  # Merging of both previous dataframes    contigextendedres <- merge(x = contigres, y = contigannot, by.x = \"id\", by.y = \"contig\") # to see the structure of this dataframe str(contigextendedres) #> 'data.frame':\t562 obs. of  28 variables: #>  $ id              : Factor w/ 447 levels \"c00134\",\"c00276\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ irow            : int  2802 39331 41217 52577 52590 53968 54508 57776 58705 60306 ... #>  $ adjpvalue       : num  2.76e-04 9.40e-07 2.89e-06 1.88e-03 1.83e-03 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 2 2 2 2 3 2 1 3 ... #>  $ nbpar           : int  2 3 3 3 3 3 2 3 4 2 ... #>  $ b               : num  -0.21794 1.49944 1.40817 0.00181 1.48605 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ e               : num  NA -2.2 -2.41 1.15 -2.31 ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.417 0.287 0.281 0.145 0.523 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 2 4 2 2 7 1 5 8 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 4 3 3 3 3 1 4 ... #>  $ y0              : num  10.9 12.4 12.4 16.4 15.3 ... #>  $ yrange          : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ maxychange      : num  1.445 1.426 1.319 0.567 1.402 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  1.913 0.467 0.536 5.073 1.004 ... #>  $ BMR.zSD         : num  10.4 12.1 12.1 16.6 14.8 ... #>  $ BMD.xfold       : num  4.98 3.88 5.13 NA NA ... #>  $ BMR.xfold       : num  9.77 11.19 11.17 18.05 13.8 ... #>  $ BMD.zSD.lower   : num  1.255 0.243 0.282 2.65 0.388 ... #>  $ BMD.zSD.upper   : num  2.759 0.825 0.925 5.573 2.355 ... #>  $ BMD.xfold.lower : num  3.94 2.32 2.79 Inf 3.06 ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  500 497 495 332 466 469 500 321 260 500 ... #>  $ path_class      : Factor w/ 17 levels \"Amino acid metabolism\",..: 3 11 11 15 8 4 3 4 8 2 ...  ### Merge metabolomic and transcriptomic results extendedres <- rbind(metabextendedres, contigextendedres) extendedres$molecular.level <- factor(c(rep(\"metabolites\", nrow(metabextendedres)),                               rep(\"contigs\", nrow(contigextendedres)))) str(extendedres) #> 'data.frame':\t646 obs. of  29 variables: #>  $ id              : Factor w/ 478 levels \"NAP47_51\",\"NAP_2\",..: 1 2 3 4 4 4 4 5 6 7 ... #>  $ irow            : int  46 2 21 28 28 28 28 34 38 47 ... #>  $ adjpvalue       : num  7.16e-04 6.23e-05 1.11e-05 1.03e-05 1.03e-05 ... #>  $ model           : Factor w/ 4 levels \"Gauss-probit\",..: 3 2 3 3 3 3 3 2 2 4 ... #>  $ nbpar           : int  2 3 2 2 2 2 2 3 3 5 ... #>  $ b               : num  -0.056 0.4598 -0.0595 -0.0451 -0.0451 ... #>  $ c               : num  NA NA NA NA NA ... #>  $ d               : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ e               : num  NA -1.65 NA NA NA ... #>  $ f               : num  NA NA NA NA NA ... #>  $ SDres           : num  0.1245 0.126 0.0793 0.052 0.052 ... #>  $ typology        : Factor w/ 10 levels \"E.dec.concave\",..: 7 2 7 7 7 7 7 2 2 9 ... #>  $ trend           : Factor w/ 4 levels \"U\",\"bell\",\"dec\",..: 3 3 3 3 3 3 3 3 3 1 ... #>  $ y0              : num  7.34 5.94 5.39 7.86 7.86 ... #>  $ yrange          : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ maxychange      : num  0.435 0.456 0.461 0.35 0.35 ... #>  $ xextrem         : num  NA NA NA NA NA ... #>  $ yextrem         : num  NA NA NA NA NA ... #>  $ BMD.zSD         : num  2.224 0.528 1.333 1.154 1.154 ... #>  $ BMR.zSD         : num  7.22 5.82 5.31 7.81 7.81 ... #>  $ BMD.xfold       : num  NA NA NA NA NA ... #>  $ BMR.xfold       : num  6.61 5.35 4.85 7.07 7.07 ... #>  $ BMD.zSD.lower   : num  0.979 0.2 0.853 0.752 0.752 ... #>  $ BMD.zSD.upper   : num  4.07 1.11 1.75 1.46 1.46 ... #>  $ BMD.xfold.lower : num  Inf Inf 7.61 Inf Inf ... #>  $ BMD.xfold.upper : num  Inf Inf Inf Inf Inf ... #>  $ nboot.successful: int  1000 957 1000 1000 1000 1000 1000 648 620 872 ... #>  $ path_class      : Factor w/ 18 levels \"Translation\",..: 5 5 7 7 8 4 2 5 5 5 ... #>  $ molecular.level : Factor w/ 2 levels \"contigs\",\"metabolites\": 2 2 2 2 2 2 2 2 2 2 ...  ### trend plot of both molecular levels # optional inverse alphabetic ordering of groups for the plot extendedres$path_class <- factor(extendedres$path_class,                  levels = sort(levels(extendedres$path_class), decreasing = TRUE)) trendplot(extendedres, group = \"path_class\", facetby = \"molecular.level\")     # }"},{"path":"/reference/zebraf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"sample RNAseq data set dose-response chronic exposure ionizing radiation zebrafish embryo fertilization 48 hours post-fertilization corresponding batch effect experiment.","code":""},{"path":"/reference/zebraf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"","code":"data(zebraf)"},{"path":"/reference/zebraf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"zebraf contains list three objects, zebraf$counts integer matrix counts reads (1000 rows sample pf 1000 transcripts 16 columns 16 sampels), zebraf$dose, numeric vector coding dose sample zebraf$batch factor coding batch sample.","code":""},{"path":[]},{"path":"/reference/zebraf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"Murat El Houdigui, S., Adam-Guillermin, C., Loro, G., Arcanjo, C., Frelon, S., Floriani, M., ... & Armant, O. 2019. systems biology approach reveals neuronal muscle developmental defects chronic exposure ionising radiation zebrafish. Scientific reports, 9(1), 1-15.","code":""},{"path":"/reference/zebraf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"Zhang, Y., Parmigiani, G., & Johnson, W. E. (2020). ComBat-seq: batch effect adjustment RNA-seq count data. NAR genomics bioinformatics, 2(3), lqaa078.","code":""},{"path":"/reference/zebraf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transcriptomic dose-response to ionizing radiation in zebrafish with batch effect — zebraf","text":"","code":"# (1) load of data # data(zebraf) str(zebraf) #> List of 3 #>  $ counts: int [1:1000, 1:16] 453 331 897 12 326 533 1948 904 583 154 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:1000] \"ENSDARG00000102141\" \"ENSDARG00000102123\" \"ENSDARG00000114503\" \"ENSDARG00000115971\" ... #>   .. ..$ : chr [1:16] \"I10_05mG_E5\" \"I10_05mG_E6\" \"I10_05mG_E7\" \"I10_C5\" ... #>  $ dose  : num [1:16] 500 500 500 0 0 0 0 50000 50000 50000 ... #>  $ batch : Factor w/ 2 levels \"I10\",\"I17\": 1 1 1 1 1 1 1 2 2 2 ...  # (2) formating of data for use in DRomics #  data4DRomics <- formatdata4DRomics(signalmatrix = zebraf$counts,                             dose = zebraf$dose)  # (3) Normalization and transformation of data followed # by PCA plot with vizualisation of the batch effect # o <- RNAseqdata(data4DRomics, transfo.method = \"vst\") #> converting counts to integer mode #> converting counts to integer mode #> Warning:  #> To optimize the dose-response modelling, it is recommended to use a #> dose-response design with at least six different tested doses. PCAdataplot(o, batch = zebraf$batch)   # \\donttest{ PCAdataplot(o, label = TRUE)   # (4) Batch effect correction using ComBat_seq{sva} #  if(!requireNamespace(\"sva\", quietly = TRUE)) { BECcounts <- ComBat_seq(as.matrix(o$raw.counts),                          batch = as.factor(zebraf$batch),                          group = as.factor(o$dose))  BECdata4DRomics <- formatdata4DRomics(signalmatrix = BECcounts,                                     dose = o$dose) (o.BEC <- RNAseqdata(BECdata4DRomics, transfo.method = \"vst\")) plot(o.BEC) PCAdataplot(o.BEC, batch = zebraf$batch) PCAdataplot(o.BEC, label = TRUE) }   # }"},{"path":"/news/index.html","id":"dromics-development-version","dir":"Changelog","previous_headings":"","what":"DRomics (development version)","title":"DRomics (development version)","text":"NEW FEATURES Add component output RNAseqdata, continuousomicdata(), continuousanchoringdata(), microarraydata() (data.sd, gives, item, sd response per condition - NA replicate condition). Add new argument drcfit(), named deltaAICminfromnullmodel, order relax requirements information criterion keep best fitted model (see ? drcfit()). Modification curvesplot() able put argument dose_log_transfo default TRUE functions. Curvesplot now use minimum maximum values chosen BMD fix rage theoretical curve calculated (plotted) ad chosen BMD required input function. Add argument dose_log_transfo plot.continuousanchoringdata(), default TRUE. plot x log scale, add label x axis. Add output drcfit named information.criterion.val information criterion value null model change names components (replacement AIC InfoCrit names). BUG FIXES Add sample names column names output formatdata4DRomics. Change default value range4boxplot (plot.RNAseqdata(), plot.continuousomicdata(), plot.microarraydata()) 0 instead 1e6 whiskers always go extrems.","code":""},{"path":"/news/index.html","id":"dromics-25-2","dir":"Changelog","previous_headings":"","what":"DRomics 2.5-2","title":"DRomics 2.5-2","text":"CRAN release: 2024-01-31 NEW FEATURES Put argument dose_log_transfo default TRUE functions plot.drcfit(), plotfit2pdf(), targetplot() BMD_log_transfo TRUE functions bmdplot(), bmdplotwithgradient() sensitivityplot(). Add argument BMD_log_transfo default TRUE functions plot.bmdcalc() plot.bmdboot(). Put argument scaling default TRUE curvesplot() bmdplotwithgradient(). Add xlab ylab plots curvesplot() (signal scaled signal y-axis) change color lab “scaled signal” plots bmdplotwithgradient() signal scaled. Add possibility (new argument addBMD curvesplot()) add points BMD-BMR values curvesplots put default TRUE. Add Peer Community Journal citation. Add function bmdfilter() proposing filters retain items associated best estimated BMD values DRomics workflow output. Add arguments line.size, line.alpha point.alpha sensitivityplot() bmdplot() Add free y scale plots residuals, make readable even anchoring data endpoints different orders magnitude. BUG FIXES Fix bug appeared occasionally bootstrap procedure (error bmdboot() due fail call uniroot()). Define scale nb items sensitivityplot() trendplot() get 4 integer values min max rounded 0.5 0.75 quartiles. Fix bug plotfit2pdf : now items appear order (p-value selection) even BMD values added plot fitted curves. Fix bug drcfit occur anchoring data sets many NA values.","code":""},{"path":"/news/index.html","id":"dromics-25-0","dir":"Changelog","previous_headings":"","what":"DRomics 2.5-0","title":"DRomics 2.5-0","text":"CRAN release: 2023-01-24 NEW FEATURES Add function selectgroups() select represented /sensitive groups focus biological interpretation. Add RNAseq data batch effect (zebraf) example use ComBat_seq{sva} correct batch effect. Add PCAdataplot() function visualize omic data. Add column named maxychange (maximal absolute y change () control) output drcfit() (bmdcalc() bmdboot()) Add argument named scaling curvesplot() bmdplotwithgradient() enables scaling shifted signal (y - y0) dividing maxychange (new output drcfit). Add function formatdata4DRomics() format data DRomics matrix signal measurements vector observed/tested doses. Add range4boxplot default fixed 1e6 arguments plot functions RNAseqdata(), microarraydata() continuousomicdata() objects, prevent automatic plot many outliers individual points produce lighter plot files. Change default value transfo.method RNAseqdata() (put “vst” number samples larger 30) BUG FIXES Make sensitivityplot works even BMDsummary given input (“first.quartile” defined default)","code":""},{"path":"/news/index.html","id":"dromics-24-0","dir":"Changelog","previous_headings":"","what":"DRomics 2.4-0","title":"DRomics 2.4-0","text":"CRAN release: 2022-01-06 NEW FEATURES Forbid use “ANOVA” method select items half doses without replicates (e.g. situ data) Add example data set named insitu_RNAseq_sample.txt tests examples Add arguments BMDoutput BMDtype plot.drcfit() plotfit2pdf make possible add BMD values confidence intervals plot fits. Add argument (enablesfequal0inGP) default TRUE drcfit(), enable simplification Gauss-probit model 5 parameters version f = 0 (corresponds probit model) prevent overfitting parameter f close 0 (evaluated using information criterion). Add argument (enablesfequal0inLGP) default TRUE drcfit(), enable simplification log-Gauss-probit model 5 parameters version f = 0 (corresponds log-probit model) prevent overfitting parameter f close 0 (evaluated using information criterion). Add argument (preventsfitsoutofrange) default TRUE drcfit() prevent fits biphasic models giving extreme value range observed signal, happen rare cases. Add defensive code microarraydata(), continuousomicdata(), continuousanchoringdata(), RNAseqdata(), argument backgrounddose added prevent use DRomics design dose zero. case observationnal data, prevent calculation BMDs extrapolation, doses considered corresponding background exposition must fixed 0, example using new argument.","code":""},{"path":"/news/index.html","id":"dromics-23-0","dir":"Changelog","previous_headings":"","what":"DRomics 2.3-0","title":"DRomics 2.3-0","text":"CRAN release: 2021-10-04 NEW FEATURES argument facetby2 added bmdplotwithgradient() curvesplot() able split plots rows columns using facet_grid(). Add function trendplot() plot repartition dose-response trend per group items. Add function sensitivityplot() plot various summaries BMD values per group items. Add function bmdplot() takes extendedres first argument trendplot(), bmdplotwithgradient(), sensitivityplot() curvesplot(). Removing drcfit() argument sigmoid.model confusing users useful common use package.","code":""},{"path":"/news/index.html","id":"dromics-22-0","dir":"Changelog","previous_headings":"","what":"DRomics 2.2-0","title":"DRomics 2.2-0","text":"CRAN release: 2021-02-09 NEW FEATURES second-order Akaike criterion (AICc) recommended prevent overfitting small number data poinst dose-response crives implemented defined default option argument information.criterion drcfit(). example file package (?DRomics) replaced vignette help use package Shiny application. Improvement computation low BMD values designs high ratio maximal minimal (non null) tested doses, add two arguments bmdcalc, minBMD ratio2switchinlog. Add two columns output bmdcalc (BMR.zSD BMR.xfold) Add function plotfit2pdf() plot fits (residual plots) pdf file, using raw scale log scale dose removing option saveplot2pdf drcfit(). Replacement class ‘metabolomicdata’ class ‘continuousomicdata’ add function continuousomicdata() called metabolomicdata() used types continuous omics data proteomics data. default color changed bmdplotwithgradient() (green replaced blue color blind people) Removing three four datasets Zou et al. 2017 make package lighter Add test residuals heteroscedasticity output drcfit: residualtests BUG FIXES handling RNAseqdata() cases vst() may give stop message.","code":""},{"path":"/news/index.html","id":"dromics-21-3","dir":"Changelog","previous_headings":"","what":"DRomics 2.1-3","title":"DRomics 2.1-3","text":"CRAN release: 2020-09-23 NEW FEATURES Add function bmdplotwithgradient() Add function ecdfquantileplot() Add argument named information.criterion drcfit() choose use AIC BIC best fit model selection process. Add possibility enter data R object class data.frame Add published datasets (Zhou et al. 2017, Larras et al. 2020) corresponding help pages Add function continuousanchoringdata modification itemselect() enable selection significant responses continuous anchoring data. Add argument dose_log_transfo plot.drcfit enable use log tranformation x-axis. Add element list drcfit() output : unfitres giving information selected items modelling step successful Add function plot raw data target items optionally fitted curves items selected step 2 step 3 successful (new function targetplot()). Add argument transfo.blind RNAseqdata() Add argument free.y.scales curvesplot() enable free y scales facets dose_log_transfo use x log scale plot calculation signal. Add examples DRomics.Rd help multi-omics approach Add argument round.counts enable rounding read counts come Kallisto Salmon. BUG FIXES make direct use varianceStabilizingTransformation() automatic small RNAseq data sets (low number items: < 1000) fix bug RNAseqdata() occured using vst() small datasets.","code":""},{"path":"/news/index.html","id":"dromics-20-1","dir":"Changelog","previous_headings":"","what":"DRomics 2.0-1","title":"DRomics 2.0-1","text":"CRAN release: 2019-09-16 NEW FEATURES Add filter itemselect(), exclude selection items high proportion non detected values (assuming imputed common minimum value). Add argument point.type enables change point type , ecdfplotwithCI coding given factor. Add argument plot.type function plot.drcfit() enable residual plots.","code":""},{"path":"/news/index.html","id":"dromics-20-0","dir":"Changelog","previous_headings":"","what":"DRomics 2.0-0","title":"DRomics 2.0-0","text":"NEW FEATURES Replacement function omicdata() function microarraydata() add two new data importation functions, RNAseqdata() metabolomicdata().","code":""},{"path":"/news/index.html","id":"dromics-11-3","dir":"Changelog","previous_headings":"","what":"DRomics 1.1-3","title":"DRomics 1.1-3","text":"NEW FEATURES Replacement argument named bytypology plot.bmdcalc argument named can taka three values, “none”, “trend”, “model” “typology”. Add function plot fitted curves (new function curvesplot()).","code":""},{"path":"/news/index.html","id":"dromics-11-2","dir":"Changelog","previous_headings":"","what":"DRomics 1.1-2","title":"DRomics 1.1-2","text":"NEW FEATURES Add function plot distribution variable ecdf plot, confidence intervals variable (new function ecdfplotwithCI)","code":""},{"path":"/news/index.html","id":"dromics-11-1","dir":"Changelog","previous_headings":"","what":"DRomics 1.1-1","title":"DRomics 1.1-1","text":"NEW FEATURES Add bootstrap computation confidence intervals benchmark doses (new function bmdboot) Add function plot distribution variable ecdf plot, confidence intervals variable (new function ecdfplotwithCI)","code":""},{"path":"/news/index.html","id":"dromics-10-1","dir":"Changelog","previous_headings":"","what":"DRomics 1.0-1","title":"DRomics 1.0-1","text":"NEW FEATURES Add column yextrem results drcfit (y value extremum biphasic curves)","code":""},{"path":"/news/index.html","id":"dromics-10-0","dir":"Changelog","previous_headings":"","what":"DRomics 1.0-0","title":"DRomics 1.0-0","text":"Initial release.","code":""}]
